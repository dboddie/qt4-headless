Index: qt4-x11-4.6.2/include/ActiveQt/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/ActiveQt/headers.pri	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/ActiveQt/headers.pri	2010-04-13 18:06:58.213855821 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = qaxbase.h qaxobject.h qaxscript.h qaxselect.h qaxwidget.h qaxaggregated.h qaxbindable.h qaxfactory.h qaxtypes.h ../../../../../../../../../../../../../../../../../../../../../include/ActiveQt/ActiveQt 
+SYNCQT.HEADER_FILES = qaxbase.h qaxobject.h qaxscript.h qaxselect.h qaxwidget.h qaxaggregated.h qaxbindable.h qaxfactory.h qaxtypes.h ../../../../../../../../../../../../../../../../../include/ActiveQt/ActiveQt 
 SYNCQT.HEADER_CLASSES = ../../../include/ActiveQt/QAxBase ../../../include/ActiveQt/QAxObject ../../../include/ActiveQt/QAxScriptEngine ../../../include/ActiveQt/QAxScript ../../../include/ActiveQt/QAxScriptManager ../../../include/ActiveQt/QAxSelect ../../../include/ActiveQt/QAxWidget ../../../include/ActiveQt/QAxAggregated ../../../include/ActiveQt/QAxBindable ../../../include/ActiveQt/QAxFactory ../../../include/ActiveQt/QAxClass 
 SYNCQT.PRIVATE_HEADER_FILES = 
Index: qt4-x11-4.6.2/include/Qt3Support/Qt3Support
===================================================================
--- qt4-x11-4.6.2.orig/include/Qt3Support/Qt3Support	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/Qt3Support/Qt3Support	2010-04-13 18:06:58.217854862 -0400
@@ -28,6 +28,28 @@
 #include "q3vgroupbox.h"
 #include "q3whatsthis.h"
 #include "q3widgetstack.h"
+#include "q3canvas.h"
+#include "q3iconview.h"
+#include "q3listbox.h"
+#include "q3listview.h"
+#include "q3table.h"
+#include "q3accel.h"
+#include "q3boxlayout.h"
+#include "q3dragobject.h"
+#include "q3dropsite.h"
+#include "q3gridlayout.h"
+#include "q3mimefactory.h"
+#include "q3polygonscanner.h"
+#include "q3process.h"
+#include "qiconset.h"
+#include "q3filedialog.h"
+#include "q3progressdialog.h"
+#include "q3tabdialog.h"
+#include "q3wizard.h"
+#include "q3paintdevicemetrics.h"
+#include "q3painter.h"
+#include "q3picture.h"
+#include "q3pointarray.h"
 #include "q3databrowser.h"
 #include "q3datatable.h"
 #include "q3dataview.h"
@@ -58,19 +80,6 @@
 #include "q3textedit.h"
 #include "q3textstream.h"
 #include "q3textview.h"
-#include "q3filedialog.h"
-#include "q3progressdialog.h"
-#include "q3tabdialog.h"
-#include "q3wizard.h"
-#include "q3accel.h"
-#include "q3boxlayout.h"
-#include "q3dragobject.h"
-#include "q3dropsite.h"
-#include "q3gridlayout.h"
-#include "q3mimefactory.h"
-#include "q3polygonscanner.h"
-#include "q3process.h"
-#include "qiconset.h"
 #include "q3asciicache.h"
 #include "q3asciidict.h"
 #include "q3cache.h"
@@ -103,13 +112,4 @@
 #include "q3valuelist.h"
 #include "q3valuestack.h"
 #include "q3valuevector.h"
-#include "q3iconview.h"
-#include "q3listbox.h"
-#include "q3listview.h"
-#include "q3table.h"
-#include "q3paintdevicemetrics.h"
-#include "q3painter.h"
-#include "q3picture.h"
-#include "q3pointarray.h"
-#include "q3canvas.h"
 #endif
Index: qt4-x11-4.6.2/include/Qt3Support/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/Qt3Support/headers.pri	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/Qt3Support/headers.pri	2010-04-13 18:06:58.217854862 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../qt3support/widgets/q3action.h ../qt3support/widgets/q3button.h ../qt3support/widgets/q3buttongroup.h ../qt3support/widgets/q3combobox.h ../qt3support/widgets/q3datetimeedit.h ../qt3support/widgets/q3dockarea.h ../qt3support/widgets/q3dockwindow.h ../qt3support/widgets/q3frame.h ../qt3support/widgets/q3grid.h ../qt3support/widgets/q3gridview.h ../qt3support/widgets/q3groupbox.h ../qt3support/widgets/q3hbox.h ../qt3support/widgets/q3header.h ../qt3support/widgets/q3hgroupbox.h ../qt3support/widgets/q3mainwindow.h ../qt3support/widgets/q3popupmenu.h ../qt3support/widgets/q3progressbar.h ../qt3support/widgets/q3rangecontrol.h ../qt3support/widgets/q3scrollview.h ../qt3support/widgets/q3toolbar.h ../qt3support/widgets/q3vbox.h ../qt3support/widgets/q3vgroupbox.h ../qt3support/widgets/q3whatsthis.h ../qt3support/widgets/q3widgetstack.h ../qt3support/sql/q3databrowser.h ../qt3support/sql/q3datatable.h ../qt3support/sql/q3dataview.h ../qt3support/sql/q3editorfactory.h ../qt3support/sql/q3sqlcursor.h ../qt3support/sql/q3sqleditorfactory.h ../qt3support/sql/q3sqlfieldinfo.h ../qt3support/sql/q3sqlform.h ../qt3support/sql/q3sqlpropertymap.h ../qt3support/sql/q3sqlrecordinfo.h ../qt3support/sql/q3sqlselectcursor.h ../qt3support/network/q3dns.h ../qt3support/network/q3ftp.h ../qt3support/network/q3http.h ../qt3support/network/q3localfs.h ../qt3support/network/q3network.h ../qt3support/network/q3networkprotocol.h ../qt3support/network/q3serversocket.h ../qt3support/network/q3socket.h ../qt3support/network/q3socketdevice.h ../qt3support/network/q3url.h ../qt3support/network/q3urloperator.h ../qt3support/text/q3multilineedit.h ../qt3support/text/q3simplerichtext.h ../qt3support/text/q3stylesheet.h ../qt3support/text/q3syntaxhighlighter.h ../qt3support/text/q3textbrowser.h ../qt3support/text/q3textedit.h ../qt3support/text/q3textstream.h ../qt3support/text/q3textview.h ../qt3support/dialogs/q3filedialog.h ../qt3support/dialogs/q3progressdialog.h ../qt3support/dialogs/q3tabdialog.h ../qt3support/dialogs/q3wizard.h ../qt3support/other/q3accel.h ../qt3support/other/q3boxlayout.h ../qt3support/other/q3dragobject.h ../qt3support/other/q3dropsite.h ../qt3support/other/q3gridlayout.h ../qt3support/other/q3mimefactory.h ../qt3support/other/q3polygonscanner.h ../qt3support/other/q3process.h ../qt3support/other/qiconset.h ../qt3support/tools/q3asciicache.h ../qt3support/tools/q3asciidict.h ../qt3support/tools/q3cache.h ../qt3support/tools/q3cleanuphandler.h ../qt3support/tools/q3cstring.h ../qt3support/tools/q3deepcopy.h ../qt3support/tools/q3dict.h ../qt3support/tools/q3garray.h ../qt3support/tools/q3gcache.h ../qt3support/tools/q3gdict.h ../qt3support/tools/q3glist.h ../qt3support/tools/q3gvector.h ../qt3support/tools/q3intcache.h ../qt3support/tools/q3intdict.h ../qt3support/tools/q3memarray.h ../qt3support/tools/q3objectdict.h ../qt3support/tools/q3ptrcollection.h ../qt3support/tools/q3ptrdict.h ../qt3support/tools/q3ptrlist.h ../qt3support/tools/q3ptrqueue.h ../qt3support/tools/q3ptrstack.h ../qt3support/tools/q3ptrvector.h ../qt3support/tools/q3semaphore.h ../qt3support/tools/q3shared.h ../qt3support/tools/q3signal.h ../qt3support/tools/q3sortedlist.h ../qt3support/tools/q3strlist.h ../qt3support/tools/q3strvec.h ../qt3support/tools/q3tl.h ../qt3support/tools/q3valuelist.h ../qt3support/tools/q3valuestack.h ../qt3support/tools/q3valuevector.h ../qt3support/itemviews/q3iconview.h ../qt3support/itemviews/q3listbox.h ../qt3support/itemviews/q3listview.h ../qt3support/itemviews/q3table.h ../qt3support/painting/q3paintdevicemetrics.h ../qt3support/painting/q3painter.h ../qt3support/painting/q3picture.h ../qt3support/painting/q3pointarray.h ../qt3support/canvas/q3canvas.h ../../include/Qt3Support/Qt3Support 
-SYNCQT.HEADER_CLASSES = ../../include/Qt3Support/Q3Action ../../include/Qt3Support/Q3ActionGroup ../../include/Qt3Support/Q3Button ../../include/Qt3Support/Q3ButtonGroup ../../include/Qt3Support/Q3VButtonGroup ../../include/Qt3Support/Q3HButtonGroup ../../include/Qt3Support/Q3ComboBox ../../include/Qt3Support/Q3DateTimeEditBase ../../include/Qt3Support/Q3DateEdit ../../include/Qt3Support/Q3TimeEdit ../../include/Qt3Support/Q3DateTimeEdit ../../include/Qt3Support/Q3DockAreaLayout ../../include/Qt3Support/Q3DockArea ../../include/Qt3Support/Q3DockWindow ../../include/Qt3Support/Q3Frame ../../include/Qt3Support/Q3Grid ../../include/Qt3Support/Q3GridView ../../include/Qt3Support/Q3GroupBox ../../include/Qt3Support/Q3HBox ../../include/Qt3Support/Q3Header ../../include/Qt3Support/Q3HGroupBox ../../include/Qt3Support/Q3MainWindow ../../include/Qt3Support/Q3PopupMenu ../../include/Qt3Support/Q3ProgressBar ../../include/Qt3Support/Q3RangeControl ../../include/Qt3Support/Q3SpinWidget ../../include/Qt3Support/Q3ScrollView ../../include/Qt3Support/Q3ToolBar ../../include/Qt3Support/Q3VBox ../../include/Qt3Support/Q3VGroupBox ../../include/Qt3Support/Q3WhatsThis ../../include/Qt3Support/Q3WidgetStack ../../include/Qt3Support/Q3DataBrowser ../../include/Qt3Support/Q3DataTable ../../include/Qt3Support/Q3DataView ../../include/Qt3Support/Q3EditorFactory ../../include/Qt3Support/Q3SqlCursor ../../include/Qt3Support/Q3SqlEditorFactory ../../include/Qt3Support/Q3SqlFieldInfo ../../include/Qt3Support/Q3SqlForm ../../include/Qt3Support/Q3SqlPropertyMap ../../include/Qt3Support/Q3SqlFieldInfoList ../../include/Qt3Support/Q3SqlRecordInfo ../../include/Qt3Support/Q3SqlSelectCursor ../../include/Qt3Support/Q3Dns ../../include/Qt3Support/Q3DnsSocket ../../include/Qt3Support/Q3Ftp ../../include/Qt3Support/Q3HttpHeader ../../include/Qt3Support/Q3HttpResponseHeader ../../include/Qt3Support/Q3HttpRequestHeader ../../include/Qt3Support/Q3Http ../../include/Qt3Support/Q3LocalFs ../../include/Qt3Support/Q3NetworkProtocolFactoryBase ../../include/Qt3Support/Q3NetworkProtocolFactory ../../include/Qt3Support/Q3NetworkProtocolDict ../../include/Qt3Support/Q3NetworkProtocol ../../include/Qt3Support/Q3NetworkOperation ../../include/Qt3Support/Q3ServerSocket ../../include/Qt3Support/Q3Socket ../../include/Qt3Support/Q3SocketDevice ../../include/Qt3Support/Q3Url ../../include/Qt3Support/Q3UrlOperator ../../include/Qt3Support/Q3MultiLineEdit ../../include/Qt3Support/Q3SimpleRichText ../../include/Qt3Support/Q3StyleSheetItem ../../include/Qt3Support/Q3StyleSheet ../../include/Qt3Support/Q3SyntaxHighlighter ../../include/Qt3Support/Q3TextBrowser ../../include/Qt3Support/Q3TextEditOptimPrivate ../../include/Qt3Support/Q3TextEdit ../../include/Qt3Support/Q3TextStream ../../include/Qt3Support/Q3TSFUNC ../../include/Qt3Support/Q3TextView ../../include/Qt3Support/Q3FileIconProvider ../../include/Qt3Support/Q3FilePreview ../../include/Qt3Support/Q3FileDialog ../../include/Qt3Support/Q3ProgressDialog ../../include/Qt3Support/Q3TabDialog ../../include/Qt3Support/Q3Wizard ../../include/Qt3Support/Q3Accel ../../include/Qt3Support/Q3BoxLayout ../../include/Qt3Support/Q3HBoxLayout ../../include/Qt3Support/Q3VBoxLayout ../../include/Qt3Support/Q3DragObject ../../include/Qt3Support/Q3StoredDrag ../../include/Qt3Support/Q3TextDrag ../../include/Qt3Support/Q3ImageDrag ../../include/Qt3Support/Q3UriDrag ../../include/Qt3Support/Q3ColorDrag ../../include/Qt3Support/Q3DropSite ../../include/Qt3Support/Q3GridLayout ../../include/Qt3Support/Q3MimeSourceFactory ../../include/Qt3Support/Q3PolygonScanner ../../include/Qt3Support/Q3Process ../../include/Qt3Support/Q3AsciiCache ../../include/Qt3Support/Q3AsciiCacheIterator ../../include/Qt3Support/Q3AsciiDict ../../include/Qt3Support/Q3AsciiDictIterator ../../include/Qt3Support/Q3Cache ../../include/Qt3Support/Q3CacheIterator ../../include/Qt3Support/Q3CleanupHandler ../../include/Qt3Support/Q3SingleCleanupHandler ../../include/Qt3Support/Q3CString ../../include/Qt3Support/Q3DeepCopy ../../include/Qt3Support/Q3Dict ../../include/Qt3Support/Q3DictIterator ../../include/Qt3Support/Q3GArray ../../include/Qt3Support/Q3GCache ../../include/Qt3Support/Q3GCacheIterator ../../include/Qt3Support/Q3BaseBucket ../../include/Qt3Support/Q3StringBucket ../../include/Qt3Support/Q3AsciiBucket ../../include/Qt3Support/Q3IntBucket ../../include/Qt3Support/Q3PtrBucket ../../include/Qt3Support/Q3GDict ../../include/Qt3Support/Q3GDictIterator ../../include/Qt3Support/Q3LNode ../../include/Qt3Support/Q3GList ../../include/Qt3Support/Q3GListIterator ../../include/Qt3Support/Q3GListStdIterator ../../include/Qt3Support/Q3GVector ../../include/Qt3Support/Q3IntCache ../../include/Qt3Support/Q3IntCacheIterator ../../include/Qt3Support/Q3IntDict ../../include/Qt3Support/Q3IntDictIterator ../../include/Qt3Support/Q3MemArray ../../include/Qt3Support/Q3ObjectDictionary ../../include/Qt3Support/Q3PtrCollection ../../include/Qt3Support/Q3PtrDict ../../include/Qt3Support/Q3PtrDictIterator ../../include/Qt3Support/Q3PtrListStdIterator ../../include/Qt3Support/Q3PtrList ../../include/Qt3Support/Q3PtrListIterator ../../include/Qt3Support/Q3PtrQueue ../../include/Qt3Support/Q3PtrStack ../../include/Qt3Support/Q3PtrVector ../../include/Qt3Support/Q3Semaphore ../../include/Qt3Support/Q3Shared ../../include/Qt3Support/Q3Signal ../../include/Qt3Support/Q3SortedList ../../include/Qt3Support/Q3StrListIterator ../../include/Qt3Support/Q3StrList ../../include/Qt3Support/Q3StrIList ../../include/Qt3Support/Q3StrVec ../../include/Qt3Support/Q3StrIVec ../../include/Qt3Support/Q3ValueListIterator ../../include/Qt3Support/Q3ValueListConstIterator ../../include/Qt3Support/Q3ValueList ../../include/Qt3Support/Q3ValueStack ../../include/Qt3Support/Q3ValueVector ../../include/Qt3Support/Q3IconDragItem ../../include/Qt3Support/Q3IconDrag ../../include/Qt3Support/Q3IconViewItem ../../include/Qt3Support/Q3IconView ../../include/Qt3Support/Q3ListBox ../../include/Qt3Support/Q3ListBoxItem ../../include/Qt3Support/Q3ListBoxText ../../include/Qt3Support/Q3ListBoxPixmap ../../include/Qt3Support/Q3ListViewItem ../../include/Qt3Support/Q3ListView ../../include/Qt3Support/Q3CheckListItem ../../include/Qt3Support/Q3ListViewItemIterator ../../include/Qt3Support/Q3TableSelection ../../include/Qt3Support/Q3TableItem ../../include/Qt3Support/Q3ComboTableItem ../../include/Qt3Support/Q3CheckTableItem ../../include/Qt3Support/Q3Table ../../include/Qt3Support/Q3PaintDeviceMetrics ../../include/Qt3Support/Q3Painter ../../include/Qt3Support/Q3Picture ../../include/Qt3Support/Q3PointArray ../../include/Qt3Support/Q3CanvasItemList ../../include/Qt3Support/Q3CanvasItem ../../include/Qt3Support/Q3Canvas ../../include/Qt3Support/Q3CanvasView ../../include/Qt3Support/Q3CanvasPixmap ../../include/Qt3Support/Q3CanvasPixmapArray ../../include/Qt3Support/Q3CanvasSprite ../../include/Qt3Support/Q3CanvasPolygonalItem ../../include/Qt3Support/Q3CanvasRectangle ../../include/Qt3Support/Q3CanvasPolygon ../../include/Qt3Support/Q3CanvasSpline ../../include/Qt3Support/Q3CanvasLine ../../include/Qt3Support/Q3CanvasEllipse ../../include/Qt3Support/Q3CanvasText 
-SYNCQT.PRIVATE_HEADER_FILES = ../qt3support/widgets/q3mainwindow_p.h ../qt3support/widgets/q3titlebar_p.h ../qt3support/sql/q3sqlmanager_p.h ../qt3support/text/q3richtext_p.h ../qt3support/text/q3syntaxhighlighter_p.h ../qt3support/other/q3membuf_p.h ../qt3support/other/qt_compat_pch.h ../qt3support/painting/q3paintengine_svg_p.h 
+SYNCQT.HEADER_FILES = ../qt3support/widgets/q3action.h ../qt3support/widgets/q3button.h ../qt3support/widgets/q3buttongroup.h ../qt3support/widgets/q3combobox.h ../qt3support/widgets/q3datetimeedit.h ../qt3support/widgets/q3dockarea.h ../qt3support/widgets/q3dockwindow.h ../qt3support/widgets/q3frame.h ../qt3support/widgets/q3grid.h ../qt3support/widgets/q3gridview.h ../qt3support/widgets/q3groupbox.h ../qt3support/widgets/q3hbox.h ../qt3support/widgets/q3header.h ../qt3support/widgets/q3hgroupbox.h ../qt3support/widgets/q3mainwindow.h ../qt3support/widgets/q3popupmenu.h ../qt3support/widgets/q3progressbar.h ../qt3support/widgets/q3rangecontrol.h ../qt3support/widgets/q3scrollview.h ../qt3support/widgets/q3toolbar.h ../qt3support/widgets/q3vbox.h ../qt3support/widgets/q3vgroupbox.h ../qt3support/widgets/q3whatsthis.h ../qt3support/widgets/q3widgetstack.h ../qt3support/canvas/q3canvas.h ../qt3support/itemviews/q3iconview.h ../qt3support/itemviews/q3listbox.h ../qt3support/itemviews/q3listview.h ../qt3support/itemviews/q3table.h ../qt3support/other/q3accel.h ../qt3support/other/q3boxlayout.h ../qt3support/other/q3dragobject.h ../qt3support/other/q3dropsite.h ../qt3support/other/q3gridlayout.h ../qt3support/other/q3mimefactory.h ../qt3support/other/q3polygonscanner.h ../qt3support/other/q3process.h ../qt3support/other/qiconset.h ../qt3support/dialogs/q3filedialog.h ../qt3support/dialogs/q3progressdialog.h ../qt3support/dialogs/q3tabdialog.h ../qt3support/dialogs/q3wizard.h ../qt3support/painting/q3paintdevicemetrics.h ../qt3support/painting/q3painter.h ../qt3support/painting/q3picture.h ../qt3support/painting/q3pointarray.h ../qt3support/sql/q3databrowser.h ../qt3support/sql/q3datatable.h ../qt3support/sql/q3dataview.h ../qt3support/sql/q3editorfactory.h ../qt3support/sql/q3sqlcursor.h ../qt3support/sql/q3sqleditorfactory.h ../qt3support/sql/q3sqlfieldinfo.h ../qt3support/sql/q3sqlform.h ../qt3support/sql/q3sqlpropertymap.h ../qt3support/sql/q3sqlrecordinfo.h ../qt3support/sql/q3sqlselectcursor.h ../qt3support/network/q3dns.h ../qt3support/network/q3ftp.h ../qt3support/network/q3http.h ../qt3support/network/q3localfs.h ../qt3support/network/q3network.h ../qt3support/network/q3networkprotocol.h ../qt3support/network/q3serversocket.h ../qt3support/network/q3socket.h ../qt3support/network/q3socketdevice.h ../qt3support/network/q3url.h ../qt3support/network/q3urloperator.h ../qt3support/text/q3multilineedit.h ../qt3support/text/q3simplerichtext.h ../qt3support/text/q3stylesheet.h ../qt3support/text/q3syntaxhighlighter.h ../qt3support/text/q3textbrowser.h ../qt3support/text/q3textedit.h ../qt3support/text/q3textstream.h ../qt3support/text/q3textview.h ../qt3support/tools/q3asciicache.h ../qt3support/tools/q3asciidict.h ../qt3support/tools/q3cache.h ../qt3support/tools/q3cleanuphandler.h ../qt3support/tools/q3cstring.h ../qt3support/tools/q3deepcopy.h ../qt3support/tools/q3dict.h ../qt3support/tools/q3garray.h ../qt3support/tools/q3gcache.h ../qt3support/tools/q3gdict.h ../qt3support/tools/q3glist.h ../qt3support/tools/q3gvector.h ../qt3support/tools/q3intcache.h ../qt3support/tools/q3intdict.h ../qt3support/tools/q3memarray.h ../qt3support/tools/q3objectdict.h ../qt3support/tools/q3ptrcollection.h ../qt3support/tools/q3ptrdict.h ../qt3support/tools/q3ptrlist.h ../qt3support/tools/q3ptrqueue.h ../qt3support/tools/q3ptrstack.h ../qt3support/tools/q3ptrvector.h ../qt3support/tools/q3semaphore.h ../qt3support/tools/q3shared.h ../qt3support/tools/q3signal.h ../qt3support/tools/q3sortedlist.h ../qt3support/tools/q3strlist.h ../qt3support/tools/q3strvec.h ../qt3support/tools/q3tl.h ../qt3support/tools/q3valuelist.h ../qt3support/tools/q3valuestack.h ../qt3support/tools/q3valuevector.h ../../include/Qt3Support/Qt3Support 
+SYNCQT.HEADER_CLASSES = ../../include/Qt3Support/Q3Action ../../include/Qt3Support/Q3ActionGroup ../../include/Qt3Support/Q3Button ../../include/Qt3Support/Q3ButtonGroup ../../include/Qt3Support/Q3VButtonGroup ../../include/Qt3Support/Q3HButtonGroup ../../include/Qt3Support/Q3ComboBox ../../include/Qt3Support/Q3DateTimeEditBase ../../include/Qt3Support/Q3DateEdit ../../include/Qt3Support/Q3TimeEdit ../../include/Qt3Support/Q3DateTimeEdit ../../include/Qt3Support/Q3DockAreaLayout ../../include/Qt3Support/Q3DockArea ../../include/Qt3Support/Q3DockWindow ../../include/Qt3Support/Q3Frame ../../include/Qt3Support/Q3Grid ../../include/Qt3Support/Q3GridView ../../include/Qt3Support/Q3GroupBox ../../include/Qt3Support/Q3HBox ../../include/Qt3Support/Q3Header ../../include/Qt3Support/Q3HGroupBox ../../include/Qt3Support/Q3MainWindow ../../include/Qt3Support/Q3PopupMenu ../../include/Qt3Support/Q3ProgressBar ../../include/Qt3Support/Q3RangeControl ../../include/Qt3Support/Q3SpinWidget ../../include/Qt3Support/Q3ScrollView ../../include/Qt3Support/Q3ToolBar ../../include/Qt3Support/Q3VBox ../../include/Qt3Support/Q3VGroupBox ../../include/Qt3Support/Q3WhatsThis ../../include/Qt3Support/Q3WidgetStack ../../include/Qt3Support/Q3CanvasItemList ../../include/Qt3Support/Q3CanvasItem ../../include/Qt3Support/Q3Canvas ../../include/Qt3Support/Q3CanvasView ../../include/Qt3Support/Q3CanvasPixmap ../../include/Qt3Support/Q3CanvasPixmapArray ../../include/Qt3Support/Q3CanvasSprite ../../include/Qt3Support/Q3CanvasPolygonalItem ../../include/Qt3Support/Q3CanvasRectangle ../../include/Qt3Support/Q3CanvasPolygon ../../include/Qt3Support/Q3CanvasSpline ../../include/Qt3Support/Q3CanvasLine ../../include/Qt3Support/Q3CanvasEllipse ../../include/Qt3Support/Q3CanvasText ../../include/Qt3Support/Q3IconDragItem ../../include/Qt3Support/Q3IconDrag ../../include/Qt3Support/Q3IconViewItem ../../include/Qt3Support/Q3IconView ../../include/Qt3Support/Q3ListBox ../../include/Qt3Support/Q3ListBoxItem ../../include/Qt3Support/Q3ListBoxText ../../include/Qt3Support/Q3ListBoxPixmap ../../include/Qt3Support/Q3ListViewItem ../../include/Qt3Support/Q3ListView ../../include/Qt3Support/Q3CheckListItem ../../include/Qt3Support/Q3ListViewItemIterator ../../include/Qt3Support/Q3TableSelection ../../include/Qt3Support/Q3TableItem ../../include/Qt3Support/Q3ComboTableItem ../../include/Qt3Support/Q3CheckTableItem ../../include/Qt3Support/Q3Table ../../include/Qt3Support/Q3Accel ../../include/Qt3Support/Q3BoxLayout ../../include/Qt3Support/Q3HBoxLayout ../../include/Qt3Support/Q3VBoxLayout ../../include/Qt3Support/Q3DragObject ../../include/Qt3Support/Q3StoredDrag ../../include/Qt3Support/Q3TextDrag ../../include/Qt3Support/Q3ImageDrag ../../include/Qt3Support/Q3UriDrag ../../include/Qt3Support/Q3ColorDrag ../../include/Qt3Support/Q3DropSite ../../include/Qt3Support/Q3GridLayout ../../include/Qt3Support/Q3MimeSourceFactory ../../include/Qt3Support/Q3PolygonScanner ../../include/Qt3Support/Q3Process ../../include/Qt3Support/Q3FileIconProvider ../../include/Qt3Support/Q3FilePreview ../../include/Qt3Support/Q3FileDialog ../../include/Qt3Support/Q3ProgressDialog ../../include/Qt3Support/Q3TabDialog ../../include/Qt3Support/Q3Wizard ../../include/Qt3Support/Q3PaintDeviceMetrics ../../include/Qt3Support/Q3Painter ../../include/Qt3Support/Q3Picture ../../include/Qt3Support/Q3PointArray ../../include/Qt3Support/Q3DataBrowser ../../include/Qt3Support/Q3DataTable ../../include/Qt3Support/Q3DataView ../../include/Qt3Support/Q3EditorFactory ../../include/Qt3Support/Q3SqlCursor ../../include/Qt3Support/Q3SqlEditorFactory ../../include/Qt3Support/Q3SqlFieldInfo ../../include/Qt3Support/Q3SqlForm ../../include/Qt3Support/Q3SqlPropertyMap ../../include/Qt3Support/Q3SqlFieldInfoList ../../include/Qt3Support/Q3SqlRecordInfo ../../include/Qt3Support/Q3SqlSelectCursor ../../include/Qt3Support/Q3Dns ../../include/Qt3Support/Q3DnsSocket ../../include/Qt3Support/Q3Ftp ../../include/Qt3Support/Q3HttpHeader ../../include/Qt3Support/Q3HttpResponseHeader ../../include/Qt3Support/Q3HttpRequestHeader ../../include/Qt3Support/Q3Http ../../include/Qt3Support/Q3LocalFs ../../include/Qt3Support/Q3NetworkProtocolFactoryBase ../../include/Qt3Support/Q3NetworkProtocolFactory ../../include/Qt3Support/Q3NetworkProtocolDict ../../include/Qt3Support/Q3NetworkProtocol ../../include/Qt3Support/Q3NetworkOperation ../../include/Qt3Support/Q3ServerSocket ../../include/Qt3Support/Q3Socket ../../include/Qt3Support/Q3SocketDevice ../../include/Qt3Support/Q3Url ../../include/Qt3Support/Q3UrlOperator ../../include/Qt3Support/Q3MultiLineEdit ../../include/Qt3Support/Q3SimpleRichText ../../include/Qt3Support/Q3StyleSheetItem ../../include/Qt3Support/Q3StyleSheet ../../include/Qt3Support/Q3SyntaxHighlighter ../../include/Qt3Support/Q3TextBrowser ../../include/Qt3Support/Q3TextEditOptimPrivate ../../include/Qt3Support/Q3TextEdit ../../include/Qt3Support/Q3TextStream ../../include/Qt3Support/Q3TSFUNC ../../include/Qt3Support/Q3TextView ../../include/Qt3Support/Q3AsciiCache ../../include/Qt3Support/Q3AsciiCacheIterator ../../include/Qt3Support/Q3AsciiDict ../../include/Qt3Support/Q3AsciiDictIterator ../../include/Qt3Support/Q3Cache ../../include/Qt3Support/Q3CacheIterator ../../include/Qt3Support/Q3CleanupHandler ../../include/Qt3Support/Q3SingleCleanupHandler ../../include/Qt3Support/Q3CString ../../include/Qt3Support/Q3DeepCopy ../../include/Qt3Support/Q3Dict ../../include/Qt3Support/Q3DictIterator ../../include/Qt3Support/Q3GArray ../../include/Qt3Support/Q3GCache ../../include/Qt3Support/Q3GCacheIterator ../../include/Qt3Support/Q3BaseBucket ../../include/Qt3Support/Q3StringBucket ../../include/Qt3Support/Q3AsciiBucket ../../include/Qt3Support/Q3IntBucket ../../include/Qt3Support/Q3PtrBucket ../../include/Qt3Support/Q3GDict ../../include/Qt3Support/Q3GDictIterator ../../include/Qt3Support/Q3LNode ../../include/Qt3Support/Q3GList ../../include/Qt3Support/Q3GListIterator ../../include/Qt3Support/Q3GListStdIterator ../../include/Qt3Support/Q3GVector ../../include/Qt3Support/Q3IntCache ../../include/Qt3Support/Q3IntCacheIterator ../../include/Qt3Support/Q3IntDict ../../include/Qt3Support/Q3IntDictIterator ../../include/Qt3Support/Q3MemArray ../../include/Qt3Support/Q3ObjectDictionary ../../include/Qt3Support/Q3PtrCollection ../../include/Qt3Support/Q3PtrDict ../../include/Qt3Support/Q3PtrDictIterator ../../include/Qt3Support/Q3PtrListStdIterator ../../include/Qt3Support/Q3PtrList ../../include/Qt3Support/Q3PtrListIterator ../../include/Qt3Support/Q3PtrQueue ../../include/Qt3Support/Q3PtrStack ../../include/Qt3Support/Q3PtrVector ../../include/Qt3Support/Q3Semaphore ../../include/Qt3Support/Q3Shared ../../include/Qt3Support/Q3Signal ../../include/Qt3Support/Q3SortedList ../../include/Qt3Support/Q3StrListIterator ../../include/Qt3Support/Q3StrList ../../include/Qt3Support/Q3StrIList ../../include/Qt3Support/Q3StrVec ../../include/Qt3Support/Q3StrIVec ../../include/Qt3Support/Q3ValueListIterator ../../include/Qt3Support/Q3ValueListConstIterator ../../include/Qt3Support/Q3ValueList ../../include/Qt3Support/Q3ValueStack ../../include/Qt3Support/Q3ValueVector 
+SYNCQT.PRIVATE_HEADER_FILES = ../qt3support/widgets/q3mainwindow_p.h ../qt3support/widgets/q3titlebar_p.h ../qt3support/other/q3membuf_p.h ../qt3support/other/qt_compat_pch.h ../qt3support/painting/q3paintengine_svg_p.h ../qt3support/sql/q3sqlmanager_p.h ../qt3support/text/q3richtext_p.h ../qt3support/text/q3syntaxhighlighter_p.h 
Index: qt4-x11-4.6.2/include/QtCore/QtCore
===================================================================
--- qt4-x11-4.6.2.orig/include/QtCore/QtCore	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtCore/QtCore	2010-04-13 18:06:58.217854862 -0400
@@ -1,6 +1,50 @@
 #ifndef QT_QTCORE_MODULE_H
 #define QT_QTCORE_MODULE_H
 #include "qxmlstream.h"
+#include "qabstractstate.h"
+#include "qabstracttransition.h"
+#include "qeventtransition.h"
+#include "qfinalstate.h"
+#include "qhistorystate.h"
+#include "qsignaltransition.h"
+#include "qstate.h"
+#include "qstatemachine.h"
+#include "qatomic.h"
+#include "qbasicatomic.h"
+#include "qmutex.h"
+#include "qreadwritelock.h"
+#include "qsemaphore.h"
+#include "qthread.h"
+#include "qthreadstorage.h"
+#include "qwaitcondition.h"
+#include "qabstractanimation.h"
+#include "qanimationgroup.h"
+#include "qparallelanimationgroup.h"
+#include "qpauseanimation.h"
+#include "qpropertyanimation.h"
+#include "qsequentialanimationgroup.h"
+#include "qvariantanimation.h"
+#include "qabstracteventdispatcher.h"
+#include "qabstractitemmodel.h"
+#include "qbasictimer.h"
+#include "qcoreapplication.h"
+#include "qcoreevent.h"
+#include "qeventloop.h"
+#include "qmath.h"
+#include "qmetaobject.h"
+#include "qmetatype.h"
+#include "qmimedata.h"
+#include "qobject.h"
+#include "qobjectcleanuphandler.h"
+#include "qobjectdefs.h"
+#include "qpointer.h"
+#include "qsharedmemory.h"
+#include "qsignalmapper.h"
+#include "qsocketnotifier.h"
+#include "qsystemsemaphore.h"
+#include "qtimer.h"
+#include "qtranslator.h"
+#include "qvariant.h"
 #include "qabstractfileengine.h"
 #include "qbuffer.h"
 #include "qdatastream.h"
@@ -18,8 +62,38 @@
 #include "qtemporaryfile.h"
 #include "qtextstream.h"
 #include "qurl.h"
-#include "qtextcodec.h"
-#include "qtextcodecplugin.h"
+#include "qfactoryinterface.h"
+#include "qlibrary.h"
+#include "qplugin.h"
+#include "qpluginloader.h"
+#include "quuid.h"
+#include "qfuture.h"
+#include "qfutureinterface.h"
+#include "qfuturesynchronizer.h"
+#include "qfuturewatcher.h"
+#include "qrunnable.h"
+#include "qtconcurrentcompilertest.h"
+#include "qtconcurrentexception.h"
+#include "qtconcurrentfilter.h"
+#include "qtconcurrentfilterkernel.h"
+#include "qtconcurrentfunctionwrappers.h"
+#include "qtconcurrentiteratekernel.h"
+#include "qtconcurrentmap.h"
+#include "qtconcurrentmapkernel.h"
+#include "qtconcurrentmedian.h"
+#include "qtconcurrentreducekernel.h"
+#include "qtconcurrentresultstore.h"
+#include "qtconcurrentrun.h"
+#include "qtconcurrentrunbase.h"
+#include "qtconcurrentstoredfunctioncall.h"
+#include "qtconcurrentthreadengine.h"
+#include "qthreadpool.h"
+#include "qendian.h"
+#include "qfeatures.h"
+#include "qglobal.h"
+#include "qlibraryinfo.h"
+#include "qnamespace.h"
+#include "qnumeric.h"
 #include "qalgorithms.h"
 #include "qbitarray.h"
 #include "qbytearray.h"
@@ -58,80 +132,6 @@
 #include "qtimeline.h"
 #include "qvarlengtharray.h"
 #include "qvector.h"
-#include "qendian.h"
-#include "qfeatures.h"
-#include "qglobal.h"
-#include "qlibraryinfo.h"
-#include "qnamespace.h"
-#include "qnumeric.h"
-#include "qabstracteventdispatcher.h"
-#include "qabstractitemmodel.h"
-#include "qbasictimer.h"
-#include "qcoreapplication.h"
-#include "qcoreevent.h"
-#include "qeventloop.h"
-#include "qmath.h"
-#include "qmetaobject.h"
-#include "qmetatype.h"
-#include "qmimedata.h"
-#include "qobject.h"
-#include "qobjectcleanuphandler.h"
-#include "qobjectdefs.h"
-#include "qpointer.h"
-#include "qsharedmemory.h"
-#include "qsignalmapper.h"
-#include "qsocketnotifier.h"
-#include "qsystemsemaphore.h"
-#include "qtimer.h"
-#include "qtranslator.h"
-#include "qvariant.h"
-#include "qfuture.h"
-#include "qfutureinterface.h"
-#include "qfuturesynchronizer.h"
-#include "qfuturewatcher.h"
-#include "qrunnable.h"
-#include "qtconcurrentcompilertest.h"
-#include "qtconcurrentexception.h"
-#include "qtconcurrentfilter.h"
-#include "qtconcurrentfilterkernel.h"
-#include "qtconcurrentfunctionwrappers.h"
-#include "qtconcurrentiteratekernel.h"
-#include "qtconcurrentmap.h"
-#include "qtconcurrentmapkernel.h"
-#include "qtconcurrentmedian.h"
-#include "qtconcurrentreducekernel.h"
-#include "qtconcurrentresultstore.h"
-#include "qtconcurrentrun.h"
-#include "qtconcurrentrunbase.h"
-#include "qtconcurrentstoredfunctioncall.h"
-#include "qtconcurrentthreadengine.h"
-#include "qthreadpool.h"
-#include "qfactoryinterface.h"
-#include "qlibrary.h"
-#include "qplugin.h"
-#include "qpluginloader.h"
-#include "quuid.h"
-#include "qatomic.h"
-#include "qbasicatomic.h"
-#include "qmutex.h"
-#include "qreadwritelock.h"
-#include "qsemaphore.h"
-#include "qthread.h"
-#include "qthreadstorage.h"
-#include "qwaitcondition.h"
-#include "qabstractstate.h"
-#include "qabstracttransition.h"
-#include "qeventtransition.h"
-#include "qfinalstate.h"
-#include "qhistorystate.h"
-#include "qsignaltransition.h"
-#include "qstate.h"
-#include "qstatemachine.h"
-#include "qabstractanimation.h"
-#include "qanimationgroup.h"
-#include "qparallelanimationgroup.h"
-#include "qpauseanimation.h"
-#include "qpropertyanimation.h"
-#include "qsequentialanimationgroup.h"
-#include "qvariantanimation.h"
+#include "qtextcodec.h"
+#include "qtextcodecplugin.h"
 #endif
Index: qt4-x11-4.6.2/include/QtCore/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtCore/headers.pri	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtCore/headers.pri	2010-04-13 18:06:58.221853624 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../corelib/xml/qxmlstream.h ../corelib/io/qabstractfileengine.h ../corelib/io/qbuffer.h ../corelib/io/qdatastream.h ../corelib/io/qdebug.h ../corelib/io/qdir.h ../corelib/io/qdiriterator.h ../corelib/io/qfile.h ../corelib/io/qfileinfo.h ../corelib/io/qfilesystemwatcher.h ../corelib/io/qfsfileengine.h ../corelib/io/qiodevice.h ../corelib/io/qprocess.h ../corelib/io/qresource.h ../corelib/io/qsettings.h ../corelib/io/qtemporaryfile.h ../corelib/io/qtextstream.h ../corelib/io/qurl.h ../corelib/codecs/qtextcodec.h ../corelib/codecs/qtextcodecplugin.h ../corelib/tools/qalgorithms.h ../corelib/tools/qbitarray.h ../corelib/tools/qbytearray.h ../corelib/tools/qbytearraymatcher.h ../corelib/tools/qcache.h ../corelib/tools/qchar.h ../corelib/tools/qcontainerfwd.h ../corelib/tools/qcontiguouscache.h ../corelib/tools/qcryptographichash.h ../corelib/tools/qdatetime.h ../corelib/tools/qeasingcurve.h ../corelib/tools/qhash.h ../corelib/tools/qiterator.h ../corelib/tools/qline.h ../corelib/tools/qlinkedlist.h ../corelib/tools/qlist.h ../corelib/tools/qlocale.h ../corelib/tools/qmap.h ../corelib/tools/qmargins.h ../corelib/tools/qpair.h ../corelib/tools/qpoint.h ../corelib/tools/qqueue.h ../corelib/tools/qrect.h ../corelib/tools/qregexp.h ../corelib/tools/qscopedpointer.h ../corelib/tools/qset.h ../corelib/tools/qshareddata.h ../corelib/tools/qsharedpointer.h ../corelib/tools/qsharedpointer_impl.h ../corelib/tools/qsize.h ../corelib/tools/qstack.h ../corelib/tools/qstring.h ../corelib/tools/qstringbuilder.h ../corelib/tools/qstringlist.h ../corelib/tools/qstringmatcher.h ../corelib/tools/qtextboundaryfinder.h ../corelib/tools/qtimeline.h ../corelib/tools/qvarlengtharray.h ../corelib/tools/qvector.h ../corelib/global/qconfig-dist.h ../corelib/global/qconfig-large.h ../corelib/global/qconfig-medium.h ../corelib/global/qconfig-minimal.h ../corelib/global/qconfig-small.h ../corelib/global/qendian.h ../corelib/global/qfeatures.h ../corelib/global/qglobal.h ../corelib/global/qlibraryinfo.h ../corelib/global/qnamespace.h ../corelib/global/qnumeric.h ../corelib/global/qt_windows.h ../corelib/kernel/qabstracteventdispatcher.h ../corelib/kernel/qabstractitemmodel.h ../corelib/kernel/qbasictimer.h ../corelib/kernel/qcoreapplication.h ../corelib/kernel/qcoreevent.h ../corelib/kernel/qeventloop.h ../corelib/kernel/qfunctions_vxworks.h ../corelib/kernel/qfunctions_wince.h ../corelib/kernel/qmath.h ../corelib/kernel/qmetaobject.h ../corelib/kernel/qmetatype.h ../corelib/kernel/qmimedata.h ../corelib/kernel/qobject.h ../corelib/kernel/qobjectcleanuphandler.h ../corelib/kernel/qobjectdefs.h ../corelib/kernel/qpointer.h ../corelib/kernel/qsharedmemory.h ../corelib/kernel/qsignalmapper.h ../corelib/kernel/qsocketnotifier.h ../corelib/kernel/qsystemsemaphore.h ../corelib/kernel/qtimer.h ../corelib/kernel/qtranslator.h ../corelib/kernel/qvariant.h ../corelib/concurrent/qfuture.h ../corelib/concurrent/qfutureinterface.h ../corelib/concurrent/qfuturesynchronizer.h ../corelib/concurrent/qfuturewatcher.h ../corelib/concurrent/qrunnable.h ../corelib/concurrent/qtconcurrentcompilertest.h ../corelib/concurrent/qtconcurrentexception.h ../corelib/concurrent/qtconcurrentfilter.h ../corelib/concurrent/qtconcurrentfilterkernel.h ../corelib/concurrent/qtconcurrentfunctionwrappers.h ../corelib/concurrent/qtconcurrentiteratekernel.h ../corelib/concurrent/qtconcurrentmap.h ../corelib/concurrent/qtconcurrentmapkernel.h ../corelib/concurrent/qtconcurrentmedian.h ../corelib/concurrent/qtconcurrentreducekernel.h ../corelib/concurrent/qtconcurrentresultstore.h ../corelib/concurrent/qtconcurrentrun.h ../corelib/concurrent/qtconcurrentrunbase.h ../corelib/concurrent/qtconcurrentstoredfunctioncall.h ../corelib/concurrent/qtconcurrentthreadengine.h ../corelib/concurrent/qthreadpool.h ../corelib/arch/qatomic_alpha.h ../corelib/arch/qatomic_arch.h ../corelib/arch/qatomic_arm.h ../corelib/arch/qatomic_armv6.h ../corelib/arch/qatomic_avr32.h ../corelib/arch/qatomic_bfin.h ../corelib/arch/qatomic_bootstrap.h ../corelib/arch/qatomic_generic.h ../corelib/arch/qatomic_i386.h ../corelib/arch/qatomic_ia64.h ../corelib/arch/qatomic_macosx.h ../corelib/arch/qatomic_mips.h ../corelib/arch/qatomic_parisc.h ../corelib/arch/qatomic_powerpc.h ../corelib/arch/qatomic_s390.h ../corelib/arch/qatomic_sh.h ../corelib/arch/qatomic_sh4a.h ../corelib/arch/qatomic_sparc.h ../corelib/arch/qatomic_symbian.h ../corelib/arch/qatomic_vxworks.h ../corelib/arch/qatomic_windows.h ../corelib/arch/qatomic_windowsce.h ../corelib/arch/qatomic_x86_64.h ../corelib/plugin/qfactoryinterface.h ../corelib/plugin/qlibrary.h ../corelib/plugin/qplugin.h ../corelib/plugin/qpluginloader.h ../corelib/plugin/quuid.h ../corelib/thread/qatomic.h ../corelib/thread/qbasicatomic.h ../corelib/thread/qmutex.h ../corelib/thread/qreadwritelock.h ../corelib/thread/qsemaphore.h ../corelib/thread/qthread.h ../corelib/thread/qthreadstorage.h ../corelib/thread/qwaitcondition.h ../corelib/statemachine/qabstractstate.h ../corelib/statemachine/qabstracttransition.h ../corelib/statemachine/qeventtransition.h ../corelib/statemachine/qfinalstate.h ../corelib/statemachine/qhistorystate.h ../corelib/statemachine/qsignaltransition.h ../corelib/statemachine/qstate.h ../corelib/statemachine/qstatemachine.h ../corelib/animation/qabstractanimation.h ../corelib/animation/qanimationgroup.h ../corelib/animation/qparallelanimationgroup.h ../corelib/animation/qpauseanimation.h ../corelib/animation/qpropertyanimation.h ../corelib/animation/qsequentialanimationgroup.h ../corelib/animation/qvariantanimation.h ../../include/QtCore/QtCore 
-SYNCQT.HEADER_CLASSES = ../../include/QtCore/QXmlStreamStringRef ../../include/QtCore/QXmlStreamAttribute ../../include/QtCore/QXmlStreamAttributes ../../include/QtCore/QXmlStreamNamespaceDeclaration ../../include/QtCore/QXmlStreamNamespaceDeclarations ../../include/QtCore/QXmlStreamNotationDeclaration ../../include/QtCore/QXmlStreamNotationDeclarations ../../include/QtCore/QXmlStreamEntityDeclaration ../../include/QtCore/QXmlStreamEntityDeclarations ../../include/QtCore/QXmlStreamEntityResolver ../../include/QtCore/QXmlStreamReader ../../include/QtCore/QXmlStreamWriter ../../include/QtCore/QAbstractFileEngine ../../include/QtCore/QAbstractFileEngineHandler ../../include/QtCore/QAbstractFileEngineIterator ../../include/QtCore/QBuffer ../../include/QtCore/QDataStream ../../include/QtCore/QtDebug ../../include/QtCore/QDebug ../../include/QtCore/QNoDebug ../../include/QtCore/QDir ../../include/QtCore/QDirIterator ../../include/QtCore/QFile ../../include/QtCore/QFileInfo ../../include/QtCore/QFileInfoList ../../include/QtCore/QFileInfoListIterator ../../include/QtCore/QFileSystemWatcher ../../include/QtCore/QFSFileEngine ../../include/QtCore/QIODevice ../../include/QtCore/Q_PID ../../include/QtCore/QProcessEnvironment ../../include/QtCore/QProcess ../../include/QtCore/QResource ../../include/QtCore/QSettings ../../include/QtCore/QTemporaryFile ../../include/QtCore/QTextStream ../../include/QtCore/QTextStreamFunction ../../include/QtCore/QTextStreamManipulator ../../include/QtCore/QTS ../../include/QtCore/QTextIStream ../../include/QtCore/QTextOStream ../../include/QtCore/QUrl ../../include/QtCore/QTextCodec ../../include/QtCore/QTextEncoder ../../include/QtCore/QTextDecoder ../../include/QtCore/QTextCodecFactoryInterface ../../include/QtCore/QTextCodecPlugin ../../include/QtCore/QtAlgorithms ../../include/QtCore/QBitArray ../../include/QtCore/QBitRef ../../include/QtCore/QByteArray ../../include/QtCore/QByteRef ../../include/QtCore/QByteArrayMatcher ../../include/QtCore/QCache ../../include/QtCore/QLatin1Char ../../include/QtCore/QChar ../../include/QtCore/QtContainerFwd ../../include/QtCore/QContiguousCacheData ../../include/QtCore/QContiguousCacheTypedData ../../include/QtCore/QContiguousCache ../../include/QtCore/QCryptographicHash ../../include/QtCore/QDate ../../include/QtCore/QTime ../../include/QtCore/QDateTime ../../include/QtCore/QEasingCurve ../../include/QtCore/QHashData ../../include/QtCore/QHashDummyValue ../../include/QtCore/QHashDummyNode ../../include/QtCore/QHashNode ../../include/QtCore/QHash ../../include/QtCore/QMultiHash ../../include/QtCore/QHashIterator ../../include/QtCore/QMutableHashIterator ../../include/QtCore/QLine ../../include/QtCore/QLineF ../../include/QtCore/QLinkedListData ../../include/QtCore/QLinkedListNode ../../include/QtCore/QLinkedList ../../include/QtCore/QLinkedListIterator ../../include/QtCore/QMutableLinkedListIterator ../../include/QtCore/QListData ../../include/QtCore/QList ../../include/QtCore/QListIterator ../../include/QtCore/QMutableListIterator ../../include/QtCore/QSystemLocale ../../include/QtCore/QLocale ../../include/QtCore/QMapData ../../include/QtCore/QMapNode ../../include/QtCore/QMapPayloadNode ../../include/QtCore/QMap ../../include/QtCore/QMultiMap ../../include/QtCore/QMapIterator ../../include/QtCore/QMutableMapIterator ../../include/QtCore/QMargins ../../include/QtCore/QPair ../../include/QtCore/QPoint ../../include/QtCore/QPointF ../../include/QtCore/QQueue ../../include/QtCore/QRect ../../include/QtCore/QRectF ../../include/QtCore/QRegExp ../../include/QtCore/QScopedPointerDeleter ../../include/QtCore/QScopedPointerArrayDeleter ../../include/QtCore/QScopedPointerPodDeleter ../../include/QtCore/QScopedPointer ../../include/QtCore/QScopedArrayPointer ../../include/QtCore/QSet ../../include/QtCore/QSetIterator ../../include/QtCore/QMutableSetIterator ../../include/QtCore/QSharedData ../../include/QtCore/QSharedDataPointer ../../include/QtCore/QExplicitlySharedDataPointer ../../include/QtCore/QSharedPointer ../../include/QtCore/QWeakPointer ../../include/QtCore/QSize ../../include/QtCore/QSizeF ../../include/QtCore/QStack ../../include/QtCore/QStdWString ../../include/QtCore/QString ../../include/QtCore/QLatin1String ../../include/QtCore/QCharRef ../../include/QtCore/QConstString ../../include/QtCore/QStringRef ../../include/QtCore/QLatin1Literal ../../include/QtCore/QAbstractConcatenable ../../include/QtCore/QConcatenable ../../include/QtCore/QStringBuilder ../../include/QtCore/QStringListIterator ../../include/QtCore/QMutableStringListIterator ../../include/QtCore/QStringList ../../include/QtCore/QStringMatcher ../../include/QtCore/QTextBoundaryFinder ../../include/QtCore/QTimeLine ../../include/QtCore/QVarLengthArray ../../include/QtCore/QVectorData ../../include/QtCore/QVectorTypedData ../../include/QtCore/QVector ../../include/QtCore/QVectorIterator ../../include/QtCore/QMutableVectorIterator ../../include/QtCore/QtEndian ../../include/QtCore/QtGlobal ../../include/QtCore/QIntegerForSize ../../include/QtCore/QNoImplicitBoolCast ../../include/QtCore/Q_INT8 ../../include/QtCore/Q_UINT8 ../../include/QtCore/Q_INT16 ../../include/QtCore/Q_UINT16 ../../include/QtCore/Q_INT32 ../../include/QtCore/Q_UINT32 ../../include/QtCore/Q_INT64 ../../include/QtCore/Q_UINT64 ../../include/QtCore/Q_LLONG ../../include/QtCore/Q_ULLONG ../../include/QtCore/Q_LONG ../../include/QtCore/Q_ULONG ../../include/QtCore/QSysInfo ../../include/QtCore/QtMsgHandler ../../include/QtCore/QGlobalStatic ../../include/QtCore/QGlobalStaticDeleter ../../include/QtCore/QBool ../../include/QtCore/QTypeInfo ../../include/QtCore/QFlag ../../include/QtCore/QIncompatibleFlag ../../include/QtCore/QFlags ../../include/QtCore/QForeachContainer ../../include/QtCore/QForeachContainerBase ../../include/QtCore/QLibraryInfo ../../include/QtCore/Qt ../../include/QtCore/QInternal ../../include/QtCore/QCOORD ../../include/QtCore/QAbstractEventDispatcher ../../include/QtCore/QModelIndex ../../include/QtCore/QPersistentModelIndex ../../include/QtCore/QModelIndexList ../../include/QtCore/QAbstractItemModel ../../include/QtCore/QAbstractTableModel ../../include/QtCore/QAbstractListModel ../../include/QtCore/QBasicTimer ../../include/QtCore/QCoreApplication ../../include/QtCore/QtCleanUpFunction ../../include/QtCore/QEvent ../../include/QtCore/QTimerEvent ../../include/QtCore/QChildEvent ../../include/QtCore/QCustomEvent ../../include/QtCore/QDynamicPropertyChangeEvent ../../include/QtCore/QEventLoop ../../include/QtCore/QMetaMethod ../../include/QtCore/QMetaEnum ../../include/QtCore/QMetaProperty ../../include/QtCore/QMetaClassInfo ../../include/QtCore/QMetaType ../../include/QtCore/QMetaTypeId ../../include/QtCore/QMetaTypeId2 ../../include/QtCore/QMimeData ../../include/QtCore/QObjectList ../../include/QtCore/QObjectData ../../include/QtCore/QObject ../../include/QtCore/QObjectUserData ../../include/QtCore/QObjectCleanupHandler ../../include/QtCore/QGenericArgument ../../include/QtCore/QGenericReturnArgument ../../include/QtCore/QArgument ../../include/QtCore/QReturnArgument ../../include/QtCore/QMetaObject ../../include/QtCore/QMetaObjectAccessor ../../include/QtCore/QMetaObjectExtraData ../../include/QtCore/QPointer ../../include/QtCore/QSharedMemory ../../include/QtCore/QSignalMapper ../../include/QtCore/QSocketNotifier ../../include/QtCore/QSystemSemaphore ../../include/QtCore/QTimer ../../include/QtCore/QTranslator ../../include/QtCore/QVariant ../../include/QtCore/QVariantList ../../include/QtCore/QVariantMap ../../include/QtCore/QVariantHash ../../include/QtCore/QVariantComparisonHelper ../../include/QtCore/QFuture ../../include/QtCore/QFutureIterator ../../include/QtCore/QMutableFutureIterator ../../include/QtCore/QFutureInterfaceBase ../../include/QtCore/QFutureInterface ../../include/QtCore/QFutureSynchronizer ../../include/QtCore/QFutureWatcherBase ../../include/QtCore/QFutureWatcher ../../include/QtCore/QRunnable ../../include/QtCore/QtConcurrentFilter ../../include/QtCore/QtConcurrentMap ../../include/QtCore/QtConcurrentRun ../../include/QtCore/QThreadPool ../../include/QtCore/QFactoryInterface ../../include/QtCore/QLibrary ../../include/QtCore/QtPlugin ../../include/QtCore/QtPluginInstanceFunction ../../include/QtCore/QPluginLoader ../../include/QtCore/QUuid ../../include/QtCore/QAtomicInt ../../include/QtCore/QAtomicPointer ../../include/QtCore/QBasicAtomicInt ../../include/QtCore/QBasicAtomicPointer ../../include/QtCore/QMutex ../../include/QtCore/QMutexLocker ../../include/QtCore/QReadWriteLock ../../include/QtCore/QReadLocker ../../include/QtCore/QWriteLocker ../../include/QtCore/QSemaphore ../../include/QtCore/QThread ../../include/QtCore/QThreadStorageData ../../include/QtCore/QThreadStorage ../../include/QtCore/QWaitCondition ../../include/QtCore/QAbstractState ../../include/QtCore/QAbstractTransition ../../include/QtCore/QEventTransition ../../include/QtCore/QFinalState ../../include/QtCore/QHistoryState ../../include/QtCore/QSignalTransition ../../include/QtCore/QState ../../include/QtCore/QStateMachine ../../include/QtCore/QAbstractAnimation ../../include/QtCore/QAnimationGroup ../../include/QtCore/QParallelAnimationGroup ../../include/QtCore/QPauseAnimation ../../include/QtCore/QPropertyAnimation ../../include/QtCore/QSequentialAnimationGroup ../../include/QtCore/QVariantAnimation 
-SYNCQT.PRIVATE_HEADER_FILES = ../corelib/xml/qxmlstream_p.h ../corelib/xml/qxmlutils_p.h ../corelib/io/qabstractfileengine_p.h ../corelib/io/qdatastream_p.h ../corelib/io/qfile_p.h ../corelib/io/qfileinfo_p.h ../corelib/io/qfilesystemwatcher_dnotify_p.h ../corelib/io/qfilesystemwatcher_fsevents_p.h ../corelib/io/qfilesystemwatcher_inotify_p.h ../corelib/io/qfilesystemwatcher_kqueue_p.h ../corelib/io/qfilesystemwatcher_p.h ../corelib/io/qfilesystemwatcher_symbian_p.h ../corelib/io/qfilesystemwatcher_win_p.h ../corelib/io/qfsfileengine_iterator_p.h ../corelib/io/qfsfileengine_p.h ../corelib/io/qiodevice_p.h ../corelib/io/qnoncontiguousbytedevice_p.h ../corelib/io/qprocess_p.h ../corelib/io/qresource_iterator_p.h ../corelib/io/qresource_p.h ../corelib/io/qsettings_p.h ../corelib/io/qwindowspipewriter_p.h ../corelib/codecs/qfontlaocodec_p.h ../corelib/codecs/qiconvcodec_p.h ../corelib/codecs/qisciicodec_p.h ../corelib/codecs/qlatincodec_p.h ../corelib/codecs/qsimplecodec_p.h ../corelib/codecs/qtextcodec_p.h ../corelib/codecs/qtsciicodec_p.h ../corelib/codecs/qutfcodec_p.h ../corelib/tools/qbytedata_p.h ../corelib/tools/qdatetime_p.h ../corelib/tools/qharfbuzz_p.h ../corelib/tools/qlocale_data_p.h ../corelib/tools/qlocale_p.h ../corelib/tools/qpodlist_p.h ../corelib/tools/qringbuffer_p.h ../corelib/tools/qscopedpointer_p.h ../corelib/tools/qtools_p.h ../corelib/tools/qunicodetables_p.h ../corelib/global/qnumeric_p.h ../corelib/global/qt_pch.h ../corelib/kernel/qabstracteventdispatcher_p.h ../corelib/kernel/qabstractitemmodel_p.h ../corelib/kernel/qcore_mac_p.h ../corelib/kernel/qcore_symbian_p.h ../corelib/kernel/qcore_unix_p.h ../corelib/kernel/qcoreapplication_p.h ../corelib/kernel/qcorecmdlineargs_p.h ../corelib/kernel/qcoreglobaldata_p.h ../corelib/kernel/qcrashhandler_p.h ../corelib/kernel/qeventdispatcher_glib_p.h ../corelib/kernel/qeventdispatcher_symbian_p.h ../corelib/kernel/qeventdispatcher_unix_p.h ../corelib/kernel/qeventdispatcher_win_p.h ../corelib/kernel/qfunctions_p.h ../corelib/kernel/qguard_p.h ../corelib/kernel/qmetaobject_p.h ../corelib/kernel/qobject_p.h ../corelib/kernel/qsharedmemory_p.h ../corelib/kernel/qsystemsemaphore_p.h ../corelib/kernel/qtranslator_p.h ../corelib/kernel/qvariant_p.h ../corelib/kernel/qwineventnotifier_p.h ../corelib/concurrent/qfutureinterface_p.h ../corelib/concurrent/qfuturewatcher_p.h ../corelib/concurrent/qthreadpool_p.h ../corelib/plugin/qfactoryloader_p.h ../corelib/plugin/qlibrary_p.h ../corelib/thread/qmutex_p.h ../corelib/thread/qmutexpool_p.h ../corelib/thread/qorderedmutexlocker_p.h ../corelib/thread/qreadwritelock_p.h ../corelib/thread/qthread_p.h ../corelib/statemachine/qabstractstate_p.h ../corelib/statemachine/qabstracttransition_p.h ../corelib/statemachine/qeventtransition_p.h ../corelib/statemachine/qhistorystate_p.h ../corelib/statemachine/qsignaleventgenerator_p.h ../corelib/statemachine/qsignaltransition_p.h ../corelib/statemachine/qstate_p.h ../corelib/statemachine/qstatemachine_p.h ../corelib/animation/qabstractanimation_p.h ../corelib/animation/qanimationgroup_p.h ../corelib/animation/qparallelanimationgroup_p.h ../corelib/animation/qpropertyanimation_p.h ../corelib/animation/qsequentialanimationgroup_p.h ../corelib/animation/qvariantanimation_p.h 
+SYNCQT.HEADER_FILES = ../corelib/xml/qxmlstream.h ../corelib/statemachine/qabstractstate.h ../corelib/statemachine/qabstracttransition.h ../corelib/statemachine/qeventtransition.h ../corelib/statemachine/qfinalstate.h ../corelib/statemachine/qhistorystate.h ../corelib/statemachine/qsignaltransition.h ../corelib/statemachine/qstate.h ../corelib/statemachine/qstatemachine.h ../corelib/thread/qatomic.h ../corelib/thread/qbasicatomic.h ../corelib/thread/qmutex.h ../corelib/thread/qreadwritelock.h ../corelib/thread/qsemaphore.h ../corelib/thread/qthread.h ../corelib/thread/qthreadstorage.h ../corelib/thread/qwaitcondition.h ../corelib/arch/qatomic_alpha.h ../corelib/arch/qatomic_arch.h ../corelib/arch/qatomic_arm.h ../corelib/arch/qatomic_armv6.h ../corelib/arch/qatomic_avr32.h ../corelib/arch/qatomic_bfin.h ../corelib/arch/qatomic_bootstrap.h ../corelib/arch/qatomic_generic.h ../corelib/arch/qatomic_i386.h ../corelib/arch/qatomic_ia64.h ../corelib/arch/qatomic_macosx.h ../corelib/arch/qatomic_mips.h ../corelib/arch/qatomic_parisc.h ../corelib/arch/qatomic_powerpc.h ../corelib/arch/qatomic_s390.h ../corelib/arch/qatomic_sh.h ../corelib/arch/qatomic_sh4a.h ../corelib/arch/qatomic_sparc.h ../corelib/arch/qatomic_symbian.h ../corelib/arch/qatomic_vxworks.h ../corelib/arch/qatomic_windows.h ../corelib/arch/qatomic_windowsce.h ../corelib/arch/qatomic_x86_64.h ../corelib/animation/qabstractanimation.h ../corelib/animation/qanimationgroup.h ../corelib/animation/qparallelanimationgroup.h ../corelib/animation/qpauseanimation.h ../corelib/animation/qpropertyanimation.h ../corelib/animation/qsequentialanimationgroup.h ../corelib/animation/qvariantanimation.h ../corelib/kernel/qabstracteventdispatcher.h ../corelib/kernel/qabstractitemmodel.h ../corelib/kernel/qbasictimer.h ../corelib/kernel/qcoreapplication.h ../corelib/kernel/qcoreevent.h ../corelib/kernel/qeventloop.h ../corelib/kernel/qfunctions_vxworks.h ../corelib/kernel/qfunctions_wince.h ../corelib/kernel/qmath.h ../corelib/kernel/qmetaobject.h ../corelib/kernel/qmetatype.h ../corelib/kernel/qmimedata.h ../corelib/kernel/qobject.h ../corelib/kernel/qobjectcleanuphandler.h ../corelib/kernel/qobjectdefs.h ../corelib/kernel/qpointer.h ../corelib/kernel/qsharedmemory.h ../corelib/kernel/qsignalmapper.h ../corelib/kernel/qsocketnotifier.h ../corelib/kernel/qsystemsemaphore.h ../corelib/kernel/qtimer.h ../corelib/kernel/qtranslator.h ../corelib/kernel/qvariant.h ../corelib/io/qabstractfileengine.h ../corelib/io/qbuffer.h ../corelib/io/qdatastream.h ../corelib/io/qdebug.h ../corelib/io/qdir.h ../corelib/io/qdiriterator.h ../corelib/io/qfile.h ../corelib/io/qfileinfo.h ../corelib/io/qfilesystemwatcher.h ../corelib/io/qfsfileengine.h ../corelib/io/qiodevice.h ../corelib/io/qprocess.h ../corelib/io/qresource.h ../corelib/io/qsettings.h ../corelib/io/qtemporaryfile.h ../corelib/io/qtextstream.h ../corelib/io/qurl.h ../corelib/plugin/qfactoryinterface.h ../corelib/plugin/qlibrary.h ../corelib/plugin/qplugin.h ../corelib/plugin/qpluginloader.h ../corelib/plugin/quuid.h ../corelib/concurrent/qfuture.h ../corelib/concurrent/qfutureinterface.h ../corelib/concurrent/qfuturesynchronizer.h ../corelib/concurrent/qfuturewatcher.h ../corelib/concurrent/qrunnable.h ../corelib/concurrent/qtconcurrentcompilertest.h ../corelib/concurrent/qtconcurrentexception.h ../corelib/concurrent/qtconcurrentfilter.h ../corelib/concurrent/qtconcurrentfilterkernel.h ../corelib/concurrent/qtconcurrentfunctionwrappers.h ../corelib/concurrent/qtconcurrentiteratekernel.h ../corelib/concurrent/qtconcurrentmap.h ../corelib/concurrent/qtconcurrentmapkernel.h ../corelib/concurrent/qtconcurrentmedian.h ../corelib/concurrent/qtconcurrentreducekernel.h ../corelib/concurrent/qtconcurrentresultstore.h ../corelib/concurrent/qtconcurrentrun.h ../corelib/concurrent/qtconcurrentrunbase.h ../corelib/concurrent/qtconcurrentstoredfunctioncall.h ../corelib/concurrent/qtconcurrentthreadengine.h ../corelib/concurrent/qthreadpool.h ../corelib/global/qconfig-dist.h ../corelib/global/qconfig-large.h ../corelib/global/qconfig-medium.h ../corelib/global/qconfig-minimal.h ../corelib/global/qconfig-small.h ../corelib/global/qendian.h ../corelib/global/qfeatures.h ../corelib/global/qglobal.h ../corelib/global/qlibraryinfo.h ../corelib/global/qnamespace.h ../corelib/global/qnumeric.h ../corelib/global/qt_windows.h ../corelib/tools/qalgorithms.h ../corelib/tools/qbitarray.h ../corelib/tools/qbytearray.h ../corelib/tools/qbytearraymatcher.h ../corelib/tools/qcache.h ../corelib/tools/qchar.h ../corelib/tools/qcontainerfwd.h ../corelib/tools/qcontiguouscache.h ../corelib/tools/qcryptographichash.h ../corelib/tools/qdatetime.h ../corelib/tools/qeasingcurve.h ../corelib/tools/qhash.h ../corelib/tools/qiterator.h ../corelib/tools/qline.h ../corelib/tools/qlinkedlist.h ../corelib/tools/qlist.h ../corelib/tools/qlocale.h ../corelib/tools/qmap.h ../corelib/tools/qmargins.h ../corelib/tools/qpair.h ../corelib/tools/qpoint.h ../corelib/tools/qqueue.h ../corelib/tools/qrect.h ../corelib/tools/qregexp.h ../corelib/tools/qscopedpointer.h ../corelib/tools/qset.h ../corelib/tools/qshareddata.h ../corelib/tools/qsharedpointer.h ../corelib/tools/qsharedpointer_impl.h ../corelib/tools/qsize.h ../corelib/tools/qstack.h ../corelib/tools/qstring.h ../corelib/tools/qstringbuilder.h ../corelib/tools/qstringlist.h ../corelib/tools/qstringmatcher.h ../corelib/tools/qtextboundaryfinder.h ../corelib/tools/qtimeline.h ../corelib/tools/qvarlengtharray.h ../corelib/tools/qvector.h ../corelib/codecs/qtextcodec.h ../corelib/codecs/qtextcodecplugin.h ../../include/QtCore/QtCore 
+SYNCQT.HEADER_CLASSES = ../../include/QtCore/QXmlStreamStringRef ../../include/QtCore/QXmlStreamAttribute ../../include/QtCore/QXmlStreamAttributes ../../include/QtCore/QXmlStreamNamespaceDeclaration ../../include/QtCore/QXmlStreamNamespaceDeclarations ../../include/QtCore/QXmlStreamNotationDeclaration ../../include/QtCore/QXmlStreamNotationDeclarations ../../include/QtCore/QXmlStreamEntityDeclaration ../../include/QtCore/QXmlStreamEntityDeclarations ../../include/QtCore/QXmlStreamEntityResolver ../../include/QtCore/QXmlStreamReader ../../include/QtCore/QXmlStreamWriter ../../include/QtCore/QAbstractState ../../include/QtCore/QAbstractTransition ../../include/QtCore/QEventTransition ../../include/QtCore/QFinalState ../../include/QtCore/QHistoryState ../../include/QtCore/QSignalTransition ../../include/QtCore/QState ../../include/QtCore/QStateMachine ../../include/QtCore/QAtomicInt ../../include/QtCore/QAtomicPointer ../../include/QtCore/QBasicAtomicInt ../../include/QtCore/QBasicAtomicPointer ../../include/QtCore/QMutex ../../include/QtCore/QMutexLocker ../../include/QtCore/QReadWriteLock ../../include/QtCore/QReadLocker ../../include/QtCore/QWriteLocker ../../include/QtCore/QSemaphore ../../include/QtCore/QThread ../../include/QtCore/QThreadStorageData ../../include/QtCore/QThreadStorage ../../include/QtCore/QWaitCondition ../../include/QtCore/QAbstractAnimation ../../include/QtCore/QAnimationGroup ../../include/QtCore/QParallelAnimationGroup ../../include/QtCore/QPauseAnimation ../../include/QtCore/QPropertyAnimation ../../include/QtCore/QSequentialAnimationGroup ../../include/QtCore/QVariantAnimation ../../include/QtCore/QAbstractEventDispatcher ../../include/QtCore/QModelIndex ../../include/QtCore/QPersistentModelIndex ../../include/QtCore/QModelIndexList ../../include/QtCore/QAbstractItemModel ../../include/QtCore/QAbstractTableModel ../../include/QtCore/QAbstractListModel ../../include/QtCore/QBasicTimer ../../include/QtCore/QCoreApplication ../../include/QtCore/QtCleanUpFunction ../../include/QtCore/QEvent ../../include/QtCore/QTimerEvent ../../include/QtCore/QChildEvent ../../include/QtCore/QCustomEvent ../../include/QtCore/QDynamicPropertyChangeEvent ../../include/QtCore/QEventLoop ../../include/QtCore/QMetaMethod ../../include/QtCore/QMetaEnum ../../include/QtCore/QMetaProperty ../../include/QtCore/QMetaClassInfo ../../include/QtCore/QMetaType ../../include/QtCore/QMetaTypeId ../../include/QtCore/QMetaTypeId2 ../../include/QtCore/QMimeData ../../include/QtCore/QObjectList ../../include/QtCore/QObjectData ../../include/QtCore/QObject ../../include/QtCore/QObjectUserData ../../include/QtCore/QObjectCleanupHandler ../../include/QtCore/QGenericArgument ../../include/QtCore/QGenericReturnArgument ../../include/QtCore/QArgument ../../include/QtCore/QReturnArgument ../../include/QtCore/QMetaObject ../../include/QtCore/QMetaObjectAccessor ../../include/QtCore/QMetaObjectExtraData ../../include/QtCore/QPointer ../../include/QtCore/QSharedMemory ../../include/QtCore/QSignalMapper ../../include/QtCore/QSocketNotifier ../../include/QtCore/QSystemSemaphore ../../include/QtCore/QTimer ../../include/QtCore/QTranslator ../../include/QtCore/QVariant ../../include/QtCore/QVariantList ../../include/QtCore/QVariantMap ../../include/QtCore/QVariantHash ../../include/QtCore/QVariantComparisonHelper ../../include/QtCore/QAbstractFileEngine ../../include/QtCore/QAbstractFileEngineHandler ../../include/QtCore/QAbstractFileEngineIterator ../../include/QtCore/QBuffer ../../include/QtCore/QDataStream ../../include/QtCore/QtDebug ../../include/QtCore/QDebug ../../include/QtCore/QNoDebug ../../include/QtCore/QDir ../../include/QtCore/QDirIterator ../../include/QtCore/QFile ../../include/QtCore/QFileInfo ../../include/QtCore/QFileInfoList ../../include/QtCore/QFileInfoListIterator ../../include/QtCore/QFileSystemWatcher ../../include/QtCore/QFSFileEngine ../../include/QtCore/QIODevice ../../include/QtCore/Q_PID ../../include/QtCore/QProcessEnvironment ../../include/QtCore/QProcess ../../include/QtCore/QResource ../../include/QtCore/QSettings ../../include/QtCore/QTemporaryFile ../../include/QtCore/QTextStream ../../include/QtCore/QTextStreamFunction ../../include/QtCore/QTextStreamManipulator ../../include/QtCore/QTS ../../include/QtCore/QTextIStream ../../include/QtCore/QTextOStream ../../include/QtCore/QUrl ../../include/QtCore/QFactoryInterface ../../include/QtCore/QLibrary ../../include/QtCore/QtPlugin ../../include/QtCore/QtPluginInstanceFunction ../../include/QtCore/QPluginLoader ../../include/QtCore/QUuid ../../include/QtCore/QFuture ../../include/QtCore/QFutureIterator ../../include/QtCore/QMutableFutureIterator ../../include/QtCore/QFutureInterfaceBase ../../include/QtCore/QFutureInterface ../../include/QtCore/QFutureSynchronizer ../../include/QtCore/QFutureWatcherBase ../../include/QtCore/QFutureWatcher ../../include/QtCore/QRunnable ../../include/QtCore/QtConcurrentFilter ../../include/QtCore/QtConcurrentMap ../../include/QtCore/QtConcurrentRun ../../include/QtCore/QThreadPool ../../include/QtCore/QtEndian ../../include/QtCore/QtGlobal ../../include/QtCore/QIntegerForSize ../../include/QtCore/QNoImplicitBoolCast ../../include/QtCore/Q_INT8 ../../include/QtCore/Q_UINT8 ../../include/QtCore/Q_INT16 ../../include/QtCore/Q_UINT16 ../../include/QtCore/Q_INT32 ../../include/QtCore/Q_UINT32 ../../include/QtCore/Q_INT64 ../../include/QtCore/Q_UINT64 ../../include/QtCore/Q_LLONG ../../include/QtCore/Q_ULLONG ../../include/QtCore/Q_LONG ../../include/QtCore/Q_ULONG ../../include/QtCore/QSysInfo ../../include/QtCore/QtMsgHandler ../../include/QtCore/QGlobalStatic ../../include/QtCore/QGlobalStaticDeleter ../../include/QtCore/QBool ../../include/QtCore/QTypeInfo ../../include/QtCore/QFlag ../../include/QtCore/QIncompatibleFlag ../../include/QtCore/QFlags ../../include/QtCore/QForeachContainer ../../include/QtCore/QForeachContainerBase ../../include/QtCore/QLibraryInfo ../../include/QtCore/Qt ../../include/QtCore/QInternal ../../include/QtCore/QCOORD ../../include/QtCore/QtAlgorithms ../../include/QtCore/QBitArray ../../include/QtCore/QBitRef ../../include/QtCore/QByteArray ../../include/QtCore/QByteRef ../../include/QtCore/QByteArrayMatcher ../../include/QtCore/QCache ../../include/QtCore/QLatin1Char ../../include/QtCore/QChar ../../include/QtCore/QtContainerFwd ../../include/QtCore/QContiguousCacheData ../../include/QtCore/QContiguousCacheTypedData ../../include/QtCore/QContiguousCache ../../include/QtCore/QCryptographicHash ../../include/QtCore/QDate ../../include/QtCore/QTime ../../include/QtCore/QDateTime ../../include/QtCore/QEasingCurve ../../include/QtCore/QHashData ../../include/QtCore/QHashDummyValue ../../include/QtCore/QHashDummyNode ../../include/QtCore/QHashNode ../../include/QtCore/QHash ../../include/QtCore/QMultiHash ../../include/QtCore/QHashIterator ../../include/QtCore/QMutableHashIterator ../../include/QtCore/QLine ../../include/QtCore/QLineF ../../include/QtCore/QLinkedListData ../../include/QtCore/QLinkedListNode ../../include/QtCore/QLinkedList ../../include/QtCore/QLinkedListIterator ../../include/QtCore/QMutableLinkedListIterator ../../include/QtCore/QListData ../../include/QtCore/QList ../../include/QtCore/QListIterator ../../include/QtCore/QMutableListIterator ../../include/QtCore/QSystemLocale ../../include/QtCore/QLocale ../../include/QtCore/QMapData ../../include/QtCore/QMapNode ../../include/QtCore/QMapPayloadNode ../../include/QtCore/QMap ../../include/QtCore/QMultiMap ../../include/QtCore/QMapIterator ../../include/QtCore/QMutableMapIterator ../../include/QtCore/QMargins ../../include/QtCore/QPair ../../include/QtCore/QPoint ../../include/QtCore/QPointF ../../include/QtCore/QQueue ../../include/QtCore/QRect ../../include/QtCore/QRectF ../../include/QtCore/QRegExp ../../include/QtCore/QScopedPointerDeleter ../../include/QtCore/QScopedPointerArrayDeleter ../../include/QtCore/QScopedPointerPodDeleter ../../include/QtCore/QScopedPointer ../../include/QtCore/QScopedArrayPointer ../../include/QtCore/QSet ../../include/QtCore/QSetIterator ../../include/QtCore/QMutableSetIterator ../../include/QtCore/QSharedData ../../include/QtCore/QSharedDataPointer ../../include/QtCore/QExplicitlySharedDataPointer ../../include/QtCore/QSharedPointer ../../include/QtCore/QWeakPointer ../../include/QtCore/QSize ../../include/QtCore/QSizeF ../../include/QtCore/QStack ../../include/QtCore/QStdWString ../../include/QtCore/QString ../../include/QtCore/QLatin1String ../../include/QtCore/QCharRef ../../include/QtCore/QConstString ../../include/QtCore/QStringRef ../../include/QtCore/QLatin1Literal ../../include/QtCore/QAbstractConcatenable ../../include/QtCore/QConcatenable ../../include/QtCore/QStringBuilder ../../include/QtCore/QStringListIterator ../../include/QtCore/QMutableStringListIterator ../../include/QtCore/QStringList ../../include/QtCore/QStringMatcher ../../include/QtCore/QTextBoundaryFinder ../../include/QtCore/QTimeLine ../../include/QtCore/QVarLengthArray ../../include/QtCore/QVectorData ../../include/QtCore/QVectorTypedData ../../include/QtCore/QVector ../../include/QtCore/QVectorIterator ../../include/QtCore/QMutableVectorIterator ../../include/QtCore/QTextCodec ../../include/QtCore/QTextEncoder ../../include/QtCore/QTextDecoder ../../include/QtCore/QTextCodecFactoryInterface ../../include/QtCore/QTextCodecPlugin 
+SYNCQT.PRIVATE_HEADER_FILES = ../corelib/xml/qxmlstream_p.h ../corelib/xml/qxmlutils_p.h ../corelib/statemachine/qabstractstate_p.h ../corelib/statemachine/qabstracttransition_p.h ../corelib/statemachine/qeventtransition_p.h ../corelib/statemachine/qhistorystate_p.h ../corelib/statemachine/qsignaleventgenerator_p.h ../corelib/statemachine/qsignaltransition_p.h ../corelib/statemachine/qstate_p.h ../corelib/statemachine/qstatemachine_p.h ../corelib/thread/qmutex_p.h ../corelib/thread/qmutexpool_p.h ../corelib/thread/qorderedmutexlocker_p.h ../corelib/thread/qreadwritelock_p.h ../corelib/thread/qthread_p.h ../corelib/animation/qabstractanimation_p.h ../corelib/animation/qanimationgroup_p.h ../corelib/animation/qparallelanimationgroup_p.h ../corelib/animation/qpropertyanimation_p.h ../corelib/animation/qsequentialanimationgroup_p.h ../corelib/animation/qvariantanimation_p.h ../corelib/kernel/qabstracteventdispatcher_p.h ../corelib/kernel/qabstractitemmodel_p.h ../corelib/kernel/qcore_mac_p.h ../corelib/kernel/qcore_symbian_p.h ../corelib/kernel/qcore_unix_p.h ../corelib/kernel/qcoreapplication_p.h ../corelib/kernel/qcorecmdlineargs_p.h ../corelib/kernel/qcoreglobaldata_p.h ../corelib/kernel/qcrashhandler_p.h ../corelib/kernel/qeventdispatcher_glib_p.h ../corelib/kernel/qeventdispatcher_symbian_p.h ../corelib/kernel/qeventdispatcher_unix_p.h ../corelib/kernel/qeventdispatcher_win_p.h ../corelib/kernel/qfunctions_p.h ../corelib/kernel/qguard_p.h ../corelib/kernel/qmetaobject_p.h ../corelib/kernel/qobject_p.h ../corelib/kernel/qsharedmemory_p.h ../corelib/kernel/qsystemsemaphore_p.h ../corelib/kernel/qtranslator_p.h ../corelib/kernel/qvariant_p.h ../corelib/kernel/qwineventnotifier_p.h ../corelib/io/qabstractfileengine_p.h ../corelib/io/qdatastream_p.h ../corelib/io/qfile_p.h ../corelib/io/qfileinfo_p.h ../corelib/io/qfilesystemwatcher_dnotify_p.h ../corelib/io/qfilesystemwatcher_fsevents_p.h ../corelib/io/qfilesystemwatcher_inotify_p.h ../corelib/io/qfilesystemwatcher_kqueue_p.h ../corelib/io/qfilesystemwatcher_p.h ../corelib/io/qfilesystemwatcher_symbian_p.h ../corelib/io/qfilesystemwatcher_win_p.h ../corelib/io/qfsfileengine_iterator_p.h ../corelib/io/qfsfileengine_p.h ../corelib/io/qiodevice_p.h ../corelib/io/qnoncontiguousbytedevice_p.h ../corelib/io/qprocess_p.h ../corelib/io/qresource_iterator_p.h ../corelib/io/qresource_p.h ../corelib/io/qsettings_p.h ../corelib/io/qwindowspipewriter_p.h ../corelib/plugin/qfactoryloader_p.h ../corelib/plugin/qlibrary_p.h ../corelib/concurrent/qfutureinterface_p.h ../corelib/concurrent/qfuturewatcher_p.h ../corelib/concurrent/qthreadpool_p.h ../corelib/global/qnumeric_p.h ../corelib/global/qt_pch.h ../corelib/tools/qbytedata_p.h ../corelib/tools/qdatetime_p.h ../corelib/tools/qharfbuzz_p.h ../corelib/tools/qlocale_data_p.h ../corelib/tools/qlocale_p.h ../corelib/tools/qpodlist_p.h ../corelib/tools/qringbuffer_p.h ../corelib/tools/qscopedpointer_p.h ../corelib/tools/qtools_p.h ../corelib/tools/qunicodetables_p.h ../corelib/codecs/qfontlaocodec_p.h ../corelib/codecs/qiconvcodec_p.h ../corelib/codecs/qisciicodec_p.h ../corelib/codecs/qlatincodec_p.h ../corelib/codecs/qsimplecodec_p.h ../corelib/codecs/qtextcodec_p.h ../corelib/codecs/qtsciicodec_p.h ../corelib/codecs/qutfcodec_p.h 
Index: qt4-x11-4.6.2/include/QtDesigner/QtDesigner
===================================================================
--- qt4-x11-4.6.2.orig/include/QtDesigner/QtDesigner	2010-02-11 10:55:14.000000000 -0500
+++ qt4-x11-4.6.2/include/QtDesigner/QtDesigner	2010-04-13 18:06:58.221853624 -0400
@@ -3,6 +3,11 @@
 #include <QtXml/QtXml>
 #include "extension.h"
 #include "qextensionmanager.h"
+#include "abstractformbuilder.h"
+#include "container.h"
+#include "customwidget.h"
+#include "formbuilder.h"
+#include "qdesignerexportwidget.h"
 #include "abstractactioneditor.h"
 #include "abstractbrushmanager.h"
 #include "abstractdnditem.h"
@@ -29,9 +34,4 @@
 #include "membersheet.h"
 #include "propertysheet.h"
 #include "taskmenu.h"
-#include "abstractformbuilder.h"
-#include "container.h"
-#include "customwidget.h"
-#include "formbuilder.h"
-#include "qdesignerexportwidget.h"
 #endif
Index: qt4-x11-4.6.2/include/QtDesigner/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtDesigner/headers.pri	2010-02-11 10:55:14.000000000 -0500
+++ qt4-x11-4.6.2/include/QtDesigner/headers.pri	2010-04-13 18:06:58.221853624 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../lib/components/qdesigner_components.h ../lib/components/qdesigner_components_global.h ../lib/extension/default_extensionfactory.h ../lib/extension/extension.h ../lib/extension/extension_global.h ../lib/extension/qextensionmanager.h ../lib/sdk/abstractactioneditor.h ../lib/sdk/abstractbrushmanager.h ../lib/sdk/abstractdnditem.h ../lib/sdk/abstractformeditor.h ../lib/sdk/abstractformeditorplugin.h ../lib/sdk/abstractformwindow.h ../lib/sdk/abstractformwindowcursor.h ../lib/sdk/abstractformwindowmanager.h ../lib/sdk/abstractformwindowtool.h ../lib/sdk/abstracticoncache.h ../lib/sdk/abstractintegration.h ../lib/sdk/abstractlanguage.h ../lib/sdk/abstractmetadatabase.h ../lib/sdk/abstractobjectinspector.h ../lib/sdk/abstractpromotioninterface.h ../lib/sdk/abstractpropertyeditor.h ../lib/sdk/abstractresourcebrowser.h ../lib/sdk/abstractwidgetbox.h ../lib/sdk/abstractwidgetdatabase.h ../lib/sdk/abstractwidgetfactory.h ../lib/sdk/dynamicpropertysheet.h ../lib/sdk/extrainfo.h ../lib/sdk/layoutdecoration.h ../lib/sdk/membersheet.h ../lib/sdk/propertysheet.h ../lib/sdk/sdk_global.h ../lib/sdk/taskmenu.h ../lib/uilib/abstractformbuilder.h ../lib/uilib/container.h ../lib/uilib/customwidget.h ../lib/uilib/formbuilder.h ../lib/uilib/qdesignerexportwidget.h ../lib/uilib/uilib_global.h ../../../../include/QtDesigner/QtDesigner 
-SYNCQT.HEADER_CLASSES = ../../../../include/QtDesigner/QDesignerComponents ../../../../include/QtDesigner/QExtensionFactory ../../../../include/QtDesigner/QAbstractExtensionFactory ../../../../include/QtDesigner/QAbstractExtensionManager ../../../../include/QtDesigner/QExtensionManager ../../../../include/QtDesigner/QDesignerActionEditorInterface ../../../../include/QtDesigner/QDesignerBrushManagerInterface ../../../../include/QtDesigner/QDesignerDnDItemInterface ../../../../include/QtDesigner/QDesignerFormEditorInterface ../../../../include/QtDesigner/QDesignerFormEditorPluginInterface ../../../../include/QtDesigner/QDesignerFormWindowInterface ../../../../include/QtDesigner/QDesignerFormWindowCursorInterface ../../../../include/QtDesigner/QDesignerFormWindowManagerInterface ../../../../include/QtDesigner/QDesignerFormWindowToolInterface ../../../../include/QtDesigner/QDesignerIconCacheInterface ../../../../include/QtDesigner/QDesignerIntegrationInterface ../../../../include/QtDesigner/QDesignerLanguageExtension ../../../../include/QtDesigner/QDesignerMetaDataBaseItemInterface ../../../../include/QtDesigner/QDesignerMetaDataBaseInterface ../../../../include/QtDesigner/QDesignerObjectInspectorInterface ../../../../include/QtDesigner/QDesignerPromotionInterface ../../../../include/QtDesigner/QDesignerPropertyEditorInterface ../../../../include/QtDesigner/QDesignerResourceBrowserInterface ../../../../include/QtDesigner/QDesignerWidgetBoxInterface ../../../../include/QtDesigner/QDesignerWidgetDataBaseItemInterface ../../../../include/QtDesigner/QDesignerWidgetDataBaseInterface ../../../../include/QtDesigner/QDesignerWidgetFactoryInterface ../../../../include/QtDesigner/QDesignerDynamicPropertySheetExtension ../../../../include/QtDesigner/QDesignerExtraInfoExtension ../../../../include/QtDesigner/QDesignerLayoutDecorationExtension ../../../../include/QtDesigner/QDesignerMemberSheetExtension ../../../../include/QtDesigner/QDesignerPropertySheetExtension ../../../../include/QtDesigner/QDesignerTaskMenuExtension ../../../../include/QtDesigner/QAbstractFormBuilder ../../../../include/QtDesigner/QDesignerContainerExtension ../../../../include/QtDesigner/QDesignerCustomWidgetInterface ../../../../include/QtDesigner/QDesignerCustomWidgetCollectionInterface ../../../../include/QtDesigner/QFormBuilder ../../../../include/QtDesigner/QDesignerExportWidget 
-SYNCQT.PRIVATE_HEADER_FILES = lib_pch.h ../lib/shared/actioneditor_p.h ../lib/shared/actionprovider_p.h ../lib/shared/actionrepository_p.h ../lib/shared/codedialog_p.h ../lib/shared/connectionedit_p.h ../lib/shared/csshighlighter_p.h ../lib/shared/deviceprofile_p.h ../lib/shared/dialoggui_p.h ../lib/shared/extensionfactory_p.h ../lib/shared/filterwidget_p.h ../lib/shared/formlayoutmenu_p.h ../lib/shared/formwindowbase_p.h ../lib/shared/grid_p.h ../lib/shared/gridpanel_p.h ../lib/shared/htmlhighlighter_p.h ../lib/shared/iconloader_p.h ../lib/shared/iconselector_p.h ../lib/shared/invisible_widget_p.h ../lib/shared/layout_p.h ../lib/shared/layoutinfo_p.h ../lib/shared/metadatabase_p.h ../lib/shared/morphmenu_p.h ../lib/shared/newactiondialog_p.h ../lib/shared/newformwidget_p.h ../lib/shared/orderdialog_p.h ../lib/shared/plaintexteditor_p.h ../lib/shared/plugindialog_p.h ../lib/shared/pluginmanager_p.h ../lib/shared/previewconfigurationwidget_p.h ../lib/shared/previewmanager_p.h ../lib/shared/promotionmodel_p.h ../lib/shared/promotiontaskmenu_p.h ../lib/shared/propertylineedit_p.h ../lib/shared/qdesigner_command2_p.h ../lib/shared/qdesigner_command_p.h ../lib/shared/qdesigner_dnditem_p.h ../lib/shared/qdesigner_dockwidget_p.h ../lib/shared/qdesigner_formbuilder_p.h ../lib/shared/qdesigner_formeditorcommand_p.h ../lib/shared/qdesigner_formwindowcommand_p.h ../lib/shared/qdesigner_formwindowmanager_p.h ../lib/shared/qdesigner_integration_p.h ../lib/shared/qdesigner_introspection_p.h ../lib/shared/qdesigner_membersheet_p.h ../lib/shared/qdesigner_menu_p.h ../lib/shared/qdesigner_menubar_p.h ../lib/shared/qdesigner_objectinspector_p.h ../lib/shared/qdesigner_promotion_p.h ../lib/shared/qdesigner_promotiondialog_p.h ../lib/shared/qdesigner_propertycommand_p.h ../lib/shared/qdesigner_propertyeditor_p.h ../lib/shared/qdesigner_propertysheet_p.h ../lib/shared/qdesigner_qsettings_p.h ../lib/shared/qdesigner_stackedbox_p.h ../lib/shared/qdesigner_tabwidget_p.h ../lib/shared/qdesigner_taskmenu_p.h ../lib/shared/qdesigner_toolbar_p.h ../lib/shared/qdesigner_toolbox_p.h ../lib/shared/qdesigner_utils_p.h ../lib/shared/qdesigner_widget_p.h ../lib/shared/qdesigner_widgetbox_p.h ../lib/shared/qdesigner_widgetitem_p.h ../lib/shared/qlayout_widget_p.h ../lib/shared/qscripthighlighter_p.h ../lib/shared/qsimpleresource_p.h ../lib/shared/qtresourceeditordialog_p.h ../lib/shared/qtresourcemodel_p.h ../lib/shared/qtresourceview_p.h ../lib/shared/richtexteditor_p.h ../lib/shared/scriptcommand_p.h ../lib/shared/scriptdialog_p.h ../lib/shared/scripterrordialog_p.h ../lib/shared/shared_enums_p.h ../lib/shared/shared_global_p.h ../lib/shared/shared_settings_p.h ../lib/shared/sheet_delegate_p.h ../lib/shared/signalslotdialog_p.h ../lib/shared/spacer_widget_p.h ../lib/shared/stylesheeteditor_p.h ../lib/shared/textpropertyeditor_p.h ../lib/shared/widgetdatabase_p.h ../lib/shared/widgetfactory_p.h ../lib/shared/zoomwidget_p.h ../lib/sdk/abstractdialoggui_p.h ../lib/sdk/abstractintrospection_p.h ../lib/sdk/abstractnewformwidget_p.h ../lib/sdk/abstractoptionspage_p.h ../lib/sdk/abstractsettings_p.h ../lib/sdk/script_p.h ../lib/uilib/formbuilderextra_p.h ../lib/uilib/formscriptrunner_p.h ../lib/uilib/properties_p.h ../lib/uilib/resourcebuilder_p.h ../lib/uilib/textbuilder_p.h ../lib/uilib/ui4_p.h 
+SYNCQT.HEADER_FILES = ../lib/extension/default_extensionfactory.h ../lib/extension/extension.h ../lib/extension/extension_global.h ../lib/extension/qextensionmanager.h ../lib/uilib/abstractformbuilder.h ../lib/uilib/container.h ../lib/uilib/customwidget.h ../lib/uilib/formbuilder.h ../lib/uilib/qdesignerexportwidget.h ../lib/uilib/uilib_global.h ../lib/components/qdesigner_components.h ../lib/components/qdesigner_components_global.h ../lib/sdk/abstractactioneditor.h ../lib/sdk/abstractbrushmanager.h ../lib/sdk/abstractdnditem.h ../lib/sdk/abstractformeditor.h ../lib/sdk/abstractformeditorplugin.h ../lib/sdk/abstractformwindow.h ../lib/sdk/abstractformwindowcursor.h ../lib/sdk/abstractformwindowmanager.h ../lib/sdk/abstractformwindowtool.h ../lib/sdk/abstracticoncache.h ../lib/sdk/abstractintegration.h ../lib/sdk/abstractlanguage.h ../lib/sdk/abstractmetadatabase.h ../lib/sdk/abstractobjectinspector.h ../lib/sdk/abstractpromotioninterface.h ../lib/sdk/abstractpropertyeditor.h ../lib/sdk/abstractresourcebrowser.h ../lib/sdk/abstractwidgetbox.h ../lib/sdk/abstractwidgetdatabase.h ../lib/sdk/abstractwidgetfactory.h ../lib/sdk/dynamicpropertysheet.h ../lib/sdk/extrainfo.h ../lib/sdk/layoutdecoration.h ../lib/sdk/membersheet.h ../lib/sdk/propertysheet.h ../lib/sdk/sdk_global.h ../lib/sdk/taskmenu.h ../../../../include/QtDesigner/QtDesigner 
+SYNCQT.HEADER_CLASSES = ../../../../include/QtDesigner/QExtensionFactory ../../../../include/QtDesigner/QAbstractExtensionFactory ../../../../include/QtDesigner/QAbstractExtensionManager ../../../../include/QtDesigner/QExtensionManager ../../../../include/QtDesigner/QAbstractFormBuilder ../../../../include/QtDesigner/QDesignerContainerExtension ../../../../include/QtDesigner/QDesignerCustomWidgetInterface ../../../../include/QtDesigner/QDesignerCustomWidgetCollectionInterface ../../../../include/QtDesigner/QFormBuilder ../../../../include/QtDesigner/QDesignerExportWidget ../../../../include/QtDesigner/QDesignerComponents ../../../../include/QtDesigner/QDesignerActionEditorInterface ../../../../include/QtDesigner/QDesignerBrushManagerInterface ../../../../include/QtDesigner/QDesignerDnDItemInterface ../../../../include/QtDesigner/QDesignerFormEditorInterface ../../../../include/QtDesigner/QDesignerFormEditorPluginInterface ../../../../include/QtDesigner/QDesignerFormWindowInterface ../../../../include/QtDesigner/QDesignerFormWindowCursorInterface ../../../../include/QtDesigner/QDesignerFormWindowManagerInterface ../../../../include/QtDesigner/QDesignerFormWindowToolInterface ../../../../include/QtDesigner/QDesignerIconCacheInterface ../../../../include/QtDesigner/QDesignerIntegrationInterface ../../../../include/QtDesigner/QDesignerLanguageExtension ../../../../include/QtDesigner/QDesignerMetaDataBaseItemInterface ../../../../include/QtDesigner/QDesignerMetaDataBaseInterface ../../../../include/QtDesigner/QDesignerObjectInspectorInterface ../../../../include/QtDesigner/QDesignerPromotionInterface ../../../../include/QtDesigner/QDesignerPropertyEditorInterface ../../../../include/QtDesigner/QDesignerResourceBrowserInterface ../../../../include/QtDesigner/QDesignerWidgetBoxInterface ../../../../include/QtDesigner/QDesignerWidgetDataBaseItemInterface ../../../../include/QtDesigner/QDesignerWidgetDataBaseInterface ../../../../include/QtDesigner/QDesignerWidgetFactoryInterface ../../../../include/QtDesigner/QDesignerDynamicPropertySheetExtension ../../../../include/QtDesigner/QDesignerExtraInfoExtension ../../../../include/QtDesigner/QDesignerLayoutDecorationExtension ../../../../include/QtDesigner/QDesignerMemberSheetExtension ../../../../include/QtDesigner/QDesignerPropertySheetExtension ../../../../include/QtDesigner/QDesignerTaskMenuExtension 
+SYNCQT.PRIVATE_HEADER_FILES = lib_pch.h ../lib/shared/actioneditor_p.h ../lib/shared/actionprovider_p.h ../lib/shared/actionrepository_p.h ../lib/shared/codedialog_p.h ../lib/shared/connectionedit_p.h ../lib/shared/csshighlighter_p.h ../lib/shared/deviceprofile_p.h ../lib/shared/dialoggui_p.h ../lib/shared/extensionfactory_p.h ../lib/shared/filterwidget_p.h ../lib/shared/formlayoutmenu_p.h ../lib/shared/formwindowbase_p.h ../lib/shared/grid_p.h ../lib/shared/gridpanel_p.h ../lib/shared/htmlhighlighter_p.h ../lib/shared/iconloader_p.h ../lib/shared/iconselector_p.h ../lib/shared/invisible_widget_p.h ../lib/shared/layout_p.h ../lib/shared/layoutinfo_p.h ../lib/shared/metadatabase_p.h ../lib/shared/morphmenu_p.h ../lib/shared/newactiondialog_p.h ../lib/shared/newformwidget_p.h ../lib/shared/orderdialog_p.h ../lib/shared/plaintexteditor_p.h ../lib/shared/plugindialog_p.h ../lib/shared/pluginmanager_p.h ../lib/shared/previewconfigurationwidget_p.h ../lib/shared/previewmanager_p.h ../lib/shared/promotionmodel_p.h ../lib/shared/promotiontaskmenu_p.h ../lib/shared/propertylineedit_p.h ../lib/shared/qdesigner_command2_p.h ../lib/shared/qdesigner_command_p.h ../lib/shared/qdesigner_dnditem_p.h ../lib/shared/qdesigner_dockwidget_p.h ../lib/shared/qdesigner_formbuilder_p.h ../lib/shared/qdesigner_formeditorcommand_p.h ../lib/shared/qdesigner_formwindowcommand_p.h ../lib/shared/qdesigner_formwindowmanager_p.h ../lib/shared/qdesigner_integration_p.h ../lib/shared/qdesigner_introspection_p.h ../lib/shared/qdesigner_membersheet_p.h ../lib/shared/qdesigner_menu_p.h ../lib/shared/qdesigner_menubar_p.h ../lib/shared/qdesigner_objectinspector_p.h ../lib/shared/qdesigner_promotion_p.h ../lib/shared/qdesigner_promotiondialog_p.h ../lib/shared/qdesigner_propertycommand_p.h ../lib/shared/qdesigner_propertyeditor_p.h ../lib/shared/qdesigner_propertysheet_p.h ../lib/shared/qdesigner_qsettings_p.h ../lib/shared/qdesigner_stackedbox_p.h ../lib/shared/qdesigner_tabwidget_p.h ../lib/shared/qdesigner_taskmenu_p.h ../lib/shared/qdesigner_toolbar_p.h ../lib/shared/qdesigner_toolbox_p.h ../lib/shared/qdesigner_utils_p.h ../lib/shared/qdesigner_widget_p.h ../lib/shared/qdesigner_widgetbox_p.h ../lib/shared/qdesigner_widgetitem_p.h ../lib/shared/qlayout_widget_p.h ../lib/shared/qscripthighlighter_p.h ../lib/shared/qsimpleresource_p.h ../lib/shared/qtresourceeditordialog_p.h ../lib/shared/qtresourcemodel_p.h ../lib/shared/qtresourceview_p.h ../lib/shared/richtexteditor_p.h ../lib/shared/scriptcommand_p.h ../lib/shared/scriptdialog_p.h ../lib/shared/scripterrordialog_p.h ../lib/shared/shared_enums_p.h ../lib/shared/shared_global_p.h ../lib/shared/shared_settings_p.h ../lib/shared/sheet_delegate_p.h ../lib/shared/signalslotdialog_p.h ../lib/shared/spacer_widget_p.h ../lib/shared/stylesheeteditor_p.h ../lib/shared/textpropertyeditor_p.h ../lib/shared/widgetdatabase_p.h ../lib/shared/widgetfactory_p.h ../lib/shared/zoomwidget_p.h ../lib/uilib/formbuilderextra_p.h ../lib/uilib/formscriptrunner_p.h ../lib/uilib/properties_p.h ../lib/uilib/resourcebuilder_p.h ../lib/uilib/textbuilder_p.h ../lib/uilib/ui4_p.h ../lib/sdk/abstractdialoggui_p.h ../lib/sdk/abstractintrospection_p.h ../lib/sdk/abstractnewformwidget_p.h ../lib/sdk/abstractoptionspage_p.h ../lib/sdk/abstractsettings_p.h ../lib/sdk/script_p.h 
Index: qt4-x11-4.6.2/include/QtGui/QtGui
===================================================================
--- qt4-x11-4.6.2.orig/include/QtGui/QtGui	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtGui/QtGui	2010-04-13 18:06:58.225881790 -0400
@@ -1,24 +1,6 @@
 #ifndef QT_QTGUI_MODULE_H
 #define QT_QTGUI_MODULE_H
 #include <QtCore/QtCore>
-#include "qbitmap.h"
-#include "qicon.h"
-#include "qiconengine.h"
-#include "qiconengineplugin.h"
-#include "qimage.h"
-#include "qimageiohandler.h"
-#include "qimagereader.h"
-#include "qimagewriter.h"
-#include "qmovie.h"
-#include "qpicture.h"
-#include "qpictureformatplugin.h"
-#include "qpixmap.h"
-#include "qpixmapcache.h"
-#include "qs60mainapplication.h"
-#include "qs60mainappui.h"
-#include "qs60maindocument.h"
-#include "qvfbhdr.h"
-#include "qwsembedwidget.h"
 #include "qabstractbutton.h"
 #include "qabstractscrollarea.h"
 #include "qabstractslider.h"
@@ -69,93 +51,38 @@
 #include "qtoolbutton.h"
 #include "qvalidator.h"
 #include "qworkspace.h"
-#include "qinputcontext.h"
-#include "qinputcontextfactory.h"
-#include "qinputcontextplugin.h"
-#include "qgraphicsanchorlayout.h"
-#include "qgraphicsgridlayout.h"
-#include "qgraphicsitem.h"
-#include "qgraphicsitemanimation.h"
-#include "qgraphicslayout.h"
-#include "qgraphicslayoutitem.h"
-#include "qgraphicslinearlayout.h"
-#include "qgraphicsproxywidget.h"
-#include "qgraphicsscene.h"
-#include "qgraphicssceneevent.h"
-#include "qgraphicstransform.h"
-#include "qgraphicsview.h"
-#include "qgraphicswidget.h"
-#include "qgenericmatrix.h"
-#include "qmatrix4x4.h"
-#include "qquaternion.h"
-#include "qvector2d.h"
-#include "qvector3d.h"
-#include "qvector4d.h"
-#include "qabstracttextdocumentlayout.h"
-#include "qfont.h"
-#include "qfontdatabase.h"
-#include "qfontinfo.h"
-#include "qfontmetrics.h"
-#include "qsyntaxhighlighter.h"
-#include "qtextcursor.h"
-#include "qtextdocument.h"
-#include "qtextdocumentfragment.h"
-#include "qtextdocumentwriter.h"
-#include "qtextformat.h"
-#include "qtextlayout.h"
-#include "qtextlist.h"
-#include "qtextobject.h"
-#include "qtextoption.h"
-#include "qtexttable.h"
-#include "qabstractpagesetupdialog.h"
-#include "qabstractprintdialog.h"
-#include "qcolordialog.h"
-#include "qdialog.h"
-#include "qerrormessage.h"
-#include "qfiledialog.h"
-#include "qfilesystemmodel.h"
-#include "qfontdialog.h"
-#include "qinputdialog.h"
-#include "qmessagebox.h"
-#include "qpagesetupdialog.h"
-#include "qprintdialog.h"
-#include "qprintpreviewdialog.h"
-#include "qprogressdialog.h"
-#include "qwizard.h"
+#include "qsymbianevent.h"
+#include "qcdestyle.h"
+#include "qcleanlooksstyle.h"
+#include "qcommonstyle.h"
+#include "qgtkstyle.h"
+#include "qmotifstyle.h"
+#include "qplastiquestyle.h"
+#include "qproxystyle.h"
+#include "qs60style.h"
+#include "qstyle.h"
+#include "qstylefactory.h"
+#include "qstyleoption.h"
+#include "qstyleplugin.h"
+#include "qwindowscestyle.h"
+#include "qwindowsmobilestyle.h"
+#include "qwindowsstyle.h"
+#include "qwindowsvistastyle.h"
+#include "qwindowsxpstyle.h"
+#include "qcompleter.h"
+#include "qdesktopservices.h"
+#include "qsystemtrayicon.h"
+#include "qundogroup.h"
+#include "qundostack.h"
+#include "qundoview.h"
 #include "qaccessible.h"
 #include "qaccessible2.h"
 #include "qaccessiblebridge.h"
 #include "qaccessibleobject.h"
 #include "qaccessibleplugin.h"
 #include "qaccessiblewidget.h"
-#include "qaction.h"
-#include "qactiongroup.h"
-#include "qapplication.h"
-#include "qboxlayout.h"
-#include "qclipboard.h"
-#include "qcursor.h"
-#include "qdesktopwidget.h"
-#include "qdrag.h"
-#include "qevent.h"
-#include "qformlayout.h"
-#include "qgesture.h"
-#include "qgesturerecognizer.h"
-#include "qgridlayout.h"
-#include "qkeysequence.h"
-#include "qlayout.h"
-#include "qlayoutitem.h"
-#include "qmime.h"
-#include "qpalette.h"
-#include "qsessionmanager.h"
-#include "qshortcut.h"
-#include "qsizepolicy.h"
-#include "qsound.h"
-#include "qstackedlayout.h"
-#include "qtooltip.h"
-#include "qwhatsthis.h"
-#include "qwidget.h"
-#include "qwidgetaction.h"
-#include "qwindowdefs.h"
+#include "qkeyeventtransition.h"
+#include "qmouseeventtransition.h"
 #include "qabstractitemdelegate.h"
 #include "qabstractitemview.h"
 #include "qabstractproxymodel.h"
@@ -179,6 +106,21 @@
 #include "qtreeview.h"
 #include "qtreewidget.h"
 #include "qtreewidgetitemiterator.h"
+#include "qabstractpagesetupdialog.h"
+#include "qabstractprintdialog.h"
+#include "qcolordialog.h"
+#include "qdialog.h"
+#include "qerrormessage.h"
+#include "qfiledialog.h"
+#include "qfilesystemmodel.h"
+#include "qfontdialog.h"
+#include "qinputdialog.h"
+#include "qmessagebox.h"
+#include "qpagesetupdialog.h"
+#include "qprintdialog.h"
+#include "qprintpreviewdialog.h"
+#include "qprogressdialog.h"
+#include "qwizard.h"
 #include "qbrush.h"
 #include "qcolor.h"
 #include "qcolormap.h"
@@ -198,31 +140,89 @@
 #include "qstylepainter.h"
 #include "qtransform.h"
 #include "qwmatrix.h"
-#include "qsymbianevent.h"
-#include "qcdestyle.h"
-#include "qcleanlooksstyle.h"
-#include "qcommonstyle.h"
-#include "qgtkstyle.h"
-#include "qmotifstyle.h"
-#include "qplastiquestyle.h"
-#include "qproxystyle.h"
-#include "qs60style.h"
-#include "qstyle.h"
-#include "qstylefactory.h"
-#include "qstyleoption.h"
-#include "qstyleplugin.h"
-#include "qwindowscestyle.h"
-#include "qwindowsmobilestyle.h"
-#include "qwindowsstyle.h"
-#include "qwindowsvistastyle.h"
-#include "qwindowsxpstyle.h"
-#include "qkeyeventtransition.h"
-#include "qmouseeventtransition.h"
+#include "qaction.h"
+#include "qactiongroup.h"
+#include "qapplication.h"
+#include "qboxlayout.h"
+#include "qclipboard.h"
+#include "qcursor.h"
+#include "qdesktopwidget.h"
+#include "qdrag.h"
+#include "qevent.h"
+#include "qformlayout.h"
+#include "qgesture.h"
+#include "qgesturerecognizer.h"
+#include "qgridlayout.h"
+#include "qkeysequence.h"
+#include "qlayout.h"
+#include "qlayoutitem.h"
+#include "qmime.h"
+#include "qpalette.h"
+#include "qsessionmanager.h"
+#include "qshortcut.h"
+#include "qsizepolicy.h"
+#include "qsound.h"
+#include "qstackedlayout.h"
+#include "qtooltip.h"
+#include "qwhatsthis.h"
+#include "qwidget.h"
+#include "qwidgetaction.h"
+#include "qwindowdefs.h"
+#include "qs60mainapplication.h"
+#include "qs60mainappui.h"
+#include "qs60maindocument.h"
 #include "qgraphicseffect.h"
-#include "qcompleter.h"
-#include "qdesktopservices.h"
-#include "qsystemtrayicon.h"
-#include "qundogroup.h"
-#include "qundostack.h"
-#include "qundoview.h"
+#include "qabstracttextdocumentlayout.h"
+#include "qfont.h"
+#include "qfontdatabase.h"
+#include "qfontinfo.h"
+#include "qfontmetrics.h"
+#include "qsyntaxhighlighter.h"
+#include "qtextcursor.h"
+#include "qtextdocument.h"
+#include "qtextdocumentfragment.h"
+#include "qtextdocumentwriter.h"
+#include "qtextformat.h"
+#include "qtextlayout.h"
+#include "qtextlist.h"
+#include "qtextobject.h"
+#include "qtextoption.h"
+#include "qtexttable.h"
+#include "qvfbhdr.h"
+#include "qwsembedwidget.h"
+#include "qbitmap.h"
+#include "qicon.h"
+#include "qiconengine.h"
+#include "qiconengineplugin.h"
+#include "qimage.h"
+#include "qimageiohandler.h"
+#include "qimagereader.h"
+#include "qimagewriter.h"
+#include "qmovie.h"
+#include "qpicture.h"
+#include "qpictureformatplugin.h"
+#include "qpixmap.h"
+#include "qpixmapcache.h"
+#include "qgraphicsanchorlayout.h"
+#include "qgraphicsgridlayout.h"
+#include "qgraphicsitem.h"
+#include "qgraphicsitemanimation.h"
+#include "qgraphicslayout.h"
+#include "qgraphicslayoutitem.h"
+#include "qgraphicslinearlayout.h"
+#include "qgraphicsproxywidget.h"
+#include "qgraphicsscene.h"
+#include "qgraphicssceneevent.h"
+#include "qgraphicstransform.h"
+#include "qgraphicsview.h"
+#include "qgraphicswidget.h"
+#include "qgenericmatrix.h"
+#include "qmatrix4x4.h"
+#include "qquaternion.h"
+#include "qvector2d.h"
+#include "qvector3d.h"
+#include "qvector4d.h"
+#include "qinputcontext.h"
+#include "qinputcontextfactory.h"
+#include "qinputcontextplugin.h"
 #endif
Index: qt4-x11-4.6.2/include/QtGui/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtGui/headers.pri	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtGui/headers.pri	2010-04-13 18:06:58.229854081 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../gui/image/qbitmap.h ../gui/image/qicon.h ../gui/image/qiconengine.h ../gui/image/qiconengineplugin.h ../gui/image/qimage.h ../gui/image/qimageiohandler.h ../gui/image/qimagereader.h ../gui/image/qimagewriter.h ../gui/image/qmovie.h ../gui/image/qpicture.h ../gui/image/qpictureformatplugin.h ../gui/image/qpixmap.h ../gui/image/qpixmapcache.h ../gui/s60framework/qs60mainapplication.h ../gui/s60framework/qs60mainappui.h ../gui/s60framework/qs60maindocument.h ../gui/embedded/qcopchannel_qws.h ../gui/embedded/qdecoration_qws.h ../gui/embedded/qdecorationdefault_qws.h ../gui/embedded/qdecorationfactory_qws.h ../gui/embedded/qdecorationplugin_qws.h ../gui/embedded/qdecorationstyled_qws.h ../gui/embedded/qdecorationwindows_qws.h ../gui/embedded/qdirectpainter_qws.h ../gui/embedded/qkbd_qws.h ../gui/embedded/qkbddriverfactory_qws.h ../gui/embedded/qkbddriverplugin_qws.h ../gui/embedded/qkbdlinuxinput_qws.h ../gui/embedded/qkbdqnx_qws.h ../gui/embedded/qkbdtty_qws.h ../gui/embedded/qkbdum_qws.h ../gui/embedded/qkbdvfb_qws.h ../gui/embedded/qmouse_qws.h ../gui/embedded/qmousedriverfactory_qws.h ../gui/embedded/qmousedriverplugin_qws.h ../gui/embedded/qmouselinuxinput_qws.h ../gui/embedded/qmouselinuxtp_qws.h ../gui/embedded/qmousepc_qws.h ../gui/embedded/qmouseqnx_qws.h ../gui/embedded/qmousetslib_qws.h ../gui/embedded/qmousevfb_qws.h ../gui/embedded/qscreen_qws.h ../gui/embedded/qscreendriverfactory_qws.h ../gui/embedded/qscreendriverplugin_qws.h ../gui/embedded/qscreenlinuxfb_qws.h ../gui/embedded/qscreenproxy_qws.h ../gui/embedded/qscreenqnx_qws.h ../gui/embedded/qscreentransformed_qws.h ../gui/embedded/qscreenvfb_qws.h ../gui/embedded/qsoundqss_qws.h ../gui/embedded/qtransportauth_qws.h ../gui/embedded/qtransportauthdefs_qws.h ../gui/embedded/qvfbhdr.h ../gui/embedded/qwindowsystem_qws.h ../gui/embedded/qwscursor_qws.h ../gui/embedded/qwsdisplay_qws.h ../gui/embedded/qwsembedwidget.h ../gui/embedded/qwsevent_qws.h ../gui/embedded/qwsmanager_qws.h ../gui/embedded/qwsproperty_qws.h ../gui/embedded/qwsprotocolitem_qws.h ../gui/embedded/qwssocket_qws.h ../gui/embedded/qwsutils_qws.h ../gui/widgets/qabstractbutton.h ../gui/widgets/qabstractscrollarea.h ../gui/widgets/qabstractslider.h ../gui/widgets/qabstractspinbox.h ../gui/widgets/qbuttongroup.h ../gui/widgets/qcalendarwidget.h ../gui/widgets/qcheckbox.h ../gui/widgets/qcombobox.h ../gui/widgets/qcommandlinkbutton.h ../gui/widgets/qdatetimeedit.h ../gui/widgets/qdial.h ../gui/widgets/qdialogbuttonbox.h ../gui/widgets/qdockwidget.h ../gui/widgets/qfocusframe.h ../gui/widgets/qfontcombobox.h ../gui/widgets/qframe.h ../gui/widgets/qgroupbox.h ../gui/widgets/qlabel.h ../gui/widgets/qlcdnumber.h ../gui/widgets/qlineedit.h ../gui/widgets/qmaccocoaviewcontainer_mac.h ../gui/widgets/qmacnativewidget_mac.h ../gui/widgets/qmainwindow.h ../gui/widgets/qmdiarea.h ../gui/widgets/qmdisubwindow.h ../gui/widgets/qmenu.h ../gui/widgets/qmenubar.h ../gui/widgets/qmenudata.h ../gui/widgets/qplaintextedit.h ../gui/widgets/qprintpreviewwidget.h ../gui/widgets/qprogressbar.h ../gui/widgets/qpushbutton.h ../gui/widgets/qradiobutton.h ../gui/widgets/qrubberband.h ../gui/widgets/qscrollarea.h ../gui/widgets/qscrollbar.h ../gui/widgets/qsizegrip.h ../gui/widgets/qslider.h ../gui/widgets/qspinbox.h ../gui/widgets/qsplashscreen.h ../gui/widgets/qsplitter.h ../gui/widgets/qstackedwidget.h ../gui/widgets/qstatusbar.h ../gui/widgets/qtabbar.h ../gui/widgets/qtabwidget.h ../gui/widgets/qtextbrowser.h ../gui/widgets/qtextedit.h ../gui/widgets/qtoolbar.h ../gui/widgets/qtoolbox.h ../gui/widgets/qtoolbutton.h ../gui/widgets/qvalidator.h ../gui/widgets/qworkspace.h ../gui/inputmethod/qinputcontext.h ../gui/inputmethod/qinputcontextfactory.h ../gui/inputmethod/qinputcontextplugin.h ../gui/graphicsview/qgraphicsanchorlayout.h ../gui/graphicsview/qgraphicsgridlayout.h ../gui/graphicsview/qgraphicsitem.h ../gui/graphicsview/qgraphicsitemanimation.h ../gui/graphicsview/qgraphicslayout.h ../gui/graphicsview/qgraphicslayoutitem.h ../gui/graphicsview/qgraphicslinearlayout.h ../gui/graphicsview/qgraphicsproxywidget.h ../gui/graphicsview/qgraphicsscene.h ../gui/graphicsview/qgraphicssceneevent.h ../gui/graphicsview/qgraphicstransform.h ../gui/graphicsview/qgraphicsview.h ../gui/graphicsview/qgraphicswidget.h ../gui/math3d/qgenericmatrix.h ../gui/math3d/qmatrix4x4.h ../gui/math3d/qquaternion.h ../gui/math3d/qvector2d.h ../gui/math3d/qvector3d.h ../gui/math3d/qvector4d.h ../gui/text/qabstractfontengine_qws.h ../gui/text/qabstracttextdocumentlayout.h ../gui/text/qfont.h ../gui/text/qfontdatabase.h ../gui/text/qfontinfo.h ../gui/text/qfontmetrics.h ../gui/text/qsyntaxhighlighter.h ../gui/text/qtextcursor.h ../gui/text/qtextdocument.h ../gui/text/qtextdocumentfragment.h ../gui/text/qtextdocumentwriter.h ../gui/text/qtextformat.h ../gui/text/qtextlayout.h ../gui/text/qtextlist.h ../gui/text/qtextobject.h ../gui/text/qtextoption.h ../gui/text/qtexttable.h ../gui/dialogs/qabstractpagesetupdialog.h ../gui/dialogs/qabstractprintdialog.h ../gui/dialogs/qcolordialog.h ../gui/dialogs/qdialog.h ../gui/dialogs/qerrormessage.h ../gui/dialogs/qfiledialog.h ../gui/dialogs/qfilesystemmodel.h ../gui/dialogs/qfontdialog.h ../gui/dialogs/qinputdialog.h ../gui/dialogs/qmessagebox.h ../gui/dialogs/qpagesetupdialog.h ../gui/dialogs/qprintdialog.h ../gui/dialogs/qprintpreviewdialog.h ../gui/dialogs/qprogressdialog.h ../gui/dialogs/qwizard.h ../gui/accessible/qaccessible.h ../gui/accessible/qaccessible2.h ../gui/accessible/qaccessiblebridge.h ../gui/accessible/qaccessibleobject.h ../gui/accessible/qaccessibleplugin.h ../gui/accessible/qaccessiblewidget.h ../gui/kernel/qaction.h ../gui/kernel/qactiongroup.h ../gui/kernel/qapplication.h ../gui/kernel/qboxlayout.h ../gui/kernel/qclipboard.h ../gui/kernel/qcursor.h ../gui/kernel/qdesktopwidget.h ../gui/kernel/qdrag.h ../gui/kernel/qevent.h ../gui/kernel/qformlayout.h ../gui/kernel/qgesture.h ../gui/kernel/qgesturerecognizer.h ../gui/kernel/qgridlayout.h ../gui/kernel/qguifunctions_wince.h ../gui/kernel/qkeysequence.h ../gui/kernel/qlayout.h ../gui/kernel/qlayoutitem.h ../gui/kernel/qmacdefines_mac.h ../gui/kernel/qmime.h ../gui/kernel/qpalette.h ../gui/kernel/qsessionmanager.h ../gui/kernel/qshortcut.h ../gui/kernel/qsizepolicy.h ../gui/kernel/qsound.h ../gui/kernel/qstackedlayout.h ../gui/kernel/qtooltip.h ../gui/kernel/qwhatsthis.h ../gui/kernel/qwidget.h ../gui/kernel/qwidgetaction.h ../gui/kernel/qwindowdefs.h ../gui/kernel/qwindowdefs_win.h ../gui/kernel/qx11embed_x11.h ../gui/kernel/qx11info_x11.h ../gui/itemviews/qabstractitemdelegate.h ../gui/itemviews/qabstractitemview.h ../gui/itemviews/qabstractproxymodel.h ../gui/itemviews/qcolumnview.h ../gui/itemviews/qdatawidgetmapper.h ../gui/itemviews/qdirmodel.h ../gui/itemviews/qfileiconprovider.h ../gui/itemviews/qheaderview.h ../gui/itemviews/qitemdelegate.h ../gui/itemviews/qitemeditorfactory.h ../gui/itemviews/qitemselectionmodel.h ../gui/itemviews/qlistview.h ../gui/itemviews/qlistwidget.h ../gui/itemviews/qproxymodel.h ../gui/itemviews/qsortfilterproxymodel.h ../gui/itemviews/qstandarditemmodel.h ../gui/itemviews/qstringlistmodel.h ../gui/itemviews/qstyleditemdelegate.h ../gui/itemviews/qtableview.h ../gui/itemviews/qtablewidget.h ../gui/itemviews/qtreeview.h ../gui/itemviews/qtreewidget.h ../gui/itemviews/qtreewidgetitemiterator.h ../gui/painting/qbrush.h ../gui/painting/qcolor.h ../gui/painting/qcolormap.h ../gui/painting/qdrawutil.h ../gui/painting/qmatrix.h ../gui/painting/qpaintdevice.h ../gui/painting/qpaintengine.h ../gui/painting/qpainter.h ../gui/painting/qpainterpath.h ../gui/painting/qpen.h ../gui/painting/qpolygon.h ../gui/painting/qprintengine.h ../gui/painting/qprinter.h ../gui/painting/qprinterinfo.h ../gui/painting/qregion.h ../gui/painting/qrgb.h ../gui/painting/qstylepainter.h ../gui/painting/qtransform.h ../gui/painting/qwmatrix.h ../gui/symbian/qsymbianevent.h ../gui/styles/qcdestyle.h ../gui/styles/qcleanlooksstyle.h ../gui/styles/qcommonstyle.h ../gui/styles/qgtkstyle.h ../gui/styles/qmacstyle_mac.h ../gui/styles/qmotifstyle.h ../gui/styles/qplastiquestyle.h ../gui/styles/qproxystyle.h ../gui/styles/qs60style.h ../gui/styles/qstyle.h ../gui/styles/qstylefactory.h ../gui/styles/qstyleoption.h ../gui/styles/qstyleplugin.h ../gui/styles/qwindowscestyle.h ../gui/styles/qwindowsmobilestyle.h ../gui/styles/qwindowsstyle.h ../gui/styles/qwindowsvistastyle.h ../gui/styles/qwindowsxpstyle.h ../gui/statemachine/qkeyeventtransition.h ../gui/statemachine/qmouseeventtransition.h ../gui/effects/qgraphicseffect.h ../gui/util/qcompleter.h ../gui/util/qdesktopservices.h ../gui/util/qsystemtrayicon.h ../gui/util/qundogroup.h ../gui/util/qundostack.h ../gui/util/qundoview.h ../../include/QtGui/QtGui 
-SYNCQT.HEADER_CLASSES = ../../include/QtGui/QBitmap ../../include/QtGui/QIcon ../../include/QtGui/QIconSet ../../include/QtGui/QIconEngine ../../include/QtGui/QIconEngineV2 ../../include/QtGui/QIconEngineFactoryInterface ../../include/QtGui/QIconEnginePlugin ../../include/QtGui/QIconEngineFactoryInterfaceV2 ../../include/QtGui/QIconEnginePluginV2 ../../include/QtGui/QImageTextKeyLang ../../include/QtGui/QImage ../../include/QtGui/QImageIOHandler ../../include/QtGui/QImageIOHandlerFactoryInterface ../../include/QtGui/QImageIOPlugin ../../include/QtGui/QImageReader ../../include/QtGui/QImageWriter ../../include/QtGui/QMovie ../../include/QtGui/QPicture ../../include/QtGui/QPictureIO ../../include/QtGui/QPictureFormatInterface ../../include/QtGui/QPictureFormatPlugin ../../include/QtGui/QPixmap ../../include/QtGui/QPixmapCache ../../include/QtGui/QS60MainApplication ../../include/QtGui/QS60MainAppUi ../../include/QtGui/QS60MainDocument ../../include/QtGui/QCopChannel ../../include/QtGui/QDecorationAction ../../include/QtGui/QDecoration ../../include/QtGui/QDecorationDefault ../../include/QtGui/QDecorationFactory ../../include/QtGui/QDecorationFactoryInterface ../../include/QtGui/QDecorationPlugin ../../include/QtGui/QDecorationStyled ../../include/QtGui/QDecorationWindows ../../include/QtGui/QDirectPainter ../../include/QtGui/QWSKeyboardHandler ../../include/QtGui/QKbdDriverFactory ../../include/QtGui/QWSKeyboardHandlerFactoryInterface ../../include/QtGui/QKbdDriverPlugin ../../include/QtGui/QWSLinuxInputKeyboardHandler ../../include/QtGui/QWSQnxKeyboardHandler ../../include/QtGui/QWSTtyKeyboardHandler ../../include/QtGui/QWSUmKeyboardHandler ../../include/QtGui/QVFbKeyboardHandler ../../include/QtGui/QWSPointerCalibrationData ../../include/QtGui/QWSMouseHandler ../../include/QtGui/QWSCalibratedMouseHandler ../../include/QtGui/QMouseDriverFactory ../../include/QtGui/QWSMouseHandlerFactoryInterface ../../include/QtGui/QMouseDriverPlugin ../../include/QtGui/QWSLinuxInputMouseHandler ../../include/QtGui/QWSLinuxTPMouseHandler ../../include/QtGui/QWSPcMouseHandler ../../include/QtGui/QQnxMouseHandler ../../include/QtGui/QWSTslibMouseHandler ../../include/QtGui/QVFbMouseHandler ../../include/QtGui/QScreenCursor ../../include/QtGui/QPoolEntry ../../include/QtGui/QScreen ../../include/QtGui/QScreenDriverFactory ../../include/QtGui/QScreenDriverFactoryInterface ../../include/QtGui/QScreenDriverPlugin ../../include/QtGui/QLinuxFb_Shared ../../include/QtGui/QLinuxFbScreen ../../include/QtGui/QProxyScreenCursor ../../include/QtGui/QProxyScreen ../../include/QtGui/QQnxScreen ../../include/QtGui/QTransformedScreen ../../include/QtGui/QVFbScreen ../../include/QtGui/QWSSoundServer ../../include/QtGui/QWSSoundClient ../../include/QtGui/QWSSoundServerSocket ../../include/QtGui/QTransportAuth ../../include/QtGui/QAuthDevice ../../include/QtGui/QVFbHeader ../../include/QtGui/QVFbKeyData ../../include/QtGui/QWSInternalWindowInfo ../../include/QtGui/QWSScreenSaver ../../include/QtGui/QWSWindow ../../include/QtGui/QWSServer ../../include/QtGui/QWSInputMethod ../../include/QtGui/QWSCursorMap ../../include/QtGui/QWSClient ../../include/QtGui/QWSCursor ../../include/QtGui/QWSWindowInfo ../../include/QtGui/QWSDisplay ../../include/QtGui/QWSEmbedWidget ../../include/QtGui/QWSEvent ../../include/QtGui/QWSManager ../../include/QtGui/QWSPropertyManager ../../include/QtGui/QWSProtocolItem ../../include/QtGui/QWSSocket ../../include/QtGui/QWSServerSocket ../../include/QtGui/QAbstractButton ../../include/QtGui/QAbstractScrollArea ../../include/QtGui/QAbstractSlider ../../include/QtGui/QAbstractSpinBox ../../include/QtGui/QButtonGroup ../../include/QtGui/QCalendarWidget ../../include/QtGui/QCheckBox ../../include/QtGui/QComboBox ../../include/QtGui/QCommandLinkButton ../../include/QtGui/QDateTimeEdit ../../include/QtGui/QTimeEdit ../../include/QtGui/QDateEdit ../../include/QtGui/QDial ../../include/QtGui/QDialogButtonBox ../../include/QtGui/QDockWidget ../../include/QtGui/QFocusFrame ../../include/QtGui/QFontComboBox ../../include/QtGui/QFrame ../../include/QtGui/QGroupBox ../../include/QtGui/QLabel ../../include/QtGui/QLCDNumber ../../include/QtGui/QLineEdit ../../include/QtGui/QMacCocoaViewContainer ../../include/QtGui/QMacNativeWidget ../../include/QtGui/QMainWindow ../../include/QtGui/QMdiArea ../../include/QtGui/QMdiSubWindow ../../include/QtGui/QMenu ../../include/QtGui/QMenuBar ../../include/QtGui/QMenuItem ../../include/QtGui/QPlainTextEdit ../../include/QtGui/QPlainTextDocumentLayout ../../include/QtGui/QPrintPreviewWidget ../../include/QtGui/QProgressBar ../../include/QtGui/QPushButton ../../include/QtGui/QRadioButton ../../include/QtGui/QRubberBand ../../include/QtGui/QScrollArea ../../include/QtGui/QScrollBar ../../include/QtGui/QSizeGrip ../../include/QtGui/QSlider ../../include/QtGui/QSpinBox ../../include/QtGui/QDoubleSpinBox ../../include/QtGui/QSplashScreen ../../include/QtGui/QSplitter ../../include/QtGui/QSplitterHandle ../../include/QtGui/QStackedWidget ../../include/QtGui/QStatusBar ../../include/QtGui/QTabBar ../../include/QtGui/QTabWidget ../../include/QtGui/QTextBrowser ../../include/QtGui/QTextEdit ../../include/QtGui/QToolBar ../../include/QtGui/QToolBox ../../include/QtGui/QToolButton ../../include/QtGui/QValidator ../../include/QtGui/QIntValidator ../../include/QtGui/QDoubleValidator ../../include/QtGui/QRegExpValidator ../../include/QtGui/QWorkspace ../../include/QtGui/QInputContext ../../include/QtGui/QInputContextFactory ../../include/QtGui/QInputContextFactoryInterface ../../include/QtGui/QInputContextPlugin ../../include/QtGui/QGraphicsAnchor ../../include/QtGui/QGraphicsAnchorLayout ../../include/QtGui/QGraphicsGridLayout ../../include/QtGui/QGraphicsItem ../../include/QtGui/QGraphicsObject ../../include/QtGui/QAbstractGraphicsShapeItem ../../include/QtGui/QGraphicsPathItem ../../include/QtGui/QGraphicsRectItem ../../include/QtGui/QGraphicsEllipseItem ../../include/QtGui/QGraphicsPolygonItem ../../include/QtGui/QGraphicsLineItem ../../include/QtGui/QGraphicsPixmapItem ../../include/QtGui/QGraphicsTextItem ../../include/QtGui/QGraphicsSimpleTextItem ../../include/QtGui/QGraphicsItemGroup ../../include/QtGui/QGraphicsItemAnimation ../../include/QtGui/QGraphicsLayout ../../include/QtGui/QGraphicsLayoutItem ../../include/QtGui/QGraphicsLinearLayout ../../include/QtGui/QGraphicsProxyWidget ../../include/QtGui/QGraphicsScene ../../include/QtGui/QGraphicsSceneEvent ../../include/QtGui/QGraphicsSceneMouseEvent ../../include/QtGui/QGraphicsSceneWheelEvent ../../include/QtGui/QGraphicsSceneContextMenuEvent ../../include/QtGui/QGraphicsSceneHoverEvent ../../include/QtGui/QGraphicsSceneHelpEvent ../../include/QtGui/QGraphicsSceneDragDropEvent ../../include/QtGui/QGraphicsSceneResizeEvent ../../include/QtGui/QGraphicsSceneMoveEvent ../../include/QtGui/QGraphicsTransform ../../include/QtGui/QGraphicsScale ../../include/QtGui/QGraphicsRotation ../../include/QtGui/QGraphicsView ../../include/QtGui/QGraphicsWidget ../../include/QtGui/QGenericMatrix ../../include/QtGui/QMatrix2x2 ../../include/QtGui/QMatrix2x3 ../../include/QtGui/QMatrix2x4 ../../include/QtGui/QMatrix3x2 ../../include/QtGui/QMatrix3x3 ../../include/QtGui/QMatrix3x4 ../../include/QtGui/QMatrix4x2 ../../include/QtGui/QMatrix4x3 ../../include/QtGui/QMatrix4x4 ../../include/QtGui/QQuaternion ../../include/QtGui/QVector2D ../../include/QtGui/QVector3D ../../include/QtGui/QVector4D ../../include/QtGui/QFontEngineInfo ../../include/QtGui/QFontEngineFactoryInterface ../../include/QtGui/QFontEnginePlugin ../../include/QtGui/QAbstractFontEngine ../../include/QtGui/QAbstractTextDocumentLayout ../../include/QtGui/QTextObjectInterface ../../include/QtGui/QFont ../../include/QtGui/QFontDatabase ../../include/QtGui/QFontInfo ../../include/QtGui/QFontMetrics ../../include/QtGui/QFontMetricsF ../../include/QtGui/QSyntaxHighlighter ../../include/QtGui/QTextCursor ../../include/QtGui/QAbstractUndoItem ../../include/QtGui/QTextDocument ../../include/QtGui/QTextDocumentFragment ../../include/QtGui/QTextDocumentWriter ../../include/QtGui/QTextLength ../../include/QtGui/QTextFormat ../../include/QtGui/QTextCharFormat ../../include/QtGui/QTextBlockFormat ../../include/QtGui/QTextListFormat ../../include/QtGui/QTextImageFormat ../../include/QtGui/QTextFrameFormat ../../include/QtGui/QTextTableFormat ../../include/QtGui/QTextTableCellFormat ../../include/QtGui/QTextInlineObject ../../include/QtGui/QTextLayout ../../include/QtGui/QTextLine ../../include/QtGui/QTextList ../../include/QtGui/QTextObject ../../include/QtGui/QTextBlockGroup ../../include/QtGui/QTextFrameLayoutData ../../include/QtGui/QTextFrame ../../include/QtGui/QTextBlockUserData ../../include/QtGui/QTextBlock ../../include/QtGui/QTextFragment ../../include/QtGui/QTextOption ../../include/QtGui/QTextTableCell ../../include/QtGui/QTextTable ../../include/QtGui/QAbstractPageSetupDialog ../../include/QtGui/QAbstractPrintDialog ../../include/QtGui/QColorDialog ../../include/QtGui/QDialog ../../include/QtGui/QErrorMessage ../../include/QtGui/QFileDialog ../../include/QtGui/QFileSystemModel ../../include/QtGui/QFontDialog ../../include/QtGui/QInputDialog ../../include/QtGui/QMessageBox ../../include/QtGui/QPageSetupDialog ../../include/QtGui/QUnixPrintWidget ../../include/QtGui/QPrintDialog ../../include/QtGui/QPrintPreviewDialog ../../include/QtGui/QProgressDialog ../../include/QtGui/QWizard ../../include/QtGui/QWizardPage ../../include/QtGui/QAccessible ../../include/QtGui/QAccessibleInterface ../../include/QtGui/QAccessibleInterfaceEx ../../include/QtGui/QAccessibleEvent ../../include/QtGui/QAccessible2Interface ../../include/QtGui/QAccessibleTextInterface ../../include/QtGui/QAccessibleEditableTextInterface ../../include/QtGui/QAccessibleSimpleEditableTextInterface ../../include/QtGui/QAccessibleValueInterface ../../include/QtGui/QAccessibleTableInterface ../../include/QtGui/QAccessibleActionInterface ../../include/QtGui/QAccessibleImageInterface ../../include/QtGui/QAccessibleBridge ../../include/QtGui/QAccessibleBridgeFactoryInterface ../../include/QtGui/QAccessibleBridgePlugin ../../include/QtGui/QAccessibleObject ../../include/QtGui/QAccessibleObjectEx ../../include/QtGui/QAccessibleApplication ../../include/QtGui/QAccessibleFactoryInterface ../../include/QtGui/QAccessiblePlugin ../../include/QtGui/QAccessibleWidget ../../include/QtGui/QAccessibleWidgetEx ../../include/QtGui/QAction ../../include/QtGui/QActionGroup ../../include/QtGui/QApplication ../../include/QtGui/QBoxLayout ../../include/QtGui/QHBoxLayout ../../include/QtGui/QVBoxLayout ../../include/QtGui/QClipboard ../../include/QtGui/QCursor ../../include/QtGui/QCursorShape ../../include/QtGui/QDesktopWidget ../../include/QtGui/QDrag ../../include/QtGui/QtEvents ../../include/QtGui/QInputEvent ../../include/QtGui/QMouseEvent ../../include/QtGui/QHoverEvent ../../include/QtGui/QWheelEvent ../../include/QtGui/QTabletEvent ../../include/QtGui/QKeyEvent ../../include/QtGui/QFocusEvent ../../include/QtGui/QPaintEvent ../../include/QtGui/QUpdateLaterEvent ../../include/QtGui/QMoveEvent ../../include/QtGui/QResizeEvent ../../include/QtGui/QCloseEvent ../../include/QtGui/QIconDragEvent ../../include/QtGui/QShowEvent ../../include/QtGui/QHideEvent ../../include/QtGui/QContextMenuEvent ../../include/QtGui/QInputMethodEvent ../../include/QtGui/QDropEvent ../../include/QtGui/QDragMoveEvent ../../include/QtGui/QDragEnterEvent ../../include/QtGui/QDragResponseEvent ../../include/QtGui/QDragLeaveEvent ../../include/QtGui/QHelpEvent ../../include/QtGui/QStatusTipEvent ../../include/QtGui/QWhatsThisClickedEvent ../../include/QtGui/QActionEvent ../../include/QtGui/QFileOpenEvent ../../include/QtGui/QToolBarChangeEvent ../../include/QtGui/QShortcutEvent ../../include/QtGui/QClipboardEvent ../../include/QtGui/QWindowStateChangeEvent ../../include/QtGui/QMenubarUpdatedEvent ../../include/QtGui/QTouchEvent ../../include/QtGui/QGestureEvent ../../include/QtGui/QFormLayout ../../include/QtGui/QGesture ../../include/QtGui/QPanGesture ../../include/QtGui/QPinchGesture ../../include/QtGui/QSwipeGesture ../../include/QtGui/QTapGesture ../../include/QtGui/QTapAndHoldGesture ../../include/QtGui/QGestureRecognizer ../../include/QtGui/QGridLayout ../../include/QtGui/QKeySequence ../../include/QtGui/QLayoutIterator ../../include/QtGui/QLayout ../../include/QtGui/QLayoutItem ../../include/QtGui/QSpacerItem ../../include/QtGui/QWidgetItem ../../include/QtGui/QWidgetItemV2 ../../include/QtGui/QMimeSource ../../include/QtGui/QWindowsMime ../../include/QtGui/QMacMime ../../include/QtGui/QMacPasteboardMime ../../include/QtGui/QPalette ../../include/QtGui/QColorGroup ../../include/QtGui/QSessionManager ../../include/QtGui/QShortcut ../../include/QtGui/QSizePolicy ../../include/QtGui/QSound ../../include/QtGui/QStackedLayout ../../include/QtGui/QToolTip ../../include/QtGui/QWhatsThis ../../include/QtGui/QWidgetData ../../include/QtGui/QWidget ../../include/QtGui/QWidgetAction ../../include/QtGui/QWidgetList ../../include/QtGui/QWidgetMapper ../../include/QtGui/QWidgetSet ../../include/QtGui/QX11EmbedWidget ../../include/QtGui/QX11EmbedContainer ../../include/QtGui/QX11Info ../../include/QtGui/QAbstractItemDelegate ../../include/QtGui/QAbstractItemView ../../include/QtGui/QAbstractProxyModel ../../include/QtGui/QColumnView ../../include/QtGui/QDataWidgetMapper ../../include/QtGui/QDirModel ../../include/QtGui/QFileIconProvider ../../include/QtGui/QHeaderView ../../include/QtGui/QItemDelegate ../../include/QtGui/QItemEditorCreatorBase ../../include/QtGui/QItemEditorCreator ../../include/QtGui/QStandardItemEditorCreator ../../include/QtGui/QItemEditorFactory ../../include/QtGui/QItemSelectionRange ../../include/QtGui/QItemSelectionModel ../../include/QtGui/QItemSelection ../../include/QtGui/QListView ../../include/QtGui/QListWidgetItem ../../include/QtGui/QListWidget ../../include/QtGui/QProxyModel ../../include/QtGui/QSortFilterProxyModel ../../include/QtGui/QStandardItem ../../include/QtGui/QStandardItemModel ../../include/QtGui/QStringListModel ../../include/QtGui/QStyledItemDelegate ../../include/QtGui/QTableView ../../include/QtGui/QTableWidgetSelectionRange ../../include/QtGui/QTableWidgetItem ../../include/QtGui/QTableWidget ../../include/QtGui/QTreeView ../../include/QtGui/QTreeWidgetItem ../../include/QtGui/QTreeWidget ../../include/QtGui/QTreeWidgetItemIterator ../../include/QtGui/QBrush ../../include/QtGui/QBrushData ../../include/QtGui/QGradientStop ../../include/QtGui/QGradientStops ../../include/QtGui/QGradient ../../include/QtGui/QLinearGradient ../../include/QtGui/QRadialGradient ../../include/QtGui/QConicalGradient ../../include/QtGui/QColor ../../include/QtGui/QColormap ../../include/QtGui/QTileRules ../../include/QtGui/QMatrix ../../include/QtGui/QPaintDevice ../../include/QtGui/QTextItem ../../include/QtGui/QPaintEngine ../../include/QtGui/QPaintEngineState ../../include/QtGui/QPainter ../../include/QtGui/QPainterPath ../../include/QtGui/QPainterPathPrivate ../../include/QtGui/QPainterPathStroker ../../include/QtGui/QPen ../../include/QtGui/QPolygon ../../include/QtGui/QPolygonF ../../include/QtGui/QPrintEngine ../../include/QtGui/QPrinter ../../include/QtGui/QPrinterInfo ../../include/QtGui/QRegion ../../include/QtGui/QRgb ../../include/QtGui/QStylePainter ../../include/QtGui/QTransform ../../include/QtGui/QWMatrix ../../include/QtGui/QSymbianEvent ../../include/QtGui/QCDEStyle ../../include/QtGui/QCleanlooksStyle ../../include/QtGui/QCommonStyle ../../include/QtGui/QGtkStyle ../../include/QtGui/QMacStyle ../../include/QtGui/QMotifStyle ../../include/QtGui/QPlastiqueStyle ../../include/QtGui/QProxyStyle ../../include/QtGui/QS60Style ../../include/QtGui/QStyle ../../include/QtGui/QStyleFactory ../../include/QtGui/QStyleOption ../../include/QtGui/QStyleOptionFocusRect ../../include/QtGui/QStyleOptionFrame ../../include/QtGui/QStyleOptionFrameV2 ../../include/QtGui/QStyleOptionFrameV3 ../../include/QtGui/QStyleOptionTabWidgetFrame ../../include/QtGui/QStyleOptionTabWidgetFrameV2 ../../include/QtGui/QStyleOptionTabBarBase ../../include/QtGui/QStyleOptionTabBarBaseV2 ../../include/QtGui/QStyleOptionHeader ../../include/QtGui/QStyleOptionButton ../../include/QtGui/QStyleOptionTab ../../include/QtGui/QStyleOptionTabV2 ../../include/QtGui/QStyleOptionTabV3 ../../include/QtGui/QStyleOptionToolBar ../../include/QtGui/QStyleOptionProgressBar ../../include/QtGui/QStyleOptionProgressBarV2 ../../include/QtGui/QStyleOptionMenuItem ../../include/QtGui/QStyleOptionQ3ListViewItem ../../include/QtGui/QStyleOptionQ3DockWindow ../../include/QtGui/QStyleOptionDockWidget ../../include/QtGui/QStyleOptionDockWidgetV2 ../../include/QtGui/QStyleOptionViewItem ../../include/QtGui/QStyleOptionViewItemV2 ../../include/QtGui/QStyleOptionViewItemV3 ../../include/QtGui/QStyleOptionViewItemV4 ../../include/QtGui/QStyleOptionToolBox ../../include/QtGui/QStyleOptionToolBoxV2 ../../include/QtGui/QStyleOptionRubberBand ../../include/QtGui/QStyleOptionComplex ../../include/QtGui/QStyleOptionSlider ../../include/QtGui/QStyleOptionSpinBox ../../include/QtGui/QStyleOptionQ3ListView ../../include/QtGui/QStyleOptionToolButton ../../include/QtGui/QStyleOptionComboBox ../../include/QtGui/QStyleOptionTitleBar ../../include/QtGui/QStyleOptionGroupBox ../../include/QtGui/QStyleOptionSizeGrip ../../include/QtGui/QStyleOptionGraphicsItem ../../include/QtGui/QStyleHintReturn ../../include/QtGui/QStyleHintReturnMask ../../include/QtGui/QStyleHintReturnVariant ../../include/QtGui/QStyleFactoryInterface ../../include/QtGui/QStylePlugin ../../include/QtGui/QWindowsCEStyle ../../include/QtGui/QWindowsMobileStyle ../../include/QtGui/QWindowsStyle ../../include/QtGui/QWindowsVistaStyle ../../include/QtGui/QWindowsXPStyle ../../include/QtGui/QKeyEventTransition ../../include/QtGui/QMouseEventTransition ../../include/QtGui/QGraphicsEffect ../../include/QtGui/QGraphicsColorizeEffect ../../include/QtGui/QGraphicsBlurEffect ../../include/QtGui/QGraphicsDropShadowEffect ../../include/QtGui/QGraphicsOpacityEffect ../../include/QtGui/QCompleter ../../include/QtGui/QDesktopServices ../../include/QtGui/QSystemTrayIcon ../../include/QtGui/QUndoGroup ../../include/QtGui/QUndoCommand ../../include/QtGui/QUndoStack ../../include/QtGui/QUndoView 
-SYNCQT.PRIVATE_HEADER_FILES = ../gui/image/qbmphandler_p.h ../gui/image/qicon_p.h ../gui/image/qiconloader_p.h ../gui/image/qimage_p.h ../gui/image/qimagepixmapcleanuphooks_p.h ../gui/image/qnativeimage_p.h ../gui/image/qpaintengine_pic_p.h ../gui/image/qpicture_p.h ../gui/image/qpixmap_mac_p.h ../gui/image/qpixmap_raster_p.h ../gui/image/qpixmap_s60_p.h ../gui/image/qpixmap_x11_p.h ../gui/image/qpixmapcache_p.h ../gui/image/qpixmapdata_p.h ../gui/image/qpixmapdatafactory_p.h ../gui/image/qpixmapfilter_p.h ../gui/image/qpnghandler_p.h ../gui/image/qppmhandler_p.h ../gui/image/qxbmhandler_p.h ../gui/image/qxpmhandler_p.h ../gui/s60framework/qs60mainapplication_p.h ../gui/embedded/qkbd_defaultmap_qws_p.h ../gui/embedded/qkbd_qws_p.h ../gui/embedded/qlock_p.h ../gui/embedded/qscreenmulti_qws_p.h ../gui/embedded/qtransportauth_qws_p.h ../gui/embedded/qunixsocket_p.h ../gui/embedded/qunixsocketserver_p.h ../gui/embedded/qwindowsystem_p.h ../gui/embedded/qwscommand_qws_p.h ../gui/embedded/qwsdisplay_qws_p.h ../gui/embedded/qwslock_p.h ../gui/embedded/qwsmanager_p.h ../gui/embedded/qwssharedmemory_p.h ../gui/embedded/qwssignalhandler_p.h ../gui/widgets/qabstractbutton_p.h ../gui/widgets/qabstractscrollarea_p.h ../gui/widgets/qabstractslider_p.h ../gui/widgets/qabstractspinbox_p.h ../gui/widgets/qcalendartextnavigator_p.h ../gui/widgets/qcocoamenu_mac_p.h ../gui/widgets/qcocoatoolbardelegate_mac_p.h ../gui/widgets/qcombobox_p.h ../gui/widgets/qdatetimeedit_p.h ../gui/widgets/qdockarealayout_p.h ../gui/widgets/qdockwidget_p.h ../gui/widgets/qeffects_p.h ../gui/widgets/qframe_p.h ../gui/widgets/qlabel_p.h ../gui/widgets/qlinecontrol_p.h ../gui/widgets/qlineedit_p.h ../gui/widgets/qmainwindowlayout_p.h ../gui/widgets/qmdiarea_p.h ../gui/widgets/qmdisubwindow_p.h ../gui/widgets/qmenu_p.h ../gui/widgets/qmenu_wince_resource_p.h ../gui/widgets/qmenubar_p.h ../gui/widgets/qplaintextedit_p.h ../gui/widgets/qpushbutton_p.h ../gui/widgets/qscrollarea_p.h ../gui/widgets/qsplitter_p.h ../gui/widgets/qtabbar_p.h ../gui/widgets/qtextedit_p.h ../gui/widgets/qtoolbar_p.h ../gui/widgets/qtoolbararealayout_p.h ../gui/widgets/qtoolbarextension_p.h ../gui/widgets/qtoolbarlayout_p.h ../gui/widgets/qtoolbarseparator_p.h ../gui/widgets/qwidgetanimator_p.h ../gui/widgets/qwidgetresizehandler_p.h ../gui/inputmethod/qcoefepinputcontext_p.h ../gui/inputmethod/qinputcontext_p.h ../gui/inputmethod/qmacinputcontext_p.h ../gui/inputmethod/qwininputcontext_p.h ../gui/inputmethod/qwsinputcontext_p.h ../gui/inputmethod/qximinputcontext_p.h ../gui/graphicsview/qgraph_p.h ../gui/graphicsview/qgraphicsanchorlayout_p.h ../gui/graphicsview/qgraphicsitem_p.h ../gui/graphicsview/qgraphicslayout_p.h ../gui/graphicsview/qgraphicslayoutitem_p.h ../gui/graphicsview/qgraphicsproxywidget_p.h ../gui/graphicsview/qgraphicsscene_bsp_p.h ../gui/graphicsview/qgraphicsscene_p.h ../gui/graphicsview/qgraphicsscenebsptreeindex_p.h ../gui/graphicsview/qgraphicssceneindex_p.h ../gui/graphicsview/qgraphicsscenelinearindex_p.h ../gui/graphicsview/qgraphicstransform_p.h ../gui/graphicsview/qgraphicsview_p.h ../gui/graphicsview/qgraphicswidget_p.h ../gui/graphicsview/qgridlayoutengine_p.h ../gui/graphicsview/qsimplex_p.h ../gui/text/qabstractfontengine_p.h ../gui/text/qabstracttextdocumentlayout_p.h ../gui/text/qcssparser_p.h ../gui/text/qfont_p.h ../gui/text/qfontengine_ft_p.h ../gui/text/qfontengine_p.h ../gui/text/qfontengine_qpf_p.h ../gui/text/qfontengine_s60_p.h ../gui/text/qfontengine_win_p.h ../gui/text/qfontengine_x11_p.h ../gui/text/qfontengineglyphcache_p.h ../gui/text/qfontsubset_p.h ../gui/text/qfragmentmap_p.h ../gui/text/qtextcontrol_p.h ../gui/text/qtextcontrol_p_p.h ../gui/text/qtextcursor_p.h ../gui/text/qtextdocument_p.h ../gui/text/qtextdocumentfragment_p.h ../gui/text/qtextdocumentlayout_p.h ../gui/text/qtextengine_p.h ../gui/text/qtextformat_p.h ../gui/text/qtexthtmlparser_p.h ../gui/text/qtextimagehandler_p.h ../gui/text/qtextobject_p.h ../gui/text/qtextodfwriter_p.h ../gui/text/qtexttable_p.h ../gui/text/qzipreader_p.h ../gui/text/qzipwriter_p.h ../gui/dialogs/qabstractpagesetupdialog_p.h ../gui/dialogs/qabstractprintdialog_p.h ../gui/dialogs/qcolordialog_p.h ../gui/dialogs/qdialog_p.h ../gui/dialogs/qfiledialog_p.h ../gui/dialogs/qfileinfogatherer_p.h ../gui/dialogs/qfilesystemmodel_p.h ../gui/dialogs/qfontdialog_p.h ../gui/dialogs/qfscompleter_p.h ../gui/dialogs/qpagesetupdialog_unix_p.h ../gui/dialogs/qsidebar_p.h ../gui/dialogs/qwizard_win_p.h ../gui/accessible/qaccessible_mac_p.h ../gui/kernel/qaction_p.h ../gui/kernel/qapplication_p.h ../gui/kernel/qclipboard_p.h ../gui/kernel/qcocoaapplication_mac_p.h ../gui/kernel/qcocoaapplicationdelegate_mac_p.h ../gui/kernel/qcocoamenuloader_mac_p.h ../gui/kernel/qcocoapanel_mac_p.h ../gui/kernel/qcocoasharedwindowmethods_mac_p.h ../gui/kernel/qcocoaview_mac_p.h ../gui/kernel/qcocoawindow_mac_p.h ../gui/kernel/qcocoawindowcustomthemeframe_mac_p.h ../gui/kernel/qcocoawindowdelegate_mac_p.h ../gui/kernel/qcursor_p.h ../gui/kernel/qdesktopwidget_mac_p.h ../gui/kernel/qdnd_p.h ../gui/kernel/qevent_p.h ../gui/kernel/qeventdispatcher_glib_qws_p.h ../gui/kernel/qeventdispatcher_mac_p.h ../gui/kernel/qeventdispatcher_qws_p.h ../gui/kernel/qeventdispatcher_s60_p.h ../gui/kernel/qeventdispatcher_x11_p.h ../gui/kernel/qgesture_p.h ../gui/kernel/qgesturemanager_p.h ../gui/kernel/qguieventdispatcher_glib_p.h ../gui/kernel/qguiplatformplugin_p.h ../gui/kernel/qkde_p.h ../gui/kernel/qkeymapper_p.h ../gui/kernel/qkeysequence_p.h ../gui/kernel/qlayout_p.h ../gui/kernel/qlayoutengine_p.h ../gui/kernel/qmacgesturerecognizer_mac_p.h ../gui/kernel/qmultitouch_mac_p.h ../gui/kernel/qnsframeview_mac_p.h ../gui/kernel/qnsthemeframe_mac_p.h ../gui/kernel/qnstitledframe_mac_p.h ../gui/kernel/qshortcutmap_p.h ../gui/kernel/qsoftkeymanager_common_p.h ../gui/kernel/qsoftkeymanager_p.h ../gui/kernel/qsoftkeymanager_s60_p.h ../gui/kernel/qsound_p.h ../gui/kernel/qstandardgestures_p.h ../gui/kernel/qt_cocoa_helpers_mac_p.h ../gui/kernel/qt_gui_pch.h ../gui/kernel/qt_mac_p.h ../gui/kernel/qt_s60_p.h ../gui/kernel/qt_x11_p.h ../gui/kernel/qwidget_p.h ../gui/kernel/qwidgetaction_p.h ../gui/kernel/qwinnativepangesturerecognizer_win_p.h ../gui/itemviews/qabstractitemview_p.h ../gui/itemviews/qabstractproxymodel_p.h ../gui/itemviews/qbsptree_p.h ../gui/itemviews/qcolumnview_p.h ../gui/itemviews/qcolumnviewgrip_p.h ../gui/itemviews/qheaderview_p.h ../gui/itemviews/qitemeditorfactory_p.h ../gui/itemviews/qitemselectionmodel_p.h ../gui/itemviews/qlistview_p.h ../gui/itemviews/qlistwidget_p.h ../gui/itemviews/qproxymodel_p.h ../gui/itemviews/qstandarditemmodel_p.h ../gui/itemviews/qtableview_p.h ../gui/itemviews/qtablewidget_p.h ../gui/itemviews/qtreeview_p.h ../gui/itemviews/qtreewidget_p.h ../gui/itemviews/qtreewidgetitemiterator_p.h ../gui/itemviews/qwidgetitemdata_p.h ../gui/painting/qbackingstore_p.h ../gui/painting/qbezier_p.h ../gui/painting/qcolor_p.h ../gui/painting/qcssutil_p.h ../gui/painting/qcups_p.h ../gui/painting/qdatabuffer_p.h ../gui/painting/qdrawhelper_armv6_p.h ../gui/painting/qdrawhelper_mmx_p.h ../gui/painting/qdrawhelper_neon_p.h ../gui/painting/qdrawhelper_p.h ../gui/painting/qdrawhelper_sse_p.h ../gui/painting/qdrawhelper_x86_p.h ../gui/painting/qemulationpaintengine_p.h ../gui/painting/qfixed_p.h ../gui/painting/qgraphicssystem_mac_p.h ../gui/painting/qgraphicssystem_p.h ../gui/painting/qgraphicssystem_qws_p.h ../gui/painting/qgraphicssystem_raster_p.h ../gui/painting/qgraphicssystemfactory_p.h ../gui/painting/qgraphicssystemplugin_p.h ../gui/painting/qgrayraster_p.h ../gui/painting/qimagescale_p.h ../gui/painting/qmath_p.h ../gui/painting/qmemrotate_p.h ../gui/painting/qoutlinemapper_p.h ../gui/painting/qpaintbuffer_p.h ../gui/painting/qpaintengine_alpha_p.h ../gui/painting/qpaintengine_mac_p.h ../gui/painting/qpaintengine_p.h ../gui/painting/qpaintengine_preview_p.h ../gui/painting/qpaintengine_raster_p.h ../gui/painting/qpaintengine_s60_p.h ../gui/painting/qpaintengine_x11_p.h ../gui/painting/qpaintengineex_p.h ../gui/painting/qpainter_p.h ../gui/painting/qpainterpath_p.h ../gui/painting/qpathclipper_p.h ../gui/painting/qpdf_p.h ../gui/painting/qpen_p.h ../gui/painting/qpolygonclipper_p.h ../gui/painting/qprintengine_mac_p.h ../gui/painting/qprintengine_pdf_p.h ../gui/painting/qprintengine_ps_p.h ../gui/painting/qprintengine_qws_p.h ../gui/painting/qprintengine_win_p.h ../gui/painting/qprinter_p.h ../gui/painting/qprinterinfo_unix_p.h ../gui/painting/qrasterdefs_p.h ../gui/painting/qrasterizer_p.h ../gui/painting/qstroker_p.h ../gui/painting/qtessellator_p.h ../gui/painting/qtextureglyphcache_p.h ../gui/painting/qvectorpath_p.h ../gui/painting/qwindowsurface_mac_p.h ../gui/painting/qwindowsurface_p.h ../gui/painting/qwindowsurface_qws_p.h ../gui/painting/qwindowsurface_raster_p.h ../gui/painting/qwindowsurface_s60_p.h ../gui/painting/qwindowsurface_x11_p.h ../gui/styles/qcleanlooksstyle_p.h ../gui/styles/qcommonstyle_p.h ../gui/styles/qcommonstylepixmaps_p.h ../gui/styles/qgtkpainter_p.h ../gui/styles/qgtkstyle_p.h ../gui/styles/qmacstylepixmaps_mac_p.h ../gui/styles/qmotifstyle_p.h ../gui/styles/qproxystyle_p.h ../gui/styles/qs60style_p.h ../gui/styles/qstyle_p.h ../gui/styles/qstylehelper_p.h ../gui/styles/qstylesheetstyle_p.h ../gui/styles/qwindowscestyle_p.h ../gui/styles/qwindowsmobilestyle_p.h ../gui/styles/qwindowsstyle_p.h ../gui/styles/qwindowsvistastyle_p.h ../gui/styles/qwindowsxpstyle_p.h ../gui/egl/qegl_p.h ../gui/egl/qeglproperties_p.h ../gui/statemachine/qbasickeyeventtransition_p.h ../gui/statemachine/qbasicmouseeventtransition_p.h ../gui/effects/qgraphicseffect_p.h ../gui/util/qcompleter_p.h ../gui/util/qsystemtrayicon_p.h ../gui/util/qundostack_p.h 
+SYNCQT.HEADER_FILES = ../gui/widgets/qabstractbutton.h ../gui/widgets/qabstractscrollarea.h ../gui/widgets/qabstractslider.h ../gui/widgets/qabstractspinbox.h ../gui/widgets/qbuttongroup.h ../gui/widgets/qcalendarwidget.h ../gui/widgets/qcheckbox.h ../gui/widgets/qcombobox.h ../gui/widgets/qcommandlinkbutton.h ../gui/widgets/qdatetimeedit.h ../gui/widgets/qdial.h ../gui/widgets/qdialogbuttonbox.h ../gui/widgets/qdockwidget.h ../gui/widgets/qfocusframe.h ../gui/widgets/qfontcombobox.h ../gui/widgets/qframe.h ../gui/widgets/qgroupbox.h ../gui/widgets/qlabel.h ../gui/widgets/qlcdnumber.h ../gui/widgets/qlineedit.h ../gui/widgets/qmaccocoaviewcontainer_mac.h ../gui/widgets/qmacnativewidget_mac.h ../gui/widgets/qmainwindow.h ../gui/widgets/qmdiarea.h ../gui/widgets/qmdisubwindow.h ../gui/widgets/qmenu.h ../gui/widgets/qmenubar.h ../gui/widgets/qmenudata.h ../gui/widgets/qplaintextedit.h ../gui/widgets/qprintpreviewwidget.h ../gui/widgets/qprogressbar.h ../gui/widgets/qpushbutton.h ../gui/widgets/qradiobutton.h ../gui/widgets/qrubberband.h ../gui/widgets/qscrollarea.h ../gui/widgets/qscrollbar.h ../gui/widgets/qsizegrip.h ../gui/widgets/qslider.h ../gui/widgets/qspinbox.h ../gui/widgets/qsplashscreen.h ../gui/widgets/qsplitter.h ../gui/widgets/qstackedwidget.h ../gui/widgets/qstatusbar.h ../gui/widgets/qtabbar.h ../gui/widgets/qtabwidget.h ../gui/widgets/qtextbrowser.h ../gui/widgets/qtextedit.h ../gui/widgets/qtoolbar.h ../gui/widgets/qtoolbox.h ../gui/widgets/qtoolbutton.h ../gui/widgets/qvalidator.h ../gui/widgets/qworkspace.h ../gui/symbian/qsymbianevent.h ../gui/styles/qcdestyle.h ../gui/styles/qcleanlooksstyle.h ../gui/styles/qcommonstyle.h ../gui/styles/qgtkstyle.h ../gui/styles/qmacstyle_mac.h ../gui/styles/qmotifstyle.h ../gui/styles/qplastiquestyle.h ../gui/styles/qproxystyle.h ../gui/styles/qs60style.h ../gui/styles/qstyle.h ../gui/styles/qstylefactory.h ../gui/styles/qstyleoption.h ../gui/styles/qstyleplugin.h ../gui/styles/qwindowscestyle.h ../gui/styles/qwindowsmobilestyle.h ../gui/styles/qwindowsstyle.h ../gui/styles/qwindowsvistastyle.h ../gui/styles/qwindowsxpstyle.h ../gui/util/qcompleter.h ../gui/util/qdesktopservices.h ../gui/util/qsystemtrayicon.h ../gui/util/qundogroup.h ../gui/util/qundostack.h ../gui/util/qundoview.h ../gui/accessible/qaccessible.h ../gui/accessible/qaccessible2.h ../gui/accessible/qaccessiblebridge.h ../gui/accessible/qaccessibleobject.h ../gui/accessible/qaccessibleplugin.h ../gui/accessible/qaccessiblewidget.h ../gui/statemachine/qkeyeventtransition.h ../gui/statemachine/qmouseeventtransition.h ../gui/itemviews/qabstractitemdelegate.h ../gui/itemviews/qabstractitemview.h ../gui/itemviews/qabstractproxymodel.h ../gui/itemviews/qcolumnview.h ../gui/itemviews/qdatawidgetmapper.h ../gui/itemviews/qdirmodel.h ../gui/itemviews/qfileiconprovider.h ../gui/itemviews/qheaderview.h ../gui/itemviews/qitemdelegate.h ../gui/itemviews/qitemeditorfactory.h ../gui/itemviews/qitemselectionmodel.h ../gui/itemviews/qlistview.h ../gui/itemviews/qlistwidget.h ../gui/itemviews/qproxymodel.h ../gui/itemviews/qsortfilterproxymodel.h ../gui/itemviews/qstandarditemmodel.h ../gui/itemviews/qstringlistmodel.h ../gui/itemviews/qstyleditemdelegate.h ../gui/itemviews/qtableview.h ../gui/itemviews/qtablewidget.h ../gui/itemviews/qtreeview.h ../gui/itemviews/qtreewidget.h ../gui/itemviews/qtreewidgetitemiterator.h ../gui/dialogs/qabstractpagesetupdialog.h ../gui/dialogs/qabstractprintdialog.h ../gui/dialogs/qcolordialog.h ../gui/dialogs/qdialog.h ../gui/dialogs/qerrormessage.h ../gui/dialogs/qfiledialog.h ../gui/dialogs/qfilesystemmodel.h ../gui/dialogs/qfontdialog.h ../gui/dialogs/qinputdialog.h ../gui/dialogs/qmessagebox.h ../gui/dialogs/qpagesetupdialog.h ../gui/dialogs/qprintdialog.h ../gui/dialogs/qprintpreviewdialog.h ../gui/dialogs/qprogressdialog.h ../gui/dialogs/qwizard.h ../gui/painting/qbrush.h ../gui/painting/qcolor.h ../gui/painting/qcolormap.h ../gui/painting/qdrawutil.h ../gui/painting/qmatrix.h ../gui/painting/qpaintdevice.h ../gui/painting/qpaintengine.h ../gui/painting/qpainter.h ../gui/painting/qpainterpath.h ../gui/painting/qpen.h ../gui/painting/qpolygon.h ../gui/painting/qprintengine.h ../gui/painting/qprinter.h ../gui/painting/qprinterinfo.h ../gui/painting/qregion.h ../gui/painting/qrgb.h ../gui/painting/qstylepainter.h ../gui/painting/qtransform.h ../gui/painting/qwmatrix.h ../gui/kernel/qaction.h ../gui/kernel/qactiongroup.h ../gui/kernel/qapplication.h ../gui/kernel/qboxlayout.h ../gui/kernel/qclipboard.h ../gui/kernel/qcursor.h ../gui/kernel/qdesktopwidget.h ../gui/kernel/qdrag.h ../gui/kernel/qevent.h ../gui/kernel/qformlayout.h ../gui/kernel/qgesture.h ../gui/kernel/qgesturerecognizer.h ../gui/kernel/qgridlayout.h ../gui/kernel/qguifunctions_wince.h ../gui/kernel/qkeysequence.h ../gui/kernel/qlayout.h ../gui/kernel/qlayoutitem.h ../gui/kernel/qmacdefines_mac.h ../gui/kernel/qmime.h ../gui/kernel/qpalette.h ../gui/kernel/qsessionmanager.h ../gui/kernel/qshortcut.h ../gui/kernel/qsizepolicy.h ../gui/kernel/qsound.h ../gui/kernel/qstackedlayout.h ../gui/kernel/qtooltip.h ../gui/kernel/qwhatsthis.h ../gui/kernel/qwidget.h ../gui/kernel/qwidgetaction.h ../gui/kernel/qwindowdefs.h ../gui/kernel/qwindowdefs_win.h ../gui/kernel/qx11embed_x11.h ../gui/kernel/qx11info_x11.h ../gui/s60framework/qs60mainapplication.h ../gui/s60framework/qs60mainappui.h ../gui/s60framework/qs60maindocument.h ../gui/effects/qgraphicseffect.h ../gui/text/qabstractfontengine_qws.h ../gui/text/qabstracttextdocumentlayout.h ../gui/text/qfont.h ../gui/text/qfontdatabase.h ../gui/text/qfontinfo.h ../gui/text/qfontmetrics.h ../gui/text/qsyntaxhighlighter.h ../gui/text/qtextcursor.h ../gui/text/qtextdocument.h ../gui/text/qtextdocumentfragment.h ../gui/text/qtextdocumentwriter.h ../gui/text/qtextformat.h ../gui/text/qtextlayout.h ../gui/text/qtextlist.h ../gui/text/qtextobject.h ../gui/text/qtextoption.h ../gui/text/qtexttable.h ../gui/embedded/qcopchannel_qws.h ../gui/embedded/qdecoration_qws.h ../gui/embedded/qdecorationdefault_qws.h ../gui/embedded/qdecorationfactory_qws.h ../gui/embedded/qdecorationplugin_qws.h ../gui/embedded/qdecorationstyled_qws.h ../gui/embedded/qdecorationwindows_qws.h ../gui/embedded/qdirectpainter_qws.h ../gui/embedded/qkbd_qws.h ../gui/embedded/qkbddriverfactory_qws.h ../gui/embedded/qkbddriverplugin_qws.h ../gui/embedded/qkbdlinuxinput_qws.h ../gui/embedded/qkbdqnx_qws.h ../gui/embedded/qkbdtty_qws.h ../gui/embedded/qkbdum_qws.h ../gui/embedded/qkbdvfb_qws.h ../gui/embedded/qmouse_qws.h ../gui/embedded/qmousedriverfactory_qws.h ../gui/embedded/qmousedriverplugin_qws.h ../gui/embedded/qmouselinuxinput_qws.h ../gui/embedded/qmouselinuxtp_qws.h ../gui/embedded/qmousepc_qws.h ../gui/embedded/qmouseqnx_qws.h ../gui/embedded/qmousetslib_qws.h ../gui/embedded/qmousevfb_qws.h ../gui/embedded/qscreen_qws.h ../gui/embedded/qscreendriverfactory_qws.h ../gui/embedded/qscreendriverplugin_qws.h ../gui/embedded/qscreenlinuxfb_qws.h ../gui/embedded/qscreenproxy_qws.h ../gui/embedded/qscreenqnx_qws.h ../gui/embedded/qscreentransformed_qws.h ../gui/embedded/qscreenvfb_qws.h ../gui/embedded/qsoundqss_qws.h ../gui/embedded/qtransportauth_qws.h ../gui/embedded/qtransportauthdefs_qws.h ../gui/embedded/qvfbhdr.h ../gui/embedded/qwindowsystem_qws.h ../gui/embedded/qwscursor_qws.h ../gui/embedded/qwsdisplay_qws.h ../gui/embedded/qwsembedwidget.h ../gui/embedded/qwsevent_qws.h ../gui/embedded/qwsmanager_qws.h ../gui/embedded/qwsproperty_qws.h ../gui/embedded/qwsprotocolitem_qws.h ../gui/embedded/qwssocket_qws.h ../gui/embedded/qwsutils_qws.h ../gui/image/qbitmap.h ../gui/image/qicon.h ../gui/image/qiconengine.h ../gui/image/qiconengineplugin.h ../gui/image/qimage.h ../gui/image/qimageiohandler.h ../gui/image/qimagereader.h ../gui/image/qimagewriter.h ../gui/image/qmovie.h ../gui/image/qpicture.h ../gui/image/qpictureformatplugin.h ../gui/image/qpixmap.h ../gui/image/qpixmapcache.h ../gui/graphicsview/qgraphicsanchorlayout.h ../gui/graphicsview/qgraphicsgridlayout.h ../gui/graphicsview/qgraphicsitem.h ../gui/graphicsview/qgraphicsitemanimation.h ../gui/graphicsview/qgraphicslayout.h ../gui/graphicsview/qgraphicslayoutitem.h ../gui/graphicsview/qgraphicslinearlayout.h ../gui/graphicsview/qgraphicsproxywidget.h ../gui/graphicsview/qgraphicsscene.h ../gui/graphicsview/qgraphicssceneevent.h ../gui/graphicsview/qgraphicstransform.h ../gui/graphicsview/qgraphicsview.h ../gui/graphicsview/qgraphicswidget.h ../gui/math3d/qgenericmatrix.h ../gui/math3d/qmatrix4x4.h ../gui/math3d/qquaternion.h ../gui/math3d/qvector2d.h ../gui/math3d/qvector3d.h ../gui/math3d/qvector4d.h ../gui/inputmethod/qinputcontext.h ../gui/inputmethod/qinputcontextfactory.h ../gui/inputmethod/qinputcontextplugin.h ../../include/QtGui/QtGui 
+SYNCQT.HEADER_CLASSES = ../../include/QtGui/QAbstractButton ../../include/QtGui/QAbstractScrollArea ../../include/QtGui/QAbstractSlider ../../include/QtGui/QAbstractSpinBox ../../include/QtGui/QButtonGroup ../../include/QtGui/QCalendarWidget ../../include/QtGui/QCheckBox ../../include/QtGui/QComboBox ../../include/QtGui/QCommandLinkButton ../../include/QtGui/QDateTimeEdit ../../include/QtGui/QTimeEdit ../../include/QtGui/QDateEdit ../../include/QtGui/QDial ../../include/QtGui/QDialogButtonBox ../../include/QtGui/QDockWidget ../../include/QtGui/QFocusFrame ../../include/QtGui/QFontComboBox ../../include/QtGui/QFrame ../../include/QtGui/QGroupBox ../../include/QtGui/QLabel ../../include/QtGui/QLCDNumber ../../include/QtGui/QLineEdit ../../include/QtGui/QMacCocoaViewContainer ../../include/QtGui/QMacNativeWidget ../../include/QtGui/QMainWindow ../../include/QtGui/QMdiArea ../../include/QtGui/QMdiSubWindow ../../include/QtGui/QMenu ../../include/QtGui/QMenuBar ../../include/QtGui/QMenuItem ../../include/QtGui/QPlainTextEdit ../../include/QtGui/QPlainTextDocumentLayout ../../include/QtGui/QPrintPreviewWidget ../../include/QtGui/QProgressBar ../../include/QtGui/QPushButton ../../include/QtGui/QRadioButton ../../include/QtGui/QRubberBand ../../include/QtGui/QScrollArea ../../include/QtGui/QScrollBar ../../include/QtGui/QSizeGrip ../../include/QtGui/QSlider ../../include/QtGui/QSpinBox ../../include/QtGui/QDoubleSpinBox ../../include/QtGui/QSplashScreen ../../include/QtGui/QSplitter ../../include/QtGui/QSplitterHandle ../../include/QtGui/QStackedWidget ../../include/QtGui/QStatusBar ../../include/QtGui/QTabBar ../../include/QtGui/QTabWidget ../../include/QtGui/QTextBrowser ../../include/QtGui/QTextEdit ../../include/QtGui/QToolBar ../../include/QtGui/QToolBox ../../include/QtGui/QToolButton ../../include/QtGui/QValidator ../../include/QtGui/QIntValidator ../../include/QtGui/QDoubleValidator ../../include/QtGui/QRegExpValidator ../../include/QtGui/QWorkspace ../../include/QtGui/QSymbianEvent ../../include/QtGui/QCDEStyle ../../include/QtGui/QCleanlooksStyle ../../include/QtGui/QCommonStyle ../../include/QtGui/QGtkStyle ../../include/QtGui/QMacStyle ../../include/QtGui/QMotifStyle ../../include/QtGui/QPlastiqueStyle ../../include/QtGui/QProxyStyle ../../include/QtGui/QS60Style ../../include/QtGui/QStyle ../../include/QtGui/QStyleFactory ../../include/QtGui/QStyleOption ../../include/QtGui/QStyleOptionFocusRect ../../include/QtGui/QStyleOptionFrame ../../include/QtGui/QStyleOptionFrameV2 ../../include/QtGui/QStyleOptionFrameV3 ../../include/QtGui/QStyleOptionTabWidgetFrame ../../include/QtGui/QStyleOptionTabWidgetFrameV2 ../../include/QtGui/QStyleOptionTabBarBase ../../include/QtGui/QStyleOptionTabBarBaseV2 ../../include/QtGui/QStyleOptionHeader ../../include/QtGui/QStyleOptionButton ../../include/QtGui/QStyleOptionTab ../../include/QtGui/QStyleOptionTabV2 ../../include/QtGui/QStyleOptionTabV3 ../../include/QtGui/QStyleOptionToolBar ../../include/QtGui/QStyleOptionProgressBar ../../include/QtGui/QStyleOptionProgressBarV2 ../../include/QtGui/QStyleOptionMenuItem ../../include/QtGui/QStyleOptionQ3ListViewItem ../../include/QtGui/QStyleOptionQ3DockWindow ../../include/QtGui/QStyleOptionDockWidget ../../include/QtGui/QStyleOptionDockWidgetV2 ../../include/QtGui/QStyleOptionViewItem ../../include/QtGui/QStyleOptionViewItemV2 ../../include/QtGui/QStyleOptionViewItemV3 ../../include/QtGui/QStyleOptionViewItemV4 ../../include/QtGui/QStyleOptionToolBox ../../include/QtGui/QStyleOptionToolBoxV2 ../../include/QtGui/QStyleOptionRubberBand ../../include/QtGui/QStyleOptionComplex ../../include/QtGui/QStyleOptionSlider ../../include/QtGui/QStyleOptionSpinBox ../../include/QtGui/QStyleOptionQ3ListView ../../include/QtGui/QStyleOptionToolButton ../../include/QtGui/QStyleOptionComboBox ../../include/QtGui/QStyleOptionTitleBar ../../include/QtGui/QStyleOptionGroupBox ../../include/QtGui/QStyleOptionSizeGrip ../../include/QtGui/QStyleOptionGraphicsItem ../../include/QtGui/QStyleHintReturn ../../include/QtGui/QStyleHintReturnMask ../../include/QtGui/QStyleHintReturnVariant ../../include/QtGui/QStyleFactoryInterface ../../include/QtGui/QStylePlugin ../../include/QtGui/QWindowsCEStyle ../../include/QtGui/QWindowsMobileStyle ../../include/QtGui/QWindowsStyle ../../include/QtGui/QWindowsVistaStyle ../../include/QtGui/QWindowsXPStyle ../../include/QtGui/QCompleter ../../include/QtGui/QDesktopServices ../../include/QtGui/QSystemTrayIcon ../../include/QtGui/QUndoGroup ../../include/QtGui/QUndoCommand ../../include/QtGui/QUndoStack ../../include/QtGui/QUndoView ../../include/QtGui/QAccessible ../../include/QtGui/QAccessibleInterface ../../include/QtGui/QAccessibleInterfaceEx ../../include/QtGui/QAccessibleEvent ../../include/QtGui/QAccessible2Interface ../../include/QtGui/QAccessibleTextInterface ../../include/QtGui/QAccessibleEditableTextInterface ../../include/QtGui/QAccessibleSimpleEditableTextInterface ../../include/QtGui/QAccessibleValueInterface ../../include/QtGui/QAccessibleTableInterface ../../include/QtGui/QAccessibleActionInterface ../../include/QtGui/QAccessibleImageInterface ../../include/QtGui/QAccessibleBridge ../../include/QtGui/QAccessibleBridgeFactoryInterface ../../include/QtGui/QAccessibleBridgePlugin ../../include/QtGui/QAccessibleObject ../../include/QtGui/QAccessibleObjectEx ../../include/QtGui/QAccessibleApplication ../../include/QtGui/QAccessibleFactoryInterface ../../include/QtGui/QAccessiblePlugin ../../include/QtGui/QAccessibleWidget ../../include/QtGui/QAccessibleWidgetEx ../../include/QtGui/QKeyEventTransition ../../include/QtGui/QMouseEventTransition ../../include/QtGui/QAbstractItemDelegate ../../include/QtGui/QAbstractItemView ../../include/QtGui/QAbstractProxyModel ../../include/QtGui/QColumnView ../../include/QtGui/QDataWidgetMapper ../../include/QtGui/QDirModel ../../include/QtGui/QFileIconProvider ../../include/QtGui/QHeaderView ../../include/QtGui/QItemDelegate ../../include/QtGui/QItemEditorCreatorBase ../../include/QtGui/QItemEditorCreator ../../include/QtGui/QStandardItemEditorCreator ../../include/QtGui/QItemEditorFactory ../../include/QtGui/QItemSelectionRange ../../include/QtGui/QItemSelectionModel ../../include/QtGui/QItemSelection ../../include/QtGui/QListView ../../include/QtGui/QListWidgetItem ../../include/QtGui/QListWidget ../../include/QtGui/QProxyModel ../../include/QtGui/QSortFilterProxyModel ../../include/QtGui/QStandardItem ../../include/QtGui/QStandardItemModel ../../include/QtGui/QStringListModel ../../include/QtGui/QStyledItemDelegate ../../include/QtGui/QTableView ../../include/QtGui/QTableWidgetSelectionRange ../../include/QtGui/QTableWidgetItem ../../include/QtGui/QTableWidget ../../include/QtGui/QTreeView ../../include/QtGui/QTreeWidgetItem ../../include/QtGui/QTreeWidget ../../include/QtGui/QTreeWidgetItemIterator ../../include/QtGui/QAbstractPageSetupDialog ../../include/QtGui/QAbstractPrintDialog ../../include/QtGui/QColorDialog ../../include/QtGui/QDialog ../../include/QtGui/QErrorMessage ../../include/QtGui/QFileDialog ../../include/QtGui/QFileSystemModel ../../include/QtGui/QFontDialog ../../include/QtGui/QInputDialog ../../include/QtGui/QMessageBox ../../include/QtGui/QPageSetupDialog ../../include/QtGui/QUnixPrintWidget ../../include/QtGui/QPrintDialog ../../include/QtGui/QPrintPreviewDialog ../../include/QtGui/QProgressDialog ../../include/QtGui/QWizard ../../include/QtGui/QWizardPage ../../include/QtGui/QBrush ../../include/QtGui/QBrushData ../../include/QtGui/QGradientStop ../../include/QtGui/QGradientStops ../../include/QtGui/QGradient ../../include/QtGui/QLinearGradient ../../include/QtGui/QRadialGradient ../../include/QtGui/QConicalGradient ../../include/QtGui/QColor ../../include/QtGui/QColormap ../../include/QtGui/QTileRules ../../include/QtGui/QMatrix ../../include/QtGui/QPaintDevice ../../include/QtGui/QTextItem ../../include/QtGui/QPaintEngine ../../include/QtGui/QPaintEngineState ../../include/QtGui/QPainter ../../include/QtGui/QPainterPath ../../include/QtGui/QPainterPathPrivate ../../include/QtGui/QPainterPathStroker ../../include/QtGui/QPen ../../include/QtGui/QPolygon ../../include/QtGui/QPolygonF ../../include/QtGui/QPrintEngine ../../include/QtGui/QPrinter ../../include/QtGui/QPrinterInfo ../../include/QtGui/QRegion ../../include/QtGui/QRgb ../../include/QtGui/QStylePainter ../../include/QtGui/QTransform ../../include/QtGui/QWMatrix ../../include/QtGui/QAction ../../include/QtGui/QActionGroup ../../include/QtGui/QApplication ../../include/QtGui/QBoxLayout ../../include/QtGui/QHBoxLayout ../../include/QtGui/QVBoxLayout ../../include/QtGui/QClipboard ../../include/QtGui/QCursor ../../include/QtGui/QCursorShape ../../include/QtGui/QDesktopWidget ../../include/QtGui/QDrag ../../include/QtGui/QtEvents ../../include/QtGui/QInputEvent ../../include/QtGui/QMouseEvent ../../include/QtGui/QHoverEvent ../../include/QtGui/QWheelEvent ../../include/QtGui/QTabletEvent ../../include/QtGui/QKeyEvent ../../include/QtGui/QFocusEvent ../../include/QtGui/QPaintEvent ../../include/QtGui/QUpdateLaterEvent ../../include/QtGui/QMoveEvent ../../include/QtGui/QResizeEvent ../../include/QtGui/QCloseEvent ../../include/QtGui/QIconDragEvent ../../include/QtGui/QShowEvent ../../include/QtGui/QHideEvent ../../include/QtGui/QContextMenuEvent ../../include/QtGui/QInputMethodEvent ../../include/QtGui/QDropEvent ../../include/QtGui/QDragMoveEvent ../../include/QtGui/QDragEnterEvent ../../include/QtGui/QDragResponseEvent ../../include/QtGui/QDragLeaveEvent ../../include/QtGui/QHelpEvent ../../include/QtGui/QStatusTipEvent ../../include/QtGui/QWhatsThisClickedEvent ../../include/QtGui/QActionEvent ../../include/QtGui/QFileOpenEvent ../../include/QtGui/QToolBarChangeEvent ../../include/QtGui/QShortcutEvent ../../include/QtGui/QClipboardEvent ../../include/QtGui/QWindowStateChangeEvent ../../include/QtGui/QMenubarUpdatedEvent ../../include/QtGui/QTouchEvent ../../include/QtGui/QGestureEvent ../../include/QtGui/QFormLayout ../../include/QtGui/QGesture ../../include/QtGui/QPanGesture ../../include/QtGui/QPinchGesture ../../include/QtGui/QSwipeGesture ../../include/QtGui/QTapGesture ../../include/QtGui/QTapAndHoldGesture ../../include/QtGui/QGestureRecognizer ../../include/QtGui/QGridLayout ../../include/QtGui/QKeySequence ../../include/QtGui/QLayoutIterator ../../include/QtGui/QLayout ../../include/QtGui/QLayoutItem ../../include/QtGui/QSpacerItem ../../include/QtGui/QWidgetItem ../../include/QtGui/QWidgetItemV2 ../../include/QtGui/QMimeSource ../../include/QtGui/QWindowsMime ../../include/QtGui/QMacMime ../../include/QtGui/QMacPasteboardMime ../../include/QtGui/QPalette ../../include/QtGui/QColorGroup ../../include/QtGui/QSessionManager ../../include/QtGui/QShortcut ../../include/QtGui/QSizePolicy ../../include/QtGui/QSound ../../include/QtGui/QStackedLayout ../../include/QtGui/QToolTip ../../include/QtGui/QWhatsThis ../../include/QtGui/QWidgetData ../../include/QtGui/QWidget ../../include/QtGui/QWidgetAction ../../include/QtGui/QWidgetList ../../include/QtGui/QWidgetMapper ../../include/QtGui/QWidgetSet ../../include/QtGui/QX11EmbedWidget ../../include/QtGui/QX11EmbedContainer ../../include/QtGui/QX11Info ../../include/QtGui/QS60MainApplication ../../include/QtGui/QS60MainAppUi ../../include/QtGui/QS60MainDocument ../../include/QtGui/QGraphicsEffect ../../include/QtGui/QGraphicsColorizeEffect ../../include/QtGui/QGraphicsBlurEffect ../../include/QtGui/QGraphicsDropShadowEffect ../../include/QtGui/QGraphicsOpacityEffect ../../include/QtGui/QFontEngineInfo ../../include/QtGui/QFontEngineFactoryInterface ../../include/QtGui/QFontEnginePlugin ../../include/QtGui/QAbstractFontEngine ../../include/QtGui/QAbstractTextDocumentLayout ../../include/QtGui/QTextObjectInterface ../../include/QtGui/QFont ../../include/QtGui/QFontDatabase ../../include/QtGui/QFontInfo ../../include/QtGui/QFontMetrics ../../include/QtGui/QFontMetricsF ../../include/QtGui/QSyntaxHighlighter ../../include/QtGui/QTextCursor ../../include/QtGui/QAbstractUndoItem ../../include/QtGui/QTextDocument ../../include/QtGui/QTextDocumentFragment ../../include/QtGui/QTextDocumentWriter ../../include/QtGui/QTextLength ../../include/QtGui/QTextFormat ../../include/QtGui/QTextCharFormat ../../include/QtGui/QTextBlockFormat ../../include/QtGui/QTextListFormat ../../include/QtGui/QTextImageFormat ../../include/QtGui/QTextFrameFormat ../../include/QtGui/QTextTableFormat ../../include/QtGui/QTextTableCellFormat ../../include/QtGui/QTextInlineObject ../../include/QtGui/QTextLayout ../../include/QtGui/QTextLine ../../include/QtGui/QTextList ../../include/QtGui/QTextObject ../../include/QtGui/QTextBlockGroup ../../include/QtGui/QTextFrameLayoutData ../../include/QtGui/QTextFrame ../../include/QtGui/QTextBlockUserData ../../include/QtGui/QTextBlock ../../include/QtGui/QTextFragment ../../include/QtGui/QTextOption ../../include/QtGui/QTextTableCell ../../include/QtGui/QTextTable ../../include/QtGui/QCopChannel ../../include/QtGui/QDecorationAction ../../include/QtGui/QDecoration ../../include/QtGui/QDecorationDefault ../../include/QtGui/QDecorationFactory ../../include/QtGui/QDecorationFactoryInterface ../../include/QtGui/QDecorationPlugin ../../include/QtGui/QDecorationStyled ../../include/QtGui/QDecorationWindows ../../include/QtGui/QDirectPainter ../../include/QtGui/QWSKeyboardHandler ../../include/QtGui/QKbdDriverFactory ../../include/QtGui/QWSKeyboardHandlerFactoryInterface ../../include/QtGui/QKbdDriverPlugin ../../include/QtGui/QWSLinuxInputKeyboardHandler ../../include/QtGui/QWSQnxKeyboardHandler ../../include/QtGui/QWSTtyKeyboardHandler ../../include/QtGui/QWSUmKeyboardHandler ../../include/QtGui/QVFbKeyboardHandler ../../include/QtGui/QWSPointerCalibrationData ../../include/QtGui/QWSMouseHandler ../../include/QtGui/QWSCalibratedMouseHandler ../../include/QtGui/QMouseDriverFactory ../../include/QtGui/QWSMouseHandlerFactoryInterface ../../include/QtGui/QMouseDriverPlugin ../../include/QtGui/QWSLinuxInputMouseHandler ../../include/QtGui/QWSLinuxTPMouseHandler ../../include/QtGui/QWSPcMouseHandler ../../include/QtGui/QQnxMouseHandler ../../include/QtGui/QWSTslibMouseHandler ../../include/QtGui/QVFbMouseHandler ../../include/QtGui/QScreenCursor ../../include/QtGui/QPoolEntry ../../include/QtGui/QScreen ../../include/QtGui/QScreenDriverFactory ../../include/QtGui/QScreenDriverFactoryInterface ../../include/QtGui/QScreenDriverPlugin ../../include/QtGui/QLinuxFb_Shared ../../include/QtGui/QLinuxFbScreen ../../include/QtGui/QProxyScreenCursor ../../include/QtGui/QProxyScreen ../../include/QtGui/QQnxScreen ../../include/QtGui/QTransformedScreen ../../include/QtGui/QVFbScreen ../../include/QtGui/QWSSoundServer ../../include/QtGui/QWSSoundClient ../../include/QtGui/QWSSoundServerSocket ../../include/QtGui/QTransportAuth ../../include/QtGui/QAuthDevice ../../include/QtGui/QVFbHeader ../../include/QtGui/QVFbKeyData ../../include/QtGui/QWSInternalWindowInfo ../../include/QtGui/QWSScreenSaver ../../include/QtGui/QWSWindow ../../include/QtGui/QWSServer ../../include/QtGui/QWSInputMethod ../../include/QtGui/QWSCursorMap ../../include/QtGui/QWSClient ../../include/QtGui/QWSCursor ../../include/QtGui/QWSWindowInfo ../../include/QtGui/QWSDisplay ../../include/QtGui/QWSEmbedWidget ../../include/QtGui/QWSEvent ../../include/QtGui/QWSManager ../../include/QtGui/QWSPropertyManager ../../include/QtGui/QWSProtocolItem ../../include/QtGui/QWSSocket ../../include/QtGui/QWSServerSocket ../../include/QtGui/QBitmap ../../include/QtGui/QIcon ../../include/QtGui/QIconSet ../../include/QtGui/QIconEngine ../../include/QtGui/QIconEngineV2 ../../include/QtGui/QIconEngineFactoryInterface ../../include/QtGui/QIconEnginePlugin ../../include/QtGui/QIconEngineFactoryInterfaceV2 ../../include/QtGui/QIconEnginePluginV2 ../../include/QtGui/QImageTextKeyLang ../../include/QtGui/QImage ../../include/QtGui/QImageIOHandler ../../include/QtGui/QImageIOHandlerFactoryInterface ../../include/QtGui/QImageIOPlugin ../../include/QtGui/QImageReader ../../include/QtGui/QImageWriter ../../include/QtGui/QMovie ../../include/QtGui/QPicture ../../include/QtGui/QPictureIO ../../include/QtGui/QPictureFormatInterface ../../include/QtGui/QPictureFormatPlugin ../../include/QtGui/QPixmap ../../include/QtGui/QPixmapCache ../../include/QtGui/QGraphicsAnchor ../../include/QtGui/QGraphicsAnchorLayout ../../include/QtGui/QGraphicsGridLayout ../../include/QtGui/QGraphicsItem ../../include/QtGui/QGraphicsObject ../../include/QtGui/QAbstractGraphicsShapeItem ../../include/QtGui/QGraphicsPathItem ../../include/QtGui/QGraphicsRectItem ../../include/QtGui/QGraphicsEllipseItem ../../include/QtGui/QGraphicsPolygonItem ../../include/QtGui/QGraphicsLineItem ../../include/QtGui/QGraphicsPixmapItem ../../include/QtGui/QGraphicsTextItem ../../include/QtGui/QGraphicsSimpleTextItem ../../include/QtGui/QGraphicsItemGroup ../../include/QtGui/QGraphicsItemAnimation ../../include/QtGui/QGraphicsLayout ../../include/QtGui/QGraphicsLayoutItem ../../include/QtGui/QGraphicsLinearLayout ../../include/QtGui/QGraphicsProxyWidget ../../include/QtGui/QGraphicsScene ../../include/QtGui/QGraphicsSceneEvent ../../include/QtGui/QGraphicsSceneMouseEvent ../../include/QtGui/QGraphicsSceneWheelEvent ../../include/QtGui/QGraphicsSceneContextMenuEvent ../../include/QtGui/QGraphicsSceneHoverEvent ../../include/QtGui/QGraphicsSceneHelpEvent ../../include/QtGui/QGraphicsSceneDragDropEvent ../../include/QtGui/QGraphicsSceneResizeEvent ../../include/QtGui/QGraphicsSceneMoveEvent ../../include/QtGui/QGraphicsTransform ../../include/QtGui/QGraphicsScale ../../include/QtGui/QGraphicsRotation ../../include/QtGui/QGraphicsView ../../include/QtGui/QGraphicsWidget ../../include/QtGui/QGenericMatrix ../../include/QtGui/QMatrix2x2 ../../include/QtGui/QMatrix2x3 ../../include/QtGui/QMatrix2x4 ../../include/QtGui/QMatrix3x2 ../../include/QtGui/QMatrix3x3 ../../include/QtGui/QMatrix3x4 ../../include/QtGui/QMatrix4x2 ../../include/QtGui/QMatrix4x3 ../../include/QtGui/QMatrix4x4 ../../include/QtGui/QQuaternion ../../include/QtGui/QVector2D ../../include/QtGui/QVector3D ../../include/QtGui/QVector4D ../../include/QtGui/QInputContext ../../include/QtGui/QInputContextFactory ../../include/QtGui/QInputContextFactoryInterface ../../include/QtGui/QInputContextPlugin 
+SYNCQT.PRIVATE_HEADER_FILES = ../gui/widgets/qabstractbutton_p.h ../gui/widgets/qabstractscrollarea_p.h ../gui/widgets/qabstractslider_p.h ../gui/widgets/qabstractspinbox_p.h ../gui/widgets/qcalendartextnavigator_p.h ../gui/widgets/qcocoamenu_mac_p.h ../gui/widgets/qcocoatoolbardelegate_mac_p.h ../gui/widgets/qcombobox_p.h ../gui/widgets/qdatetimeedit_p.h ../gui/widgets/qdockarealayout_p.h ../gui/widgets/qdockwidget_p.h ../gui/widgets/qeffects_p.h ../gui/widgets/qframe_p.h ../gui/widgets/qlabel_p.h ../gui/widgets/qlinecontrol_p.h ../gui/widgets/qlineedit_p.h ../gui/widgets/qmainwindowlayout_p.h ../gui/widgets/qmdiarea_p.h ../gui/widgets/qmdisubwindow_p.h ../gui/widgets/qmenu_p.h ../gui/widgets/qmenu_wince_resource_p.h ../gui/widgets/qmenubar_p.h ../gui/widgets/qplaintextedit_p.h ../gui/widgets/qpushbutton_p.h ../gui/widgets/qscrollarea_p.h ../gui/widgets/qsplitter_p.h ../gui/widgets/qtabbar_p.h ../gui/widgets/qtextedit_p.h ../gui/widgets/qtoolbar_p.h ../gui/widgets/qtoolbararealayout_p.h ../gui/widgets/qtoolbarextension_p.h ../gui/widgets/qtoolbarlayout_p.h ../gui/widgets/qtoolbarseparator_p.h ../gui/widgets/qwidgetanimator_p.h ../gui/widgets/qwidgetresizehandler_p.h ../gui/styles/qcleanlooksstyle_p.h ../gui/styles/qcommonstyle_p.h ../gui/styles/qcommonstylepixmaps_p.h ../gui/styles/qgtkpainter_p.h ../gui/styles/qgtkstyle_p.h ../gui/styles/qmacstylepixmaps_mac_p.h ../gui/styles/qmotifstyle_p.h ../gui/styles/qproxystyle_p.h ../gui/styles/qs60style_p.h ../gui/styles/qstyle_p.h ../gui/styles/qstylehelper_p.h ../gui/styles/qstylesheetstyle_p.h ../gui/styles/qwindowscestyle_p.h ../gui/styles/qwindowsmobilestyle_p.h ../gui/styles/qwindowsstyle_p.h ../gui/styles/qwindowsvistastyle_p.h ../gui/styles/qwindowsxpstyle_p.h ../gui/util/qcompleter_p.h ../gui/util/qsystemtrayicon_p.h ../gui/util/qundostack_p.h ../gui/accessible/qaccessible_mac_p.h ../gui/statemachine/qbasickeyeventtransition_p.h ../gui/statemachine/qbasicmouseeventtransition_p.h ../gui/itemviews/qabstractitemview_p.h ../gui/itemviews/qabstractproxymodel_p.h ../gui/itemviews/qbsptree_p.h ../gui/itemviews/qcolumnview_p.h ../gui/itemviews/qcolumnviewgrip_p.h ../gui/itemviews/qheaderview_p.h ../gui/itemviews/qitemeditorfactory_p.h ../gui/itemviews/qitemselectionmodel_p.h ../gui/itemviews/qlistview_p.h ../gui/itemviews/qlistwidget_p.h ../gui/itemviews/qproxymodel_p.h ../gui/itemviews/qstandarditemmodel_p.h ../gui/itemviews/qtableview_p.h ../gui/itemviews/qtablewidget_p.h ../gui/itemviews/qtreeview_p.h ../gui/itemviews/qtreewidget_p.h ../gui/itemviews/qtreewidgetitemiterator_p.h ../gui/itemviews/qwidgetitemdata_p.h ../gui/dialogs/qabstractpagesetupdialog_p.h ../gui/dialogs/qabstractprintdialog_p.h ../gui/dialogs/qcolordialog_p.h ../gui/dialogs/qdialog_p.h ../gui/dialogs/qfiledialog_p.h ../gui/dialogs/qfileinfogatherer_p.h ../gui/dialogs/qfilesystemmodel_p.h ../gui/dialogs/qfontdialog_p.h ../gui/dialogs/qfscompleter_p.h ../gui/dialogs/qpagesetupdialog_unix_p.h ../gui/dialogs/qsidebar_p.h ../gui/dialogs/qwizard_win_p.h ../gui/painting/qbackingstore_p.h ../gui/painting/qbezier_p.h ../gui/painting/qcolor_p.h ../gui/painting/qcssutil_p.h ../gui/painting/qcups_p.h ../gui/painting/qdatabuffer_p.h ../gui/painting/qdrawhelper_armv6_p.h ../gui/painting/qdrawhelper_mmx_p.h ../gui/painting/qdrawhelper_neon_p.h ../gui/painting/qdrawhelper_p.h ../gui/painting/qdrawhelper_sse_p.h ../gui/painting/qdrawhelper_x86_p.h ../gui/painting/qemulationpaintengine_p.h ../gui/painting/qfixed_p.h ../gui/painting/qgraphicssystem_mac_p.h ../gui/painting/qgraphicssystem_p.h ../gui/painting/qgraphicssystem_qws_p.h ../gui/painting/qgraphicssystem_raster_p.h ../gui/painting/qgraphicssystemfactory_p.h ../gui/painting/qgraphicssystemplugin_p.h ../gui/painting/qgrayraster_p.h ../gui/painting/qimagescale_p.h ../gui/painting/qmath_p.h ../gui/painting/qmemrotate_p.h ../gui/painting/qoutlinemapper_p.h ../gui/painting/qpaintbuffer_p.h ../gui/painting/qpaintengine_alpha_p.h ../gui/painting/qpaintengine_mac_p.h ../gui/painting/qpaintengine_p.h ../gui/painting/qpaintengine_preview_p.h ../gui/painting/qpaintengine_raster_p.h ../gui/painting/qpaintengine_s60_p.h ../gui/painting/qpaintengine_x11_p.h ../gui/painting/qpaintengineex_p.h ../gui/painting/qpainter_p.h ../gui/painting/qpainterpath_p.h ../gui/painting/qpathclipper_p.h ../gui/painting/qpdf_p.h ../gui/painting/qpen_p.h ../gui/painting/qpolygonclipper_p.h ../gui/painting/qprintengine_mac_p.h ../gui/painting/qprintengine_pdf_p.h ../gui/painting/qprintengine_ps_p.h ../gui/painting/qprintengine_qws_p.h ../gui/painting/qprintengine_win_p.h ../gui/painting/qprinter_p.h ../gui/painting/qprinterinfo_unix_p.h ../gui/painting/qrasterdefs_p.h ../gui/painting/qrasterizer_p.h ../gui/painting/qstroker_p.h ../gui/painting/qtessellator_p.h ../gui/painting/qtextureglyphcache_p.h ../gui/painting/qvectorpath_p.h ../gui/painting/qwindowsurface_mac_p.h ../gui/painting/qwindowsurface_p.h ../gui/painting/qwindowsurface_qws_p.h ../gui/painting/qwindowsurface_raster_p.h ../gui/painting/qwindowsurface_s60_p.h ../gui/painting/qwindowsurface_x11_p.h ../gui/egl/qegl_p.h ../gui/egl/qeglproperties_p.h ../gui/kernel/qaction_p.h ../gui/kernel/qapplication_p.h ../gui/kernel/qclipboard_p.h ../gui/kernel/qcocoaapplication_mac_p.h ../gui/kernel/qcocoaapplicationdelegate_mac_p.h ../gui/kernel/qcocoamenuloader_mac_p.h ../gui/kernel/qcocoapanel_mac_p.h ../gui/kernel/qcocoasharedwindowmethods_mac_p.h ../gui/kernel/qcocoaview_mac_p.h ../gui/kernel/qcocoawindow_mac_p.h ../gui/kernel/qcocoawindowcustomthemeframe_mac_p.h ../gui/kernel/qcocoawindowdelegate_mac_p.h ../gui/kernel/qcursor_p.h ../gui/kernel/qdesktopwidget_mac_p.h ../gui/kernel/qdnd_p.h ../gui/kernel/qevent_p.h ../gui/kernel/qeventdispatcher_glib_qws_p.h ../gui/kernel/qeventdispatcher_mac_p.h ../gui/kernel/qeventdispatcher_qws_p.h ../gui/kernel/qeventdispatcher_s60_p.h ../gui/kernel/qeventdispatcher_x11_p.h ../gui/kernel/qgesture_p.h ../gui/kernel/qgesturemanager_p.h ../gui/kernel/qguieventdispatcher_glib_p.h ../gui/kernel/qguiplatformplugin_p.h ../gui/kernel/qkde_p.h ../gui/kernel/qkeymapper_p.h ../gui/kernel/qkeysequence_p.h ../gui/kernel/qlayout_p.h ../gui/kernel/qlayoutengine_p.h ../gui/kernel/qmacgesturerecognizer_mac_p.h ../gui/kernel/qmultitouch_mac_p.h ../gui/kernel/qnsframeview_mac_p.h ../gui/kernel/qnsthemeframe_mac_p.h ../gui/kernel/qnstitledframe_mac_p.h ../gui/kernel/qshortcutmap_p.h ../gui/kernel/qsoftkeymanager_common_p.h ../gui/kernel/qsoftkeymanager_p.h ../gui/kernel/qsoftkeymanager_s60_p.h ../gui/kernel/qsound_p.h ../gui/kernel/qstandardgestures_p.h ../gui/kernel/qt_cocoa_helpers_mac_p.h ../gui/kernel/qt_gui_pch.h ../gui/kernel/qt_mac_p.h ../gui/kernel/qt_s60_p.h ../gui/kernel/qt_x11_p.h ../gui/kernel/qwidget_p.h ../gui/kernel/qwidgetaction_p.h ../gui/kernel/qwinnativepangesturerecognizer_win_p.h ../gui/s60framework/qs60mainapplication_p.h ../gui/effects/qgraphicseffect_p.h ../gui/text/qabstractfontengine_p.h ../gui/text/qabstracttextdocumentlayout_p.h ../gui/text/qcssparser_p.h ../gui/text/qfont_p.h ../gui/text/qfontengine_ft_p.h ../gui/text/qfontengine_p.h ../gui/text/qfontengine_qpf_p.h ../gui/text/qfontengine_s60_p.h ../gui/text/qfontengine_win_p.h ../gui/text/qfontengine_x11_p.h ../gui/text/qfontengineglyphcache_p.h ../gui/text/qfontsubset_p.h ../gui/text/qfragmentmap_p.h ../gui/text/qtextcontrol_p.h ../gui/text/qtextcontrol_p_p.h ../gui/text/qtextcursor_p.h ../gui/text/qtextdocument_p.h ../gui/text/qtextdocumentfragment_p.h ../gui/text/qtextdocumentlayout_p.h ../gui/text/qtextengine_p.h ../gui/text/qtextformat_p.h ../gui/text/qtexthtmlparser_p.h ../gui/text/qtextimagehandler_p.h ../gui/text/qtextobject_p.h ../gui/text/qtextodfwriter_p.h ../gui/text/qtexttable_p.h ../gui/text/qzipreader_p.h ../gui/text/qzipwriter_p.h ../gui/embedded/qkbd_defaultmap_qws_p.h ../gui/embedded/qkbd_qws_p.h ../gui/embedded/qlock_p.h ../gui/embedded/qscreenmulti_qws_p.h ../gui/embedded/qtransportauth_qws_p.h ../gui/embedded/qunixsocket_p.h ../gui/embedded/qunixsocketserver_p.h ../gui/embedded/qwindowsystem_p.h ../gui/embedded/qwscommand_qws_p.h ../gui/embedded/qwsdisplay_qws_p.h ../gui/embedded/qwslock_p.h ../gui/embedded/qwsmanager_p.h ../gui/embedded/qwssharedmemory_p.h ../gui/embedded/qwssignalhandler_p.h ../gui/image/qbmphandler_p.h ../gui/image/qicon_p.h ../gui/image/qiconloader_p.h ../gui/image/qimage_p.h ../gui/image/qimagepixmapcleanuphooks_p.h ../gui/image/qnativeimage_p.h ../gui/image/qpaintengine_pic_p.h ../gui/image/qpicture_p.h ../gui/image/qpixmap_mac_p.h ../gui/image/qpixmap_raster_p.h ../gui/image/qpixmap_s60_p.h ../gui/image/qpixmap_x11_p.h ../gui/image/qpixmapcache_p.h ../gui/image/qpixmapdata_p.h ../gui/image/qpixmapdatafactory_p.h ../gui/image/qpixmapfilter_p.h ../gui/image/qpnghandler_p.h ../gui/image/qppmhandler_p.h ../gui/image/qxbmhandler_p.h ../gui/image/qxpmhandler_p.h ../gui/graphicsview/qgraph_p.h ../gui/graphicsview/qgraphicsanchorlayout_p.h ../gui/graphicsview/qgraphicsitem_p.h ../gui/graphicsview/qgraphicslayout_p.h ../gui/graphicsview/qgraphicslayoutitem_p.h ../gui/graphicsview/qgraphicsproxywidget_p.h ../gui/graphicsview/qgraphicsscene_bsp_p.h ../gui/graphicsview/qgraphicsscene_p.h ../gui/graphicsview/qgraphicsscenebsptreeindex_p.h ../gui/graphicsview/qgraphicssceneindex_p.h ../gui/graphicsview/qgraphicsscenelinearindex_p.h ../gui/graphicsview/qgraphicstransform_p.h ../gui/graphicsview/qgraphicsview_p.h ../gui/graphicsview/qgraphicswidget_p.h ../gui/graphicsview/qgridlayoutengine_p.h ../gui/graphicsview/qsimplex_p.h ../gui/inputmethod/qcoefepinputcontext_p.h ../gui/inputmethod/qinputcontext_p.h ../gui/inputmethod/qmacinputcontext_p.h ../gui/inputmethod/qwininputcontext_p.h ../gui/inputmethod/qwsinputcontext_p.h ../gui/inputmethod/qximinputcontext_p.h 
Index: qt4-x11-4.6.2/include/QtMultimedia/QtMultimedia
===================================================================
--- qt4-x11-4.6.2.orig/include/QtMultimedia/QtMultimedia	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtMultimedia/QtMultimedia	2010-04-13 18:06:58.245888380 -0400
@@ -2,6 +2,10 @@
 #define QT_QTMULTIMEDIA_MODULE_H
 #include <QtCore/QtCore>
 #include <QtGui/QtGui>
+#include "qabstractvideobuffer.h"
+#include "qabstractvideosurface.h"
+#include "qvideoframe.h"
+#include "qvideosurfaceformat.h"
 #include "qaudio.h"
 #include "qaudiodeviceinfo.h"
 #include "qaudioengine.h"
@@ -9,8 +13,4 @@
 #include "qaudioformat.h"
 #include "qaudioinput.h"
 #include "qaudiooutput.h"
-#include "qabstractvideobuffer.h"
-#include "qabstractvideosurface.h"
-#include "qvideoframe.h"
-#include "qvideosurfaceformat.h"
 #endif
Index: qt4-x11-4.6.2/include/QtMultimedia/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtMultimedia/headers.pri	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtMultimedia/headers.pri	2010-04-13 18:06:58.249880088 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../multimedia/audio/qaudio.h ../multimedia/audio/qaudiodeviceinfo.h ../multimedia/audio/qaudioengine.h ../multimedia/audio/qaudioengineplugin.h ../multimedia/audio/qaudioformat.h ../multimedia/audio/qaudioinput.h ../multimedia/audio/qaudiooutput.h ../multimedia/video/qabstractvideobuffer.h ../multimedia/video/qabstractvideosurface.h ../multimedia/video/qvideoframe.h ../multimedia/video/qvideosurfaceformat.h ../../include/QtMultimedia/QtMultimedia 
-SYNCQT.HEADER_CLASSES = ../../include/QtMultimedia/QAudioDeviceInfo ../../include/QtMultimedia/QAbstractAudioDeviceInfo ../../include/QtMultimedia/QAbstractAudioOutput ../../include/QtMultimedia/QAbstractAudioInput ../../include/QtMultimedia/QAudioEngineFactoryInterface ../../include/QtMultimedia/QAudioEnginePlugin ../../include/QtMultimedia/QAudioFormat ../../include/QtMultimedia/QAudioInput ../../include/QtMultimedia/QAudioOutput ../../include/QtMultimedia/QAbstractVideoBuffer ../../include/QtMultimedia/QAbstractVideoSurface ../../include/QtMultimedia/QVideoFrame ../../include/QtMultimedia/QVideoSurfaceFormat 
-SYNCQT.PRIVATE_HEADER_FILES = ../multimedia/audio/qaudio_mac_p.h ../multimedia/audio/qaudiodevicefactory_p.h ../multimedia/audio/qaudiodeviceinfo_alsa_p.h ../multimedia/audio/qaudiodeviceinfo_mac_p.h ../multimedia/audio/qaudiodeviceinfo_win32_p.h ../multimedia/audio/qaudioinput_alsa_p.h ../multimedia/audio/qaudioinput_mac_p.h ../multimedia/audio/qaudioinput_win32_p.h ../multimedia/audio/qaudiooutput_alsa_p.h ../multimedia/audio/qaudiooutput_mac_p.h ../multimedia/audio/qaudiooutput_win32_p.h ../multimedia/video/qabstractvideobuffer_p.h ../multimedia/video/qabstractvideosurface_p.h ../multimedia/video/qimagevideobuffer_p.h ../multimedia/video/qmemoryvideobuffer_p.h 
+SYNCQT.HEADER_FILES = ../multimedia/video/qabstractvideobuffer.h ../multimedia/video/qabstractvideosurface.h ../multimedia/video/qvideoframe.h ../multimedia/video/qvideosurfaceformat.h ../multimedia/audio/qaudio.h ../multimedia/audio/qaudiodeviceinfo.h ../multimedia/audio/qaudioengine.h ../multimedia/audio/qaudioengineplugin.h ../multimedia/audio/qaudioformat.h ../multimedia/audio/qaudioinput.h ../multimedia/audio/qaudiooutput.h ../../include/QtMultimedia/QtMultimedia 
+SYNCQT.HEADER_CLASSES = ../../include/QtMultimedia/QAbstractVideoBuffer ../../include/QtMultimedia/QAbstractVideoSurface ../../include/QtMultimedia/QVideoFrame ../../include/QtMultimedia/QVideoSurfaceFormat ../../include/QtMultimedia/QAudioDeviceInfo ../../include/QtMultimedia/QAbstractAudioDeviceInfo ../../include/QtMultimedia/QAbstractAudioOutput ../../include/QtMultimedia/QAbstractAudioInput ../../include/QtMultimedia/QAudioEngineFactoryInterface ../../include/QtMultimedia/QAudioEnginePlugin ../../include/QtMultimedia/QAudioFormat ../../include/QtMultimedia/QAudioInput ../../include/QtMultimedia/QAudioOutput 
+SYNCQT.PRIVATE_HEADER_FILES = ../multimedia/video/qabstractvideobuffer_p.h ../multimedia/video/qabstractvideosurface_p.h ../multimedia/video/qimagevideobuffer_p.h ../multimedia/video/qmemoryvideobuffer_p.h ../multimedia/audio/qaudio_mac_p.h ../multimedia/audio/qaudiodevicefactory_p.h ../multimedia/audio/qaudiodeviceinfo_alsa_p.h ../multimedia/audio/qaudiodeviceinfo_mac_p.h ../multimedia/audio/qaudiodeviceinfo_win32_p.h ../multimedia/audio/qaudioinput_alsa_p.h ../multimedia/audio/qaudioinput_mac_p.h ../multimedia/audio/qaudioinput_win32_p.h ../multimedia/audio/qaudiooutput_alsa_p.h ../multimedia/audio/qaudiooutput_mac_p.h ../multimedia/audio/qaudiooutput_win32_p.h 
Index: qt4-x11-4.6.2/include/QtNetwork/QtNetwork
===================================================================
--- qt4-x11-4.6.2.orig/include/QtNetwork/QtNetwork	2010-02-11 10:55:14.000000000 -0500
+++ qt4-x11-4.6.2/include/QtNetwork/QtNetwork	2010-04-13 18:06:58.249880088 -0400
@@ -1,6 +1,19 @@
 #ifndef QT_QTNETWORK_MODULE_H
 #define QT_QTNETWORK_MODULE_H
 #include <QtCore/QtCore>
+#include "qssl.h"
+#include "qsslcertificate.h"
+#include "qsslcipher.h"
+#include "qsslconfiguration.h"
+#include "qsslerror.h"
+#include "qsslkey.h"
+#include "qsslsocket.h"
+#include "qauthenticator.h"
+#include "qhostaddress.h"
+#include "qhostinfo.h"
+#include "qnetworkinterface.h"
+#include "qnetworkproxy.h"
+#include "qurlinfo.h"
 #include "qabstractnetworkcache.h"
 #include "qftp.h"
 #include "qhttp.h"
@@ -10,23 +23,10 @@
 #include "qnetworkdiskcache.h"
 #include "qnetworkreply.h"
 #include "qnetworkrequest.h"
-#include "qauthenticator.h"
-#include "qhostaddress.h"
-#include "qhostinfo.h"
-#include "qnetworkinterface.h"
-#include "qnetworkproxy.h"
-#include "qurlinfo.h"
 #include "qabstractsocket.h"
 #include "qlocalserver.h"
 #include "qlocalsocket.h"
 #include "qtcpserver.h"
 #include "qtcpsocket.h"
 #include "qudpsocket.h"
-#include "qssl.h"
-#include "qsslcertificate.h"
-#include "qsslcipher.h"
-#include "qsslconfiguration.h"
-#include "qsslerror.h"
-#include "qsslkey.h"
-#include "qsslsocket.h"
 #endif
Index: qt4-x11-4.6.2/include/QtNetwork/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtNetwork/headers.pri	2010-02-11 10:55:14.000000000 -0500
+++ qt4-x11-4.6.2/include/QtNetwork/headers.pri	2010-04-13 18:06:58.249880088 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../network/access/qabstractnetworkcache.h ../network/access/qftp.h ../network/access/qhttp.h ../network/access/qnetworkaccessmanager.h ../network/access/qnetworkcookie.h ../network/access/qnetworkcookiejar.h ../network/access/qnetworkdiskcache.h ../network/access/qnetworkreply.h ../network/access/qnetworkrequest.h ../network/kernel/qauthenticator.h ../network/kernel/qhostaddress.h ../network/kernel/qhostinfo.h ../network/kernel/qnetworkinterface.h ../network/kernel/qnetworkproxy.h ../network/kernel/qurlinfo.h ../network/socket/qabstractsocket.h ../network/socket/qlocalserver.h ../network/socket/qlocalsocket.h ../network/socket/qtcpserver.h ../network/socket/qtcpsocket.h ../network/socket/qudpsocket.h ../network/ssl/qssl.h ../network/ssl/qsslcertificate.h ../network/ssl/qsslcipher.h ../network/ssl/qsslconfiguration.h ../network/ssl/qsslerror.h ../network/ssl/qsslkey.h ../network/ssl/qsslsocket.h ../../include/QtNetwork/QtNetwork 
-SYNCQT.HEADER_CLASSES = ../../include/QtNetwork/QNetworkCacheMetaData ../../include/QtNetwork/QAbstractNetworkCache ../../include/QtNetwork/QFtp ../../include/QtNetwork/QHttpHeader ../../include/QtNetwork/QHttpResponseHeader ../../include/QtNetwork/QHttpRequestHeader ../../include/QtNetwork/QHttp ../../include/QtNetwork/QNetworkAccessManager ../../include/QtNetwork/QNetworkCookie ../../include/QtNetwork/QNetworkCookieJar ../../include/QtNetwork/QNetworkDiskCache ../../include/QtNetwork/QNetworkReply ../../include/QtNetwork/QNetworkRequest ../../include/QtNetwork/QAuthenticator ../../include/QtNetwork/QIPv6Address ../../include/QtNetwork/Q_IPV6ADDR ../../include/QtNetwork/QHostAddress ../../include/QtNetwork/QHostInfo ../../include/QtNetwork/QNetworkAddressEntry ../../include/QtNetwork/QNetworkInterface ../../include/QtNetwork/QNetworkProxyQuery ../../include/QtNetwork/QNetworkProxy ../../include/QtNetwork/QNetworkProxyFactory ../../include/QtNetwork/QUrlInfo ../../include/QtNetwork/QAbstractSocket ../../include/QtNetwork/QLocalServer ../../include/QtNetwork/QLocalSocket ../../include/QtNetwork/QTcpServer ../../include/QtNetwork/QTcpSocket ../../include/QtNetwork/QUdpSocket ../../include/QtNetwork/QSsl ../../include/QtNetwork/QSslCertificate ../../include/QtNetwork/QSslCipher ../../include/QtNetwork/QSslConfiguration ../../include/QtNetwork/QSslError ../../include/QtNetwork/QSslKey ../../include/QtNetwork/QSslSocket 
-SYNCQT.PRIVATE_HEADER_FILES = ../network/access/qabstractnetworkcache_p.h ../network/access/qfilenetworkreply_p.h ../network/access/qhttpnetworkconnection_p.h ../network/access/qhttpnetworkconnectionchannel_p.h ../network/access/qhttpnetworkheader_p.h ../network/access/qhttpnetworkreply_p.h ../network/access/qhttpnetworkrequest_p.h ../network/access/qnetworkaccessbackend_p.h ../network/access/qnetworkaccesscache_p.h ../network/access/qnetworkaccesscachebackend_p.h ../network/access/qnetworkaccessdatabackend_p.h ../network/access/qnetworkaccessdebugpipebackend_p.h ../network/access/qnetworkaccessfilebackend_p.h ../network/access/qnetworkaccessftpbackend_p.h ../network/access/qnetworkaccesshttpbackend_p.h ../network/access/qnetworkaccessmanager_p.h ../network/access/qnetworkcookie_p.h ../network/access/qnetworkcookiejar_p.h ../network/access/qnetworkdiskcache_p.h ../network/access/qnetworkreply_p.h ../network/access/qnetworkreplyimpl_p.h ../network/access/qnetworkrequest_p.h ../network/kernel/qauthenticator_p.h ../network/kernel/qhostaddress_p.h ../network/kernel/qhostinfo_p.h ../network/kernel/qnetworkinterface_p.h ../network/kernel/qnetworkinterface_win_p.h ../network/kernel/qnetworkproxy_p.h ../network/socket/qabstractsocket_p.h ../network/socket/qabstractsocketengine_p.h ../network/socket/qhttpsocketengine_p.h ../network/socket/qlocalserver_p.h ../network/socket/qlocalsocket_p.h ../network/socket/qnativesocketengine_p.h ../network/socket/qnet_unix_p.h ../network/socket/qsocks5socketengine_p.h ../network/socket/qtcpsocket_p.h ../network/ssl/qsslcertificate_p.h ../network/ssl/qsslcipher_p.h ../network/ssl/qsslconfiguration_p.h ../network/ssl/qsslkey_p.h ../network/ssl/qsslsocket_openssl_p.h ../network/ssl/qsslsocket_openssl_symbols_p.h ../network/ssl/qsslsocket_p.h 
+SYNCQT.HEADER_FILES = ../network/ssl/qssl.h ../network/ssl/qsslcertificate.h ../network/ssl/qsslcipher.h ../network/ssl/qsslconfiguration.h ../network/ssl/qsslerror.h ../network/ssl/qsslkey.h ../network/ssl/qsslsocket.h ../network/kernel/qauthenticator.h ../network/kernel/qhostaddress.h ../network/kernel/qhostinfo.h ../network/kernel/qnetworkinterface.h ../network/kernel/qnetworkproxy.h ../network/kernel/qurlinfo.h ../network/access/qabstractnetworkcache.h ../network/access/qftp.h ../network/access/qhttp.h ../network/access/qnetworkaccessmanager.h ../network/access/qnetworkcookie.h ../network/access/qnetworkcookiejar.h ../network/access/qnetworkdiskcache.h ../network/access/qnetworkreply.h ../network/access/qnetworkrequest.h ../network/socket/qabstractsocket.h ../network/socket/qlocalserver.h ../network/socket/qlocalsocket.h ../network/socket/qtcpserver.h ../network/socket/qtcpsocket.h ../network/socket/qudpsocket.h ../../include/QtNetwork/QtNetwork 
+SYNCQT.HEADER_CLASSES = ../../include/QtNetwork/QSsl ../../include/QtNetwork/QSslCertificate ../../include/QtNetwork/QSslCipher ../../include/QtNetwork/QSslConfiguration ../../include/QtNetwork/QSslError ../../include/QtNetwork/QSslKey ../../include/QtNetwork/QSslSocket ../../include/QtNetwork/QAuthenticator ../../include/QtNetwork/QIPv6Address ../../include/QtNetwork/Q_IPV6ADDR ../../include/QtNetwork/QHostAddress ../../include/QtNetwork/QHostInfo ../../include/QtNetwork/QNetworkAddressEntry ../../include/QtNetwork/QNetworkInterface ../../include/QtNetwork/QNetworkProxyQuery ../../include/QtNetwork/QNetworkProxy ../../include/QtNetwork/QNetworkProxyFactory ../../include/QtNetwork/QUrlInfo ../../include/QtNetwork/QNetworkCacheMetaData ../../include/QtNetwork/QAbstractNetworkCache ../../include/QtNetwork/QFtp ../../include/QtNetwork/QHttpHeader ../../include/QtNetwork/QHttpResponseHeader ../../include/QtNetwork/QHttpRequestHeader ../../include/QtNetwork/QHttp ../../include/QtNetwork/QNetworkAccessManager ../../include/QtNetwork/QNetworkCookie ../../include/QtNetwork/QNetworkCookieJar ../../include/QtNetwork/QNetworkDiskCache ../../include/QtNetwork/QNetworkReply ../../include/QtNetwork/QNetworkRequest ../../include/QtNetwork/QAbstractSocket ../../include/QtNetwork/QLocalServer ../../include/QtNetwork/QLocalSocket ../../include/QtNetwork/QTcpServer ../../include/QtNetwork/QTcpSocket ../../include/QtNetwork/QUdpSocket 
+SYNCQT.PRIVATE_HEADER_FILES = ../network/ssl/qsslcertificate_p.h ../network/ssl/qsslcipher_p.h ../network/ssl/qsslconfiguration_p.h ../network/ssl/qsslkey_p.h ../network/ssl/qsslsocket_openssl_p.h ../network/ssl/qsslsocket_openssl_symbols_p.h ../network/ssl/qsslsocket_p.h ../network/kernel/qauthenticator_p.h ../network/kernel/qhostaddress_p.h ../network/kernel/qhostinfo_p.h ../network/kernel/qnetworkinterface_p.h ../network/kernel/qnetworkinterface_win_p.h ../network/kernel/qnetworkproxy_p.h ../network/access/qabstractnetworkcache_p.h ../network/access/qfilenetworkreply_p.h ../network/access/qhttpnetworkconnection_p.h ../network/access/qhttpnetworkconnectionchannel_p.h ../network/access/qhttpnetworkheader_p.h ../network/access/qhttpnetworkreply_p.h ../network/access/qhttpnetworkrequest_p.h ../network/access/qnetworkaccessbackend_p.h ../network/access/qnetworkaccesscache_p.h ../network/access/qnetworkaccesscachebackend_p.h ../network/access/qnetworkaccessdatabackend_p.h ../network/access/qnetworkaccessdebugpipebackend_p.h ../network/access/qnetworkaccessfilebackend_p.h ../network/access/qnetworkaccessftpbackend_p.h ../network/access/qnetworkaccesshttpbackend_p.h ../network/access/qnetworkaccessmanager_p.h ../network/access/qnetworkcookie_p.h ../network/access/qnetworkcookiejar_p.h ../network/access/qnetworkdiskcache_p.h ../network/access/qnetworkreply_p.h ../network/access/qnetworkreplyimpl_p.h ../network/access/qnetworkrequest_p.h ../network/socket/qabstractsocket_p.h ../network/socket/qabstractsocketengine_p.h ../network/socket/qhttpsocketengine_p.h ../network/socket/qlocalserver_p.h ../network/socket/qlocalsocket_p.h ../network/socket/qnativesocketengine_p.h ../network/socket/qnet_unix_p.h ../network/socket/qsocks5socketengine_p.h ../network/socket/qtcpsocket_p.h 
Index: qt4-x11-4.6.2/include/QtOpenGL/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtOpenGL/headers.pri	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtOpenGL/headers.pri	2010-04-13 18:06:58.249880088 -0400
@@ -1,3 +1,3 @@
 SYNCQT.HEADER_FILES = qgl.h qglcolormap.h qglframebufferobject.h qglpixelbuffer.h qglscreen_qws.h qglshaderprogram.h ../../include/QtOpenGL/QtOpenGL 
 SYNCQT.HEADER_CLASSES = ../../include/QtOpenGL/QMacGLCompatTypes ../../include/QtOpenGL/QMacCompatGLint ../../include/QtOpenGL/QMacCompatGLuint ../../include/QtOpenGL/QMacCompatGLenum ../../include/QtOpenGL/QGLFormat ../../include/QtOpenGL/QGLContext ../../include/QtOpenGL/QGLWidget ../../include/QtOpenGL/QGLColormap ../../include/QtOpenGL/QGLFramebufferObject ../../include/QtOpenGL/QGLFramebufferObjectFormat ../../include/QtOpenGL/QGLPixelBuffer ../../include/QtOpenGL/QGLScreenSurfaceFunctions ../../include/QtOpenGL/QGLScreen ../../include/QtOpenGL/QGLShader ../../include/QtOpenGL/QGLShaderProgram 
-SYNCQT.PRIVATE_HEADER_FILES = qgl_cl_p.h qgl_egl_p.h qgl_p.h qglextensions_p.h qglframebufferobject_p.h qglpaintdevice_p.h qglpixelbuffer_p.h qglpixmapfilter_p.h qglwindowsurface_qws_p.h qgraphicsshadereffect_p.h qgraphicssystem_gl_p.h qpaintengine_opengl_p.h qpixmapdata_gl_p.h qpixmapdata_x11gl_p.h qwindowsurface_gl_p.h qwindowsurface_x11gl_p.h ../opengl/gl2paintengineex/qgl2pexvertexarray_p.h ../opengl/gl2paintengineex/qglcustomshaderstage_p.h ../opengl/gl2paintengineex/qglengineshadermanager_p.h ../opengl/gl2paintengineex/qglengineshadersource_p.h ../opengl/gl2paintengineex/qglgradientcache_p.h ../opengl/gl2paintengineex/qpaintengineex_opengl2_p.h ../opengl/gl2paintengineex/qtextureglyphcache_gl_p.h ../opengl/gl2paintengineex/qtriangulatingstroker_p.h ../opengl/util/fragmentprograms_p.h 
+SYNCQT.PRIVATE_HEADER_FILES = qgl_cl_p.h qgl_egl_p.h qgl_p.h qglextensions_p.h qglframebufferobject_p.h qglpaintdevice_p.h qglpixelbuffer_p.h qglpixmapfilter_p.h qglwindowsurface_qws_p.h qgraphicsshadereffect_p.h qgraphicssystem_gl_p.h qpaintengine_opengl_p.h qpixmapdata_gl_p.h qpixmapdata_x11gl_p.h qwindowsurface_gl_p.h qwindowsurface_x11gl_p.h ../opengl/util/fragmentprograms_p.h ../opengl/gl2paintengineex/qgl2pexvertexarray_p.h ../opengl/gl2paintengineex/qglcustomshaderstage_p.h ../opengl/gl2paintengineex/qglengineshadermanager_p.h ../opengl/gl2paintengineex/qglengineshadersource_p.h ../opengl/gl2paintengineex/qglgradientcache_p.h ../opengl/gl2paintengineex/qpaintengineex_opengl2_p.h ../opengl/gl2paintengineex/qtextureglyphcache_gl_p.h ../opengl/gl2paintengineex/qtriangulatingstroker_p.h 
Index: qt4-x11-4.6.2/include/QtScript/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtScript/headers.pri	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtScript/headers.pri	2010-04-13 18:06:58.249880088 -0400
@@ -1,3 +1,3 @@
 SYNCQT.HEADER_FILES = ../script/api/qscriptable.h ../script/api/qscriptclass.h ../script/api/qscriptclasspropertyiterator.h ../script/api/qscriptcontext.h ../script/api/qscriptcontextinfo.h ../script/api/qscriptengine.h ../script/api/qscriptengineagent.h ../script/api/qscriptextensioninterface.h ../script/api/qscriptextensionplugin.h ../script/api/qscriptprogram.h ../script/api/qscriptstring.h ../script/api/qscriptvalue.h ../script/api/qscriptvalueiterator.h ../../include/QtScript/QtScript 
 SYNCQT.HEADER_CLASSES = ../../include/QtScript/QScriptable ../../include/QtScript/QScriptClass ../../include/QtScript/QScriptClassPropertyIterator ../../include/QtScript/QScriptContext ../../include/QtScript/QScriptContextInfo ../../include/QtScript/QScriptContextInfoList ../../include/QtScript/QScriptSyntaxCheckResult ../../include/QtScript/QScriptEngine ../../include/QtScript/QScriptEngineAgent ../../include/QtScript/QScriptExtensionInterface ../../include/QtScript/QScriptExtensionPlugin ../../include/QtScript/QScriptProgram ../../include/QtScript/QScriptString ../../include/QtScript/QScriptValueList ../../include/QtScript/QScriptValue ../../include/QtScript/QScriptValueIterator 
-SYNCQT.PRIVATE_HEADER_FILES = ../script/api/qscriptable_p.h ../script/api/qscriptcontext_p.h ../script/api/qscriptengine_p.h ../script/api/qscriptengineagent_p.h ../script/api/qscriptprogram_p.h ../script/api/qscriptstring_p.h ../script/api/qscriptvalue_p.h ../script/bridge/qscriptactivationobject_p.h ../script/bridge/qscriptclassobject_p.h ../script/bridge/qscriptdeclarativeclass_p.h ../script/bridge/qscriptdeclarativeobject_p.h ../script/bridge/qscriptfunction_p.h ../script/bridge/qscriptglobalobject_p.h ../script/bridge/qscriptobject_p.h ../script/bridge/qscriptqobject_p.h ../script/bridge/qscriptvariant_p.h ../script/parser/qscriptast_p.h ../script/parser/qscriptastfwd_p.h ../script/parser/qscriptastvisitor_p.h ../script/parser/qscriptgrammar_p.h ../script/parser/qscriptlexer_p.h ../script/parser/qscriptparser_p.h ../script/parser/qscriptsyntaxchecker_p.h ../script/utils/qscriptdate_p.h 
+SYNCQT.PRIVATE_HEADER_FILES = ../script/parser/qscriptast_p.h ../script/parser/qscriptastfwd_p.h ../script/parser/qscriptastvisitor_p.h ../script/parser/qscriptgrammar_p.h ../script/parser/qscriptlexer_p.h ../script/parser/qscriptparser_p.h ../script/parser/qscriptsyntaxchecker_p.h ../script/utils/qscriptdate_p.h ../script/bridge/qscriptactivationobject_p.h ../script/bridge/qscriptclassobject_p.h ../script/bridge/qscriptdeclarativeclass_p.h ../script/bridge/qscriptdeclarativeobject_p.h ../script/bridge/qscriptfunction_p.h ../script/bridge/qscriptglobalobject_p.h ../script/bridge/qscriptobject_p.h ../script/bridge/qscriptqobject_p.h ../script/bridge/qscriptvariant_p.h ../script/api/qscriptable_p.h ../script/api/qscriptcontext_p.h ../script/api/qscriptengine_p.h ../script/api/qscriptengineagent_p.h ../script/api/qscriptprogram_p.h ../script/api/qscriptstring_p.h ../script/api/qscriptvalue_p.h 
Index: qt4-x11-4.6.2/include/QtSql/QtSql
===================================================================
--- qt4-x11-4.6.2.orig/include/QtSql/QtSql	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtSql/QtSql	2010-04-13 18:06:58.253853638 -0400
@@ -1,6 +1,10 @@
 #ifndef QT_QTSQL_MODULE_H
 #define QT_QTSQL_MODULE_H
 #include <QtCore/QtCore>
+#include "qsqlquerymodel.h"
+#include "qsqlrelationaldelegate.h"
+#include "qsqlrelationaltablemodel.h"
+#include "qsqltablemodel.h"
 #include "qsql.h"
 #include "qsqldatabase.h"
 #include "qsqldriver.h"
@@ -11,8 +15,4 @@
 #include "qsqlquery.h"
 #include "qsqlrecord.h"
 #include "qsqlresult.h"
-#include "qsqlquerymodel.h"
-#include "qsqlrelationaldelegate.h"
-#include "qsqlrelationaltablemodel.h"
-#include "qsqltablemodel.h"
 #endif
Index: qt4-x11-4.6.2/include/QtSql/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtSql/headers.pri	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtSql/headers.pri	2010-04-13 18:06:58.253853638 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../sql/kernel/qsql.h ../sql/kernel/qsqldatabase.h ../sql/kernel/qsqldriver.h ../sql/kernel/qsqldriverplugin.h ../sql/kernel/qsqlerror.h ../sql/kernel/qsqlfield.h ../sql/kernel/qsqlindex.h ../sql/kernel/qsqlquery.h ../sql/kernel/qsqlrecord.h ../sql/kernel/qsqlresult.h ../sql/models/qsqlquerymodel.h ../sql/models/qsqlrelationaldelegate.h ../sql/models/qsqlrelationaltablemodel.h ../sql/models/qsqltablemodel.h ../sql/drivers/sqlite2/qsql_sqlite2.h ../sql/drivers/odbc/qsql_odbc.h ../sql/drivers/tds/qsql_tds.h ../sql/drivers/ibase/qsql_ibase.h ../sql/drivers/sqlite/qsql_sqlite.h ../sql/drivers/mysql/qsql_mysql.h ../sql/drivers/psql/qsql_psql.h ../sql/drivers/oci/qsql_oci.h ../sql/drivers/db2/qsql_db2.h ../../include/QtSql/QtSql 
-SYNCQT.HEADER_CLASSES = ../../include/QtSql/QSqlDriverCreatorBase ../../include/QtSql/QSqlDriverCreator ../../include/QtSql/QSqlDatabase ../../include/QtSql/QSqlDriver ../../include/QtSql/QSqlDriverFactoryInterface ../../include/QtSql/QSqlDriverPlugin ../../include/QtSql/QSqlError ../../include/QtSql/QSqlField ../../include/QtSql/QSqlIndex ../../include/QtSql/QSqlQuery ../../include/QtSql/QSqlRecord ../../include/QtSql/QSqlResult ../../include/QtSql/QSqlQueryModel ../../include/QtSql/QSqlRelationalDelegate ../../include/QtSql/QSqlRelation ../../include/QtSql/QSqlRelationalTableModel ../../include/QtSql/QSqlTableModel ../../include/QtSql/QSQLite2Result ../../include/QtSql/QSQLite2Driver ../../include/QtSql/QODBCResult ../../include/QtSql/QODBCDriver ../../include/QtSql/QTDSResult ../../include/QtSql/QTDSDriver ../../include/QtSql/QIBaseResult ../../include/QtSql/QIBaseDriver ../../include/QtSql/QSQLiteResult ../../include/QtSql/QSQLiteDriver ../../include/QtSql/QMYSQLResult ../../include/QtSql/QMYSQLDriver ../../include/QtSql/QPSQLResult ../../include/QtSql/QPSQLDriver ../../include/QtSql/QOCIResult ../../include/QtSql/QOCIDriver ../../include/QtSql/QDB2Result ../../include/QtSql/QDB2Driver 
-SYNCQT.PRIVATE_HEADER_FILES = ../sql/kernel/qsqlcachedresult_p.h ../sql/kernel/qsqlnulldriver_p.h ../sql/models/qsqlquerymodel_p.h ../sql/models/qsqltablemodel_p.h 
+SYNCQT.HEADER_FILES = ../sql/models/qsqlquerymodel.h ../sql/models/qsqlrelationaldelegate.h ../sql/models/qsqlrelationaltablemodel.h ../sql/models/qsqltablemodel.h ../sql/kernel/qsql.h ../sql/kernel/qsqldatabase.h ../sql/kernel/qsqldriver.h ../sql/kernel/qsqldriverplugin.h ../sql/kernel/qsqlerror.h ../sql/kernel/qsqlfield.h ../sql/kernel/qsqlindex.h ../sql/kernel/qsqlquery.h ../sql/kernel/qsqlrecord.h ../sql/kernel/qsqlresult.h ../sql/drivers/ibase/qsql_ibase.h ../sql/drivers/mysql/qsql_mysql.h ../sql/drivers/oci/qsql_oci.h ../sql/drivers/sqlite/qsql_sqlite.h ../sql/drivers/psql/qsql_psql.h ../sql/drivers/sqlite2/qsql_sqlite2.h ../sql/drivers/odbc/qsql_odbc.h ../sql/drivers/db2/qsql_db2.h ../sql/drivers/tds/qsql_tds.h ../../include/QtSql/QtSql 
+SYNCQT.HEADER_CLASSES = ../../include/QtSql/QSqlQueryModel ../../include/QtSql/QSqlRelationalDelegate ../../include/QtSql/QSqlRelation ../../include/QtSql/QSqlRelationalTableModel ../../include/QtSql/QSqlTableModel ../../include/QtSql/QSqlDriverCreatorBase ../../include/QtSql/QSqlDriverCreator ../../include/QtSql/QSqlDatabase ../../include/QtSql/QSqlDriver ../../include/QtSql/QSqlDriverFactoryInterface ../../include/QtSql/QSqlDriverPlugin ../../include/QtSql/QSqlError ../../include/QtSql/QSqlField ../../include/QtSql/QSqlIndex ../../include/QtSql/QSqlQuery ../../include/QtSql/QSqlRecord ../../include/QtSql/QSqlResult ../../include/QtSql/QIBaseResult ../../include/QtSql/QIBaseDriver ../../include/QtSql/QMYSQLResult ../../include/QtSql/QMYSQLDriver ../../include/QtSql/QOCIResult ../../include/QtSql/QOCIDriver ../../include/QtSql/QSQLiteResult ../../include/QtSql/QSQLiteDriver ../../include/QtSql/QPSQLResult ../../include/QtSql/QPSQLDriver ../../include/QtSql/QSQLite2Result ../../include/QtSql/QSQLite2Driver ../../include/QtSql/QODBCResult ../../include/QtSql/QODBCDriver ../../include/QtSql/QDB2Result ../../include/QtSql/QDB2Driver ../../include/QtSql/QTDSResult ../../include/QtSql/QTDSDriver 
+SYNCQT.PRIVATE_HEADER_FILES = ../sql/models/qsqlquerymodel_p.h ../sql/models/qsqltablemodel_p.h ../sql/kernel/qsqlcachedresult_p.h ../sql/kernel/qsqlnulldriver_p.h 
Index: qt4-x11-4.6.2/include/QtXml/QtXml
===================================================================
--- qt4-x11-4.6.2.orig/include/QtXml/QtXml	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtXml/QtXml	2010-04-13 18:06:58.253853638 -0400
@@ -1,7 +1,7 @@
 #ifndef QT_QTXML_MODULE_H
 #define QT_QTXML_MODULE_H
 #include <QtCore/QtCore>
+#include "qxmlstream.h"
 #include "qxml.h"
 #include "qdom.h"
-#include "qxmlstream.h"
 #endif
Index: qt4-x11-4.6.2/include/QtXml/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtXml/headers.pri	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/QtXml/headers.pri	2010-04-13 18:06:58.253853638 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../xml/sax/qxml.h ../xml/dom/qdom.h ../xml/stream/qxmlstream.h ../../include/QtXml/QtXml 
-SYNCQT.HEADER_CLASSES = ../../include/QtXml/QXmlNamespaceSupport ../../include/QtXml/QXmlAttributes ../../include/QtXml/QXmlInputSource ../../include/QtXml/QXmlParseException ../../include/QtXml/QXmlReader ../../include/QtXml/QXmlSimpleReader ../../include/QtXml/QXmlLocator ../../include/QtXml/QXmlContentHandler ../../include/QtXml/QXmlErrorHandler ../../include/QtXml/QXmlDTDHandler ../../include/QtXml/QXmlEntityResolver ../../include/QtXml/QXmlLexicalHandler ../../include/QtXml/QXmlDeclHandler ../../include/QtXml/QXmlDefaultHandler ../../include/QtXml/QDomImplementation ../../include/QtXml/QDomNode ../../include/QtXml/QDomNodeList ../../include/QtXml/QDomDocumentType ../../include/QtXml/QDomDocument ../../include/QtXml/QDomNamedNodeMap ../../include/QtXml/QDomDocumentFragment ../../include/QtXml/QDomCharacterData ../../include/QtXml/QDomAttr ../../include/QtXml/QDomElement ../../include/QtXml/QDomText ../../include/QtXml/QDomComment ../../include/QtXml/QDomCDATASection ../../include/QtXml/QDomNotation ../../include/QtXml/QDomEntity ../../include/QtXml/QDomEntityReference ../../include/QtXml/QDomProcessingInstruction ../../include/QtXml/QXmlStreamAttribute ../../include/QtXml/QXmlStreamAttributes ../../include/QtXml/QXmlStreamEntityDeclaration ../../include/QtXml/QXmlStreamEntityDeclarations ../../include/QtXml/QXmlStreamEntityResolver ../../include/QtXml/QXmlStreamNamespaceDeclaration ../../include/QtXml/QXmlStreamNamespaceDeclarations ../../include/QtXml/QXmlStreamNotationDeclaration ../../include/QtXml/QXmlStreamNotationDeclarations ../../include/QtXml/QXmlStreamReader ../../include/QtXml/QXmlStreamStringRef ../../include/QtXml/QXmlStreamWriter 
+SYNCQT.HEADER_FILES = ../xml/stream/qxmlstream.h ../xml/sax/qxml.h ../xml/dom/qdom.h ../../include/QtXml/QtXml 
+SYNCQT.HEADER_CLASSES = ../../include/QtXml/QXmlStreamAttribute ../../include/QtXml/QXmlStreamAttributes ../../include/QtXml/QXmlStreamEntityDeclaration ../../include/QtXml/QXmlStreamEntityDeclarations ../../include/QtXml/QXmlStreamEntityResolver ../../include/QtXml/QXmlStreamNamespaceDeclaration ../../include/QtXml/QXmlStreamNamespaceDeclarations ../../include/QtXml/QXmlStreamNotationDeclaration ../../include/QtXml/QXmlStreamNotationDeclarations ../../include/QtXml/QXmlStreamReader ../../include/QtXml/QXmlStreamStringRef ../../include/QtXml/QXmlStreamWriter ../../include/QtXml/QXmlNamespaceSupport ../../include/QtXml/QXmlAttributes ../../include/QtXml/QXmlInputSource ../../include/QtXml/QXmlParseException ../../include/QtXml/QXmlReader ../../include/QtXml/QXmlSimpleReader ../../include/QtXml/QXmlLocator ../../include/QtXml/QXmlContentHandler ../../include/QtXml/QXmlErrorHandler ../../include/QtXml/QXmlDTDHandler ../../include/QtXml/QXmlEntityResolver ../../include/QtXml/QXmlLexicalHandler ../../include/QtXml/QXmlDeclHandler ../../include/QtXml/QXmlDefaultHandler ../../include/QtXml/QDomImplementation ../../include/QtXml/QDomNode ../../include/QtXml/QDomNodeList ../../include/QtXml/QDomDocumentType ../../include/QtXml/QDomDocument ../../include/QtXml/QDomNamedNodeMap ../../include/QtXml/QDomDocumentFragment ../../include/QtXml/QDomCharacterData ../../include/QtXml/QDomAttr ../../include/QtXml/QDomElement ../../include/QtXml/QDomText ../../include/QtXml/QDomComment ../../include/QtXml/QDomCDATASection ../../include/QtXml/QDomNotation ../../include/QtXml/QDomEntity ../../include/QtXml/QDomEntityReference ../../include/QtXml/QDomProcessingInstruction 
 SYNCQT.PRIVATE_HEADER_FILES = 
Index: qt4-x11-4.6.2/include/QtXmlPatterns/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/QtXmlPatterns/headers.pri	2010-02-11 10:55:14.000000000 -0500
+++ qt4-x11-4.6.2/include/QtXmlPatterns/headers.pri	2010-04-13 18:06:58.253853638 -0400
@@ -1,3 +1,3 @@
 SYNCQT.HEADER_FILES = ../xmlpatterns/api/qabstractmessagehandler.h ../xmlpatterns/api/qabstracturiresolver.h ../xmlpatterns/api/qabstractxmlnodemodel.h ../xmlpatterns/api/qabstractxmlreceiver.h ../xmlpatterns/api/qsimplexmlnodemodel.h ../xmlpatterns/api/qsourcelocation.h ../xmlpatterns/api/qxmlformatter.h ../xmlpatterns/api/qxmlname.h ../xmlpatterns/api/qxmlnamepool.h ../xmlpatterns/api/qxmlquery.h ../xmlpatterns/api/qxmlresultitems.h ../xmlpatterns/api/qxmlschema.h ../xmlpatterns/api/qxmlschemavalidator.h ../xmlpatterns/api/qxmlserializer.h ../../include/QtXmlPatterns/QtXmlPatterns 
 SYNCQT.HEADER_CLASSES = ../../include/QtXmlPatterns/QAbstractMessageHandler ../../include/QtXmlPatterns/QAbstractUriResolver ../../include/QtXmlPatterns/QXmlNodeModelIndex ../../include/QtXmlPatterns/QAbstractXmlNodeModel ../../include/QtXmlPatterns/QXmlItem ../../include/QtXmlPatterns/QAbstractXmlReceiver ../../include/QtXmlPatterns/QSimpleXmlNodeModel ../../include/QtXmlPatterns/QSourceLocation ../../include/QtXmlPatterns/QXmlFormatter ../../include/QtXmlPatterns/QXmlName ../../include/QtXmlPatterns/QXmlNamePool ../../include/QtXmlPatterns/QXmlQuery ../../include/QtXmlPatterns/QXmlResultItems ../../include/QtXmlPatterns/QXmlSchema ../../include/QtXmlPatterns/QXmlSchemaValidator ../../include/QtXmlPatterns/QXmlSerializer 
-SYNCQT.PRIVATE_HEADER_FILES = ../xmlpatterns/api/qabstractxmlforwarditerator_p.h ../xmlpatterns/api/qabstractxmlnodemodel_p.h ../xmlpatterns/api/qabstractxmlpullprovider_p.h ../xmlpatterns/api/qabstractxmlreceiver_p.h ../xmlpatterns/api/qcoloringmessagehandler_p.h ../xmlpatterns/api/qcoloroutput_p.h ../xmlpatterns/api/qdeviceresourceloader_p.h ../xmlpatterns/api/qiodevicedelegate_p.h ../xmlpatterns/api/qnetworkaccessdelegator_p.h ../xmlpatterns/api/qpullbridge_p.h ../xmlpatterns/api/qreferencecountedvalue_p.h ../xmlpatterns/api/qresourcedelegator_p.h ../xmlpatterns/api/quriloader_p.h ../xmlpatterns/api/qvariableloader_p.h ../xmlpatterns/api/qxmlpatternistcli_p.h ../xmlpatterns/api/qxmlquery_p.h ../xmlpatterns/api/qxmlresultitems_p.h ../xmlpatterns/api/qxmlschema_p.h ../xmlpatterns/api/qxmlschemavalidator_p.h ../xmlpatterns/api/qxmlserializer_p.h ../xmlpatterns/schema/qnamespacesupport_p.h ../xmlpatterns/schema/qxsdalternative_p.h ../xmlpatterns/schema/qxsdannotated_p.h ../xmlpatterns/schema/qxsdannotation_p.h ../xmlpatterns/schema/qxsdapplicationinformation_p.h ../xmlpatterns/schema/qxsdassertion_p.h ../xmlpatterns/schema/qxsdattribute_p.h ../xmlpatterns/schema/qxsdattributegroup_p.h ../xmlpatterns/schema/qxsdattributereference_p.h ../xmlpatterns/schema/qxsdattributeterm_p.h ../xmlpatterns/schema/qxsdattributeuse_p.h ../xmlpatterns/schema/qxsdcomplextype_p.h ../xmlpatterns/schema/qxsddocumentation_p.h ../xmlpatterns/schema/qxsdelement_p.h ../xmlpatterns/schema/qxsdfacet_p.h ../xmlpatterns/schema/qxsdidcache_p.h ../xmlpatterns/schema/qxsdidchelper_p.h ../xmlpatterns/schema/qxsdidentityconstraint_p.h ../xmlpatterns/schema/qxsdinstancereader_p.h ../xmlpatterns/schema/qxsdmodelgroup_p.h ../xmlpatterns/schema/qxsdnotation_p.h ../xmlpatterns/schema/qxsdparticle_p.h ../xmlpatterns/schema/qxsdparticlechecker_p.h ../xmlpatterns/schema/qxsdreference_p.h ../xmlpatterns/schema/qxsdschema_p.h ../xmlpatterns/schema/qxsdschemachecker_p.h ../xmlpatterns/schema/qxsdschemacontext_p.h ../xmlpatterns/schema/qxsdschemadebugger_p.h ../xmlpatterns/schema/qxsdschemahelper_p.h ../xmlpatterns/schema/qxsdschemamerger_p.h ../xmlpatterns/schema/qxsdschemaparser_p.h ../xmlpatterns/schema/qxsdschemaparsercontext_p.h ../xmlpatterns/schema/qxsdschemaresolver_p.h ../xmlpatterns/schema/qxsdschematoken_p.h ../xmlpatterns/schema/qxsdschematypesfactory_p.h ../xmlpatterns/schema/qxsdsimpletype_p.h ../xmlpatterns/schema/qxsdstatemachine_p.h ../xmlpatterns/schema/qxsdstatemachinebuilder_p.h ../xmlpatterns/schema/qxsdterm_p.h ../xmlpatterns/schema/qxsdtypechecker_p.h ../xmlpatterns/schema/qxsduserschematype_p.h ../xmlpatterns/schema/qxsdvalidatedxmlnodemodel_p.h ../xmlpatterns/schema/qxsdvalidatinginstancereader_p.h ../xmlpatterns/schema/qxsdwildcard_p.h ../xmlpatterns/schema/qxsdxpathexpression_p.h ../xmlpatterns/iterators/qcachingiterator_p.h ../xmlpatterns/iterators/qdeduplicateiterator_p.h ../xmlpatterns/iterators/qdistinctiterator_p.h ../xmlpatterns/iterators/qemptyiterator_p.h ../xmlpatterns/iterators/qexceptiterator_p.h ../xmlpatterns/iterators/qindexofiterator_p.h ../xmlpatterns/iterators/qinsertioniterator_p.h ../xmlpatterns/iterators/qintersectiterator_p.h ../xmlpatterns/iterators/qitemmappingiterator_p.h ../xmlpatterns/iterators/qrangeiterator_p.h ../xmlpatterns/iterators/qremovaliterator_p.h ../xmlpatterns/iterators/qsequencemappingiterator_p.h ../xmlpatterns/iterators/qsingletoniterator_p.h ../xmlpatterns/iterators/qsubsequenceiterator_p.h ../xmlpatterns/iterators/qtocodepointsiterator_p.h ../xmlpatterns/iterators/qunioniterator_p.h ../xmlpatterns/type/qabstractnodetest_p.h ../xmlpatterns/type/qanyitemtype_p.h ../xmlpatterns/type/qanynodetype_p.h ../xmlpatterns/type/qanysimpletype_p.h ../xmlpatterns/type/qanytype_p.h ../xmlpatterns/type/qatomiccasterlocator_p.h ../xmlpatterns/type/qatomiccasterlocators_p.h ../xmlpatterns/type/qatomiccomparatorlocator_p.h ../xmlpatterns/type/qatomiccomparatorlocators_p.h ../xmlpatterns/type/qatomicmathematicianlocator_p.h ../xmlpatterns/type/qatomicmathematicianlocators_p.h ../xmlpatterns/type/qatomictype_p.h ../xmlpatterns/type/qatomictypedispatch_p.h ../xmlpatterns/type/qbasictypesfactory_p.h ../xmlpatterns/type/qbuiltinatomictype_p.h ../xmlpatterns/type/qbuiltinatomictypes_p.h ../xmlpatterns/type/qbuiltinnodetype_p.h ../xmlpatterns/type/qbuiltintypes_p.h ../xmlpatterns/type/qcardinality_p.h ../xmlpatterns/type/qcommonsequencetypes_p.h ../xmlpatterns/type/qebvtype_p.h ../xmlpatterns/type/qemptysequencetype_p.h ../xmlpatterns/type/qgenericsequencetype_p.h ../xmlpatterns/type/qitemtype_p.h ../xmlpatterns/type/qlocalnametest_p.h ../xmlpatterns/type/qmultiitemtype_p.h ../xmlpatterns/type/qnamedschemacomponent_p.h ../xmlpatterns/type/qnamespacenametest_p.h ../xmlpatterns/type/qnonetype_p.h ../xmlpatterns/type/qnumerictype_p.h ../xmlpatterns/type/qprimitives_p.h ../xmlpatterns/type/qqnametest_p.h ../xmlpatterns/type/qschemacomponent_p.h ../xmlpatterns/type/qschematype_p.h ../xmlpatterns/type/qschematypefactory_p.h ../xmlpatterns/type/qsequencetype_p.h ../xmlpatterns/type/qtypechecker_p.h ../xmlpatterns/type/quntyped_p.h ../xmlpatterns/type/qxsltnodetest_p.h ../xmlpatterns/functions/qabstractfunctionfactory_p.h ../xmlpatterns/functions/qaccessorfns_p.h ../xmlpatterns/functions/qaggregatefns_p.h ../xmlpatterns/functions/qaggregator_p.h ../xmlpatterns/functions/qassemblestringfns_p.h ../xmlpatterns/functions/qbooleanfns_p.h ../xmlpatterns/functions/qcomparescaseaware_p.h ../xmlpatterns/functions/qcomparestringfns_p.h ../xmlpatterns/functions/qcomparingaggregator_p.h ../xmlpatterns/functions/qconstructorfunctionsfactory_p.h ../xmlpatterns/functions/qcontextfns_p.h ../xmlpatterns/functions/qcontextnodechecker_p.h ../xmlpatterns/functions/qcurrentfn_p.h ../xmlpatterns/functions/qdatetimefn_p.h ../xmlpatterns/functions/qdatetimefns_p.h ../xmlpatterns/functions/qdeepequalfn_p.h ../xmlpatterns/functions/qdocumentfn_p.h ../xmlpatterns/functions/qelementavailablefn_p.h ../xmlpatterns/functions/qerrorfn_p.h ../xmlpatterns/functions/qfunctionargument_p.h ../xmlpatterns/functions/qfunctionavailablefn_p.h ../xmlpatterns/functions/qfunctioncall_p.h ../xmlpatterns/functions/qfunctionfactory_p.h ../xmlpatterns/functions/qfunctionfactorycollection_p.h ../xmlpatterns/functions/qfunctionsignature_p.h ../xmlpatterns/functions/qgenerateidfn_p.h ../xmlpatterns/functions/qnodefns_p.h ../xmlpatterns/functions/qnumericfns_p.h ../xmlpatterns/functions/qpatternmatchingfns_p.h ../xmlpatterns/functions/qpatternplatform_p.h ../xmlpatterns/functions/qqnamefns_p.h ../xmlpatterns/functions/qresolveurifn_p.h ../xmlpatterns/functions/qsequencefns_p.h ../xmlpatterns/functions/qsequencegeneratingfns_p.h ../xmlpatterns/functions/qstaticbaseuricontainer_p.h ../xmlpatterns/functions/qstaticnamespacescontainer_p.h ../xmlpatterns/functions/qstringvaluefns_p.h ../xmlpatterns/functions/qsubstringfns_p.h ../xmlpatterns/functions/qsystempropertyfn_p.h ../xmlpatterns/functions/qtimezonefns_p.h ../xmlpatterns/functions/qtracefn_p.h ../xmlpatterns/functions/qtypeavailablefn_p.h ../xmlpatterns/functions/qunparsedentitypublicidfn_p.h ../xmlpatterns/functions/qunparsedentityurifn_p.h ../xmlpatterns/functions/qunparsedtextavailablefn_p.h ../xmlpatterns/functions/qunparsedtextfn_p.h ../xmlpatterns/functions/qxpath10corefunctions_p.h ../xmlpatterns/functions/qxpath20corefunctions_p.h ../xmlpatterns/functions/qxslt20corefunctions_p.h ../xmlpatterns/environment/qcurrentitemcontext_p.h ../xmlpatterns/environment/qdelegatingdynamiccontext_p.h ../xmlpatterns/environment/qdelegatingstaticcontext_p.h ../xmlpatterns/environment/qdynamiccontext_p.h ../xmlpatterns/environment/qfocus_p.h ../xmlpatterns/environment/qgenericdynamiccontext_p.h ../xmlpatterns/environment/qgenericstaticcontext_p.h ../xmlpatterns/environment/qreceiverdynamiccontext_p.h ../xmlpatterns/environment/qreportcontext_p.h ../xmlpatterns/environment/qstackcontextbase_p.h ../xmlpatterns/environment/qstaticbaseuricontext_p.h ../xmlpatterns/environment/qstaticcompatibilitycontext_p.h ../xmlpatterns/environment/qstaticcontext_p.h ../xmlpatterns/environment/qstaticcurrentcontext_p.h ../xmlpatterns/environment/qstaticfocuscontext_p.h ../xmlpatterns/environment/qstaticnamespacecontext_p.h ../xmlpatterns/acceltree/qacceliterators_p.h ../xmlpatterns/acceltree/qacceltree_p.h ../xmlpatterns/acceltree/qacceltreebuilder_p.h ../xmlpatterns/acceltree/qacceltreeresourceloader_p.h ../xmlpatterns/acceltree/qcompressedwhitespace_p.h ../xmlpatterns/data/qabstractdatetime_p.h ../xmlpatterns/data/qabstractduration_p.h ../xmlpatterns/data/qabstractfloat_p.h ../xmlpatterns/data/qabstractfloatcasters_p.h ../xmlpatterns/data/qabstractfloatmathematician_p.h ../xmlpatterns/data/qanyuri_p.h ../xmlpatterns/data/qatomiccaster_p.h ../xmlpatterns/data/qatomiccasters_p.h ../xmlpatterns/data/qatomiccomparator_p.h ../xmlpatterns/data/qatomiccomparators_p.h ../xmlpatterns/data/qatomicmathematician_p.h ../xmlpatterns/data/qatomicmathematicians_p.h ../xmlpatterns/data/qatomicstring_p.h ../xmlpatterns/data/qbase64binary_p.h ../xmlpatterns/data/qboolean_p.h ../xmlpatterns/data/qcommonvalues_p.h ../xmlpatterns/data/qcomparisonfactory_p.h ../xmlpatterns/data/qdate_p.h ../xmlpatterns/data/qdaytimeduration_p.h ../xmlpatterns/data/qdecimal_p.h ../xmlpatterns/data/qderivedinteger_p.h ../xmlpatterns/data/qderivedstring_p.h ../xmlpatterns/data/qduration_p.h ../xmlpatterns/data/qgday_p.h ../xmlpatterns/data/qgmonth_p.h ../xmlpatterns/data/qgmonthday_p.h ../xmlpatterns/data/qgyear_p.h ../xmlpatterns/data/qgyearmonth_p.h ../xmlpatterns/data/qhexbinary_p.h ../xmlpatterns/data/qinteger_p.h ../xmlpatterns/data/qitem_p.h ../xmlpatterns/data/qnodebuilder_p.h ../xmlpatterns/data/qqnamevalue_p.h ../xmlpatterns/data/qresourceloader_p.h ../xmlpatterns/data/qschemadatetime_p.h ../xmlpatterns/data/qschemanumeric_p.h ../xmlpatterns/data/qschematime_p.h ../xmlpatterns/data/qsequencereceiver_p.h ../xmlpatterns/data/qsorttuple_p.h ../xmlpatterns/data/quntypedatomic_p.h ../xmlpatterns/data/qvalidationerror_p.h ../xmlpatterns/data/qvaluefactory_p.h ../xmlpatterns/data/qyearmonthduration_p.h ../xmlpatterns/parser/qmaintainingreader_p.h ../xmlpatterns/parser/qparsercontext_p.h ../xmlpatterns/parser/qquerytransformparser_p.h ../xmlpatterns/parser/qtokenizer_p.h ../xmlpatterns/parser/qtokenrevealer_p.h ../xmlpatterns/parser/qtokensource_p.h ../xmlpatterns/parser/qxquerytokenizer_p.h ../xmlpatterns/parser/qxslttokenizer_p.h ../xmlpatterns/parser/qxslttokenlookup_p.h ../xmlpatterns/janitors/qargumentconverter_p.h ../xmlpatterns/janitors/qatomizer_p.h ../xmlpatterns/janitors/qcardinalityverifier_p.h ../xmlpatterns/janitors/qebvextractor_p.h ../xmlpatterns/janitors/qitemverifier_p.h ../xmlpatterns/janitors/quntypedatomicconverter_p.h ../xmlpatterns/expr/qandexpression_p.h ../xmlpatterns/expr/qapplytemplate_p.h ../xmlpatterns/expr/qargumentreference_p.h ../xmlpatterns/expr/qarithmeticexpression_p.h ../xmlpatterns/expr/qattributeconstructor_p.h ../xmlpatterns/expr/qattributenamevalidator_p.h ../xmlpatterns/expr/qaxisstep_p.h ../xmlpatterns/expr/qcachecells_p.h ../xmlpatterns/expr/qcallsite_p.h ../xmlpatterns/expr/qcalltargetdescription_p.h ../xmlpatterns/expr/qcalltemplate_p.h ../xmlpatterns/expr/qcastableas_p.h ../xmlpatterns/expr/qcastas_p.h ../xmlpatterns/expr/qcastingplatform_p.h ../xmlpatterns/expr/qcollationchecker_p.h ../xmlpatterns/expr/qcombinenodes_p.h ../xmlpatterns/expr/qcommentconstructor_p.h ../xmlpatterns/expr/qcomparisonplatform_p.h ../xmlpatterns/expr/qcomputednamespaceconstructor_p.h ../xmlpatterns/expr/qcontextitem_p.h ../xmlpatterns/expr/qcopyof_p.h ../xmlpatterns/expr/qcurrentitemstore_p.h ../xmlpatterns/expr/qdocumentconstructor_p.h ../xmlpatterns/expr/qdocumentcontentvalidator_p.h ../xmlpatterns/expr/qdynamiccontextstore_p.h ../xmlpatterns/expr/qelementconstructor_p.h ../xmlpatterns/expr/qemptycontainer_p.h ../xmlpatterns/expr/qemptysequence_p.h ../xmlpatterns/expr/qevaluationcache_p.h ../xmlpatterns/expr/qexpression_p.h ../xmlpatterns/expr/qexpressiondispatch_p.h ../xmlpatterns/expr/qexpressionfactory_p.h ../xmlpatterns/expr/qexpressionsequence_p.h ../xmlpatterns/expr/qexpressionvariablereference_p.h ../xmlpatterns/expr/qexternalvariableloader_p.h ../xmlpatterns/expr/qexternalvariablereference_p.h ../xmlpatterns/expr/qfirstitempredicate_p.h ../xmlpatterns/expr/qforclause_p.h ../xmlpatterns/expr/qgeneralcomparison_p.h ../xmlpatterns/expr/qgenericpredicate_p.h ../xmlpatterns/expr/qifthenclause_p.h ../xmlpatterns/expr/qinstanceof_p.h ../xmlpatterns/expr/qletclause_p.h ../xmlpatterns/expr/qliteral_p.h ../xmlpatterns/expr/qliteralsequence_p.h ../xmlpatterns/expr/qnamespaceconstructor_p.h ../xmlpatterns/expr/qncnameconstructor_p.h ../xmlpatterns/expr/qnodecomparison_p.h ../xmlpatterns/expr/qnodesort_p.h ../xmlpatterns/expr/qoperandsiterator_p.h ../xmlpatterns/expr/qoptimizationpasses_p.h ../xmlpatterns/expr/qoptimizerblocks_p.h ../xmlpatterns/expr/qoptimizerframework_p.h ../xmlpatterns/expr/qorderby_p.h ../xmlpatterns/expr/qorexpression_p.h ../xmlpatterns/expr/qpaircontainer_p.h ../xmlpatterns/expr/qparentnodeaxis_p.h ../xmlpatterns/expr/qpath_p.h ../xmlpatterns/expr/qpositionalvariablereference_p.h ../xmlpatterns/expr/qprocessinginstructionconstructor_p.h ../xmlpatterns/expr/qqnameconstructor_p.h ../xmlpatterns/expr/qquantifiedexpression_p.h ../xmlpatterns/expr/qrangeexpression_p.h ../xmlpatterns/expr/qrangevariablereference_p.h ../xmlpatterns/expr/qreturnorderby_p.h ../xmlpatterns/expr/qsimplecontentconstructor_p.h ../xmlpatterns/expr/qsinglecontainer_p.h ../xmlpatterns/expr/qsourcelocationreflection_p.h ../xmlpatterns/expr/qstaticbaseuristore_p.h ../xmlpatterns/expr/qstaticcompatibilitystore_p.h ../xmlpatterns/expr/qtemplate_p.h ../xmlpatterns/expr/qtemplateinvoker_p.h ../xmlpatterns/expr/qtemplatemode_p.h ../xmlpatterns/expr/qtemplateparameterreference_p.h ../xmlpatterns/expr/qtemplatepattern_p.h ../xmlpatterns/expr/qtextnodeconstructor_p.h ../xmlpatterns/expr/qtreatas_p.h ../xmlpatterns/expr/qtriplecontainer_p.h ../xmlpatterns/expr/qtruthpredicate_p.h ../xmlpatterns/expr/qunaryexpression_p.h ../xmlpatterns/expr/qunlimitedcontainer_p.h ../xmlpatterns/expr/qunresolvedvariablereference_p.h ../xmlpatterns/expr/quserfunction_p.h ../xmlpatterns/expr/quserfunctioncallsite_p.h ../xmlpatterns/expr/qvalidate_p.h ../xmlpatterns/expr/qvaluecomparison_p.h ../xmlpatterns/expr/qvariabledeclaration_p.h ../xmlpatterns/expr/qvariablereference_p.h ../xmlpatterns/expr/qwithparam_p.h ../xmlpatterns/expr/qxsltsimplecontentconstructor_p.h ../xmlpatterns/projection/qdocumentprojector_p.h ../xmlpatterns/projection/qprojectedexpression_p.h ../xmlpatterns/utils/qautoptr_p.h ../xmlpatterns/utils/qcommonnamespaces_p.h ../xmlpatterns/utils/qcppcastinghelper_p.h ../xmlpatterns/utils/qdebug_p.h ../xmlpatterns/utils/qdelegatingnamespaceresolver_p.h ../xmlpatterns/utils/qgenericnamespaceresolver_p.h ../xmlpatterns/utils/qnamepool_p.h ../xmlpatterns/utils/qnamespacebinding_p.h ../xmlpatterns/utils/qnamespaceresolver_p.h ../xmlpatterns/utils/qnodenamespaceresolver_p.h ../xmlpatterns/utils/qoutputvalidator_p.h ../xmlpatterns/utils/qpatternistlocale_p.h ../xmlpatterns/utils/qxpathhelper_p.h 
+SYNCQT.PRIVATE_HEADER_FILES = ../xmlpatterns/schema/qnamespacesupport_p.h ../xmlpatterns/schema/qxsdalternative_p.h ../xmlpatterns/schema/qxsdannotated_p.h ../xmlpatterns/schema/qxsdannotation_p.h ../xmlpatterns/schema/qxsdapplicationinformation_p.h ../xmlpatterns/schema/qxsdassertion_p.h ../xmlpatterns/schema/qxsdattribute_p.h ../xmlpatterns/schema/qxsdattributegroup_p.h ../xmlpatterns/schema/qxsdattributereference_p.h ../xmlpatterns/schema/qxsdattributeterm_p.h ../xmlpatterns/schema/qxsdattributeuse_p.h ../xmlpatterns/schema/qxsdcomplextype_p.h ../xmlpatterns/schema/qxsddocumentation_p.h ../xmlpatterns/schema/qxsdelement_p.h ../xmlpatterns/schema/qxsdfacet_p.h ../xmlpatterns/schema/qxsdidcache_p.h ../xmlpatterns/schema/qxsdidchelper_p.h ../xmlpatterns/schema/qxsdidentityconstraint_p.h ../xmlpatterns/schema/qxsdinstancereader_p.h ../xmlpatterns/schema/qxsdmodelgroup_p.h ../xmlpatterns/schema/qxsdnotation_p.h ../xmlpatterns/schema/qxsdparticle_p.h ../xmlpatterns/schema/qxsdparticlechecker_p.h ../xmlpatterns/schema/qxsdreference_p.h ../xmlpatterns/schema/qxsdschema_p.h ../xmlpatterns/schema/qxsdschemachecker_p.h ../xmlpatterns/schema/qxsdschemacontext_p.h ../xmlpatterns/schema/qxsdschemadebugger_p.h ../xmlpatterns/schema/qxsdschemahelper_p.h ../xmlpatterns/schema/qxsdschemamerger_p.h ../xmlpatterns/schema/qxsdschemaparser_p.h ../xmlpatterns/schema/qxsdschemaparsercontext_p.h ../xmlpatterns/schema/qxsdschemaresolver_p.h ../xmlpatterns/schema/qxsdschematoken_p.h ../xmlpatterns/schema/qxsdschematypesfactory_p.h ../xmlpatterns/schema/qxsdsimpletype_p.h ../xmlpatterns/schema/qxsdstatemachine_p.h ../xmlpatterns/schema/qxsdstatemachinebuilder_p.h ../xmlpatterns/schema/qxsdterm_p.h ../xmlpatterns/schema/qxsdtypechecker_p.h ../xmlpatterns/schema/qxsduserschematype_p.h ../xmlpatterns/schema/qxsdvalidatedxmlnodemodel_p.h ../xmlpatterns/schema/qxsdvalidatinginstancereader_p.h ../xmlpatterns/schema/qxsdwildcard_p.h ../xmlpatterns/schema/qxsdxpathexpression_p.h ../xmlpatterns/parser/qmaintainingreader_p.h ../xmlpatterns/parser/qparsercontext_p.h ../xmlpatterns/parser/qquerytransformparser_p.h ../xmlpatterns/parser/qtokenizer_p.h ../xmlpatterns/parser/qtokenrevealer_p.h ../xmlpatterns/parser/qtokensource_p.h ../xmlpatterns/parser/qxquerytokenizer_p.h ../xmlpatterns/parser/qxslttokenizer_p.h ../xmlpatterns/parser/qxslttokenlookup_p.h ../xmlpatterns/iterators/qcachingiterator_p.h ../xmlpatterns/iterators/qdeduplicateiterator_p.h ../xmlpatterns/iterators/qdistinctiterator_p.h ../xmlpatterns/iterators/qemptyiterator_p.h ../xmlpatterns/iterators/qexceptiterator_p.h ../xmlpatterns/iterators/qindexofiterator_p.h ../xmlpatterns/iterators/qinsertioniterator_p.h ../xmlpatterns/iterators/qintersectiterator_p.h ../xmlpatterns/iterators/qitemmappingiterator_p.h ../xmlpatterns/iterators/qrangeiterator_p.h ../xmlpatterns/iterators/qremovaliterator_p.h ../xmlpatterns/iterators/qsequencemappingiterator_p.h ../xmlpatterns/iterators/qsingletoniterator_p.h ../xmlpatterns/iterators/qsubsequenceiterator_p.h ../xmlpatterns/iterators/qtocodepointsiterator_p.h ../xmlpatterns/iterators/qunioniterator_p.h ../xmlpatterns/janitors/qargumentconverter_p.h ../xmlpatterns/janitors/qatomizer_p.h ../xmlpatterns/janitors/qcardinalityverifier_p.h ../xmlpatterns/janitors/qebvextractor_p.h ../xmlpatterns/janitors/qitemverifier_p.h ../xmlpatterns/janitors/quntypedatomicconverter_p.h ../xmlpatterns/type/qabstractnodetest_p.h ../xmlpatterns/type/qanyitemtype_p.h ../xmlpatterns/type/qanynodetype_p.h ../xmlpatterns/type/qanysimpletype_p.h ../xmlpatterns/type/qanytype_p.h ../xmlpatterns/type/qatomiccasterlocator_p.h ../xmlpatterns/type/qatomiccasterlocators_p.h ../xmlpatterns/type/qatomiccomparatorlocator_p.h ../xmlpatterns/type/qatomiccomparatorlocators_p.h ../xmlpatterns/type/qatomicmathematicianlocator_p.h ../xmlpatterns/type/qatomicmathematicianlocators_p.h ../xmlpatterns/type/qatomictype_p.h ../xmlpatterns/type/qatomictypedispatch_p.h ../xmlpatterns/type/qbasictypesfactory_p.h ../xmlpatterns/type/qbuiltinatomictype_p.h ../xmlpatterns/type/qbuiltinatomictypes_p.h ../xmlpatterns/type/qbuiltinnodetype_p.h ../xmlpatterns/type/qbuiltintypes_p.h ../xmlpatterns/type/qcardinality_p.h ../xmlpatterns/type/qcommonsequencetypes_p.h ../xmlpatterns/type/qebvtype_p.h ../xmlpatterns/type/qemptysequencetype_p.h ../xmlpatterns/type/qgenericsequencetype_p.h ../xmlpatterns/type/qitemtype_p.h ../xmlpatterns/type/qlocalnametest_p.h ../xmlpatterns/type/qmultiitemtype_p.h ../xmlpatterns/type/qnamedschemacomponent_p.h ../xmlpatterns/type/qnamespacenametest_p.h ../xmlpatterns/type/qnonetype_p.h ../xmlpatterns/type/qnumerictype_p.h ../xmlpatterns/type/qprimitives_p.h ../xmlpatterns/type/qqnametest_p.h ../xmlpatterns/type/qschemacomponent_p.h ../xmlpatterns/type/qschematype_p.h ../xmlpatterns/type/qschematypefactory_p.h ../xmlpatterns/type/qsequencetype_p.h ../xmlpatterns/type/qtypechecker_p.h ../xmlpatterns/type/quntyped_p.h ../xmlpatterns/type/qxsltnodetest_p.h ../xmlpatterns/projection/qdocumentprojector_p.h ../xmlpatterns/projection/qprojectedexpression_p.h ../xmlpatterns/expr/qandexpression_p.h ../xmlpatterns/expr/qapplytemplate_p.h ../xmlpatterns/expr/qargumentreference_p.h ../xmlpatterns/expr/qarithmeticexpression_p.h ../xmlpatterns/expr/qattributeconstructor_p.h ../xmlpatterns/expr/qattributenamevalidator_p.h ../xmlpatterns/expr/qaxisstep_p.h ../xmlpatterns/expr/qcachecells_p.h ../xmlpatterns/expr/qcallsite_p.h ../xmlpatterns/expr/qcalltargetdescription_p.h ../xmlpatterns/expr/qcalltemplate_p.h ../xmlpatterns/expr/qcastableas_p.h ../xmlpatterns/expr/qcastas_p.h ../xmlpatterns/expr/qcastingplatform_p.h ../xmlpatterns/expr/qcollationchecker_p.h ../xmlpatterns/expr/qcombinenodes_p.h ../xmlpatterns/expr/qcommentconstructor_p.h ../xmlpatterns/expr/qcomparisonplatform_p.h ../xmlpatterns/expr/qcomputednamespaceconstructor_p.h ../xmlpatterns/expr/qcontextitem_p.h ../xmlpatterns/expr/qcopyof_p.h ../xmlpatterns/expr/qcurrentitemstore_p.h ../xmlpatterns/expr/qdocumentconstructor_p.h ../xmlpatterns/expr/qdocumentcontentvalidator_p.h ../xmlpatterns/expr/qdynamiccontextstore_p.h ../xmlpatterns/expr/qelementconstructor_p.h ../xmlpatterns/expr/qemptycontainer_p.h ../xmlpatterns/expr/qemptysequence_p.h ../xmlpatterns/expr/qevaluationcache_p.h ../xmlpatterns/expr/qexpression_p.h ../xmlpatterns/expr/qexpressiondispatch_p.h ../xmlpatterns/expr/qexpressionfactory_p.h ../xmlpatterns/expr/qexpressionsequence_p.h ../xmlpatterns/expr/qexpressionvariablereference_p.h ../xmlpatterns/expr/qexternalvariableloader_p.h ../xmlpatterns/expr/qexternalvariablereference_p.h ../xmlpatterns/expr/qfirstitempredicate_p.h ../xmlpatterns/expr/qforclause_p.h ../xmlpatterns/expr/qgeneralcomparison_p.h ../xmlpatterns/expr/qgenericpredicate_p.h ../xmlpatterns/expr/qifthenclause_p.h ../xmlpatterns/expr/qinstanceof_p.h ../xmlpatterns/expr/qletclause_p.h ../xmlpatterns/expr/qliteral_p.h ../xmlpatterns/expr/qliteralsequence_p.h ../xmlpatterns/expr/qnamespaceconstructor_p.h ../xmlpatterns/expr/qncnameconstructor_p.h ../xmlpatterns/expr/qnodecomparison_p.h ../xmlpatterns/expr/qnodesort_p.h ../xmlpatterns/expr/qoperandsiterator_p.h ../xmlpatterns/expr/qoptimizationpasses_p.h ../xmlpatterns/expr/qoptimizerblocks_p.h ../xmlpatterns/expr/qoptimizerframework_p.h ../xmlpatterns/expr/qorderby_p.h ../xmlpatterns/expr/qorexpression_p.h ../xmlpatterns/expr/qpaircontainer_p.h ../xmlpatterns/expr/qparentnodeaxis_p.h ../xmlpatterns/expr/qpath_p.h ../xmlpatterns/expr/qpositionalvariablereference_p.h ../xmlpatterns/expr/qprocessinginstructionconstructor_p.h ../xmlpatterns/expr/qqnameconstructor_p.h ../xmlpatterns/expr/qquantifiedexpression_p.h ../xmlpatterns/expr/qrangeexpression_p.h ../xmlpatterns/expr/qrangevariablereference_p.h ../xmlpatterns/expr/qreturnorderby_p.h ../xmlpatterns/expr/qsimplecontentconstructor_p.h ../xmlpatterns/expr/qsinglecontainer_p.h ../xmlpatterns/expr/qsourcelocationreflection_p.h ../xmlpatterns/expr/qstaticbaseuristore_p.h ../xmlpatterns/expr/qstaticcompatibilitystore_p.h ../xmlpatterns/expr/qtemplate_p.h ../xmlpatterns/expr/qtemplateinvoker_p.h ../xmlpatterns/expr/qtemplatemode_p.h ../xmlpatterns/expr/qtemplateparameterreference_p.h ../xmlpatterns/expr/qtemplatepattern_p.h ../xmlpatterns/expr/qtextnodeconstructor_p.h ../xmlpatterns/expr/qtreatas_p.h ../xmlpatterns/expr/qtriplecontainer_p.h ../xmlpatterns/expr/qtruthpredicate_p.h ../xmlpatterns/expr/qunaryexpression_p.h ../xmlpatterns/expr/qunlimitedcontainer_p.h ../xmlpatterns/expr/qunresolvedvariablereference_p.h ../xmlpatterns/expr/quserfunction_p.h ../xmlpatterns/expr/quserfunctioncallsite_p.h ../xmlpatterns/expr/qvalidate_p.h ../xmlpatterns/expr/qvaluecomparison_p.h ../xmlpatterns/expr/qvariabledeclaration_p.h ../xmlpatterns/expr/qvariablereference_p.h ../xmlpatterns/expr/qwithparam_p.h ../xmlpatterns/expr/qxsltsimplecontentconstructor_p.h ../xmlpatterns/utils/qautoptr_p.h ../xmlpatterns/utils/qcommonnamespaces_p.h ../xmlpatterns/utils/qcppcastinghelper_p.h ../xmlpatterns/utils/qdebug_p.h ../xmlpatterns/utils/qdelegatingnamespaceresolver_p.h ../xmlpatterns/utils/qgenericnamespaceresolver_p.h ../xmlpatterns/utils/qnamepool_p.h ../xmlpatterns/utils/qnamespacebinding_p.h ../xmlpatterns/utils/qnamespaceresolver_p.h ../xmlpatterns/utils/qnodenamespaceresolver_p.h ../xmlpatterns/utils/qoutputvalidator_p.h ../xmlpatterns/utils/qpatternistlocale_p.h ../xmlpatterns/utils/qxpathhelper_p.h ../xmlpatterns/data/qabstractdatetime_p.h ../xmlpatterns/data/qabstractduration_p.h ../xmlpatterns/data/qabstractfloat_p.h ../xmlpatterns/data/qabstractfloatcasters_p.h ../xmlpatterns/data/qabstractfloatmathematician_p.h ../xmlpatterns/data/qanyuri_p.h ../xmlpatterns/data/qatomiccaster_p.h ../xmlpatterns/data/qatomiccasters_p.h ../xmlpatterns/data/qatomiccomparator_p.h ../xmlpatterns/data/qatomiccomparators_p.h ../xmlpatterns/data/qatomicmathematician_p.h ../xmlpatterns/data/qatomicmathematicians_p.h ../xmlpatterns/data/qatomicstring_p.h ../xmlpatterns/data/qbase64binary_p.h ../xmlpatterns/data/qboolean_p.h ../xmlpatterns/data/qcommonvalues_p.h ../xmlpatterns/data/qcomparisonfactory_p.h ../xmlpatterns/data/qdate_p.h ../xmlpatterns/data/qdaytimeduration_p.h ../xmlpatterns/data/qdecimal_p.h ../xmlpatterns/data/qderivedinteger_p.h ../xmlpatterns/data/qderivedstring_p.h ../xmlpatterns/data/qduration_p.h ../xmlpatterns/data/qgday_p.h ../xmlpatterns/data/qgmonth_p.h ../xmlpatterns/data/qgmonthday_p.h ../xmlpatterns/data/qgyear_p.h ../xmlpatterns/data/qgyearmonth_p.h ../xmlpatterns/data/qhexbinary_p.h ../xmlpatterns/data/qinteger_p.h ../xmlpatterns/data/qitem_p.h ../xmlpatterns/data/qnodebuilder_p.h ../xmlpatterns/data/qqnamevalue_p.h ../xmlpatterns/data/qresourceloader_p.h ../xmlpatterns/data/qschemadatetime_p.h ../xmlpatterns/data/qschemanumeric_p.h ../xmlpatterns/data/qschematime_p.h ../xmlpatterns/data/qsequencereceiver_p.h ../xmlpatterns/data/qsorttuple_p.h ../xmlpatterns/data/quntypedatomic_p.h ../xmlpatterns/data/qvalidationerror_p.h ../xmlpatterns/data/qvaluefactory_p.h ../xmlpatterns/data/qyearmonthduration_p.h ../xmlpatterns/functions/qabstractfunctionfactory_p.h ../xmlpatterns/functions/qaccessorfns_p.h ../xmlpatterns/functions/qaggregatefns_p.h ../xmlpatterns/functions/qaggregator_p.h ../xmlpatterns/functions/qassemblestringfns_p.h ../xmlpatterns/functions/qbooleanfns_p.h ../xmlpatterns/functions/qcomparescaseaware_p.h ../xmlpatterns/functions/qcomparestringfns_p.h ../xmlpatterns/functions/qcomparingaggregator_p.h ../xmlpatterns/functions/qconstructorfunctionsfactory_p.h ../xmlpatterns/functions/qcontextfns_p.h ../xmlpatterns/functions/qcontextnodechecker_p.h ../xmlpatterns/functions/qcurrentfn_p.h ../xmlpatterns/functions/qdatetimefn_p.h ../xmlpatterns/functions/qdatetimefns_p.h ../xmlpatterns/functions/qdeepequalfn_p.h ../xmlpatterns/functions/qdocumentfn_p.h ../xmlpatterns/functions/qelementavailablefn_p.h ../xmlpatterns/functions/qerrorfn_p.h ../xmlpatterns/functions/qfunctionargument_p.h ../xmlpatterns/functions/qfunctionavailablefn_p.h ../xmlpatterns/functions/qfunctioncall_p.h ../xmlpatterns/functions/qfunctionfactory_p.h ../xmlpatterns/functions/qfunctionfactorycollection_p.h ../xmlpatterns/functions/qfunctionsignature_p.h ../xmlpatterns/functions/qgenerateidfn_p.h ../xmlpatterns/functions/qnodefns_p.h ../xmlpatterns/functions/qnumericfns_p.h ../xmlpatterns/functions/qpatternmatchingfns_p.h ../xmlpatterns/functions/qpatternplatform_p.h ../xmlpatterns/functions/qqnamefns_p.h ../xmlpatterns/functions/qresolveurifn_p.h ../xmlpatterns/functions/qsequencefns_p.h ../xmlpatterns/functions/qsequencegeneratingfns_p.h ../xmlpatterns/functions/qstaticbaseuricontainer_p.h ../xmlpatterns/functions/qstaticnamespacescontainer_p.h ../xmlpatterns/functions/qstringvaluefns_p.h ../xmlpatterns/functions/qsubstringfns_p.h ../xmlpatterns/functions/qsystempropertyfn_p.h ../xmlpatterns/functions/qtimezonefns_p.h ../xmlpatterns/functions/qtracefn_p.h ../xmlpatterns/functions/qtypeavailablefn_p.h ../xmlpatterns/functions/qunparsedentitypublicidfn_p.h ../xmlpatterns/functions/qunparsedentityurifn_p.h ../xmlpatterns/functions/qunparsedtextavailablefn_p.h ../xmlpatterns/functions/qunparsedtextfn_p.h ../xmlpatterns/functions/qxpath10corefunctions_p.h ../xmlpatterns/functions/qxpath20corefunctions_p.h ../xmlpatterns/functions/qxslt20corefunctions_p.h ../xmlpatterns/api/qabstractxmlforwarditerator_p.h ../xmlpatterns/api/qabstractxmlnodemodel_p.h ../xmlpatterns/api/qabstractxmlpullprovider_p.h ../xmlpatterns/api/qabstractxmlreceiver_p.h ../xmlpatterns/api/qcoloringmessagehandler_p.h ../xmlpatterns/api/qcoloroutput_p.h ../xmlpatterns/api/qdeviceresourceloader_p.h ../xmlpatterns/api/qiodevicedelegate_p.h ../xmlpatterns/api/qnetworkaccessdelegator_p.h ../xmlpatterns/api/qpullbridge_p.h ../xmlpatterns/api/qreferencecountedvalue_p.h ../xmlpatterns/api/qresourcedelegator_p.h ../xmlpatterns/api/quriloader_p.h ../xmlpatterns/api/qvariableloader_p.h ../xmlpatterns/api/qxmlpatternistcli_p.h ../xmlpatterns/api/qxmlquery_p.h ../xmlpatterns/api/qxmlresultitems_p.h ../xmlpatterns/api/qxmlschema_p.h ../xmlpatterns/api/qxmlschemavalidator_p.h ../xmlpatterns/api/qxmlserializer_p.h ../xmlpatterns/acceltree/qacceliterators_p.h ../xmlpatterns/acceltree/qacceltree_p.h ../xmlpatterns/acceltree/qacceltreebuilder_p.h ../xmlpatterns/acceltree/qacceltreeresourceloader_p.h ../xmlpatterns/acceltree/qcompressedwhitespace_p.h ../xmlpatterns/environment/qcurrentitemcontext_p.h ../xmlpatterns/environment/qdelegatingdynamiccontext_p.h ../xmlpatterns/environment/qdelegatingstaticcontext_p.h ../xmlpatterns/environment/qdynamiccontext_p.h ../xmlpatterns/environment/qfocus_p.h ../xmlpatterns/environment/qgenericdynamiccontext_p.h ../xmlpatterns/environment/qgenericstaticcontext_p.h ../xmlpatterns/environment/qreceiverdynamiccontext_p.h ../xmlpatterns/environment/qreportcontext_p.h ../xmlpatterns/environment/qstackcontextbase_p.h ../xmlpatterns/environment/qstaticbaseuricontext_p.h ../xmlpatterns/environment/qstaticcompatibilitycontext_p.h ../xmlpatterns/environment/qstaticcontext_p.h ../xmlpatterns/environment/qstaticcurrentcontext_p.h ../xmlpatterns/environment/qstaticfocuscontext_p.h ../xmlpatterns/environment/qstaticnamespacecontext_p.h 
Index: qt4-x11-4.6.2/include/phonon/AudioDataOutput
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/AudioDataOutput	2010-04-13 18:06:58.257853936 -0400
@@ -0,0 +1 @@
+#include "audiodataoutput.h"
Index: qt4-x11-4.6.2/include/phonon/AudioDataOutputInterface
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/AudioDataOutputInterface	2010-04-13 18:06:58.257853936 -0400
@@ -0,0 +1 @@
+#include "audiodataoutputinterface.h"
Index: qt4-x11-4.6.2/include/phonon/GlobalConfig
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/GlobalConfig	2010-04-13 18:06:58.257853936 -0400
@@ -0,0 +1 @@
+#include "globalconfig.h"
Index: qt4-x11-4.6.2/include/phonon/PulseSupport
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/PulseSupport	2010-04-13 18:06:58.257853936 -0400
@@ -0,0 +1 @@
+#include "pulsesupport.h"
Index: qt4-x11-4.6.2/include/phonon/VideoWidgetInterface44
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/VideoWidgetInterface44	2010-04-13 18:06:58.257853936 -0400
@@ -0,0 +1 @@
+#include "videowidgetinterface.h"
Index: qt4-x11-4.6.2/include/phonon/VideoWidgetInterfaceLatest
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/VideoWidgetInterfaceLatest	2010-04-13 18:06:58.257853936 -0400
@@ -0,0 +1 @@
+#include "videowidgetinterface.h"
Index: qt4-x11-4.6.2/include/phonon/audiodataoutput.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/audiodataoutput.h	2010-04-13 18:06:58.257853936 -0400
@@ -0,0 +1 @@
+#include "../../src/phonon/../3rdparty/phonon/phonon/audiodataoutput.h"
Index: qt4-x11-4.6.2/include/phonon/audiodataoutputinterface.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/audiodataoutputinterface.h	2010-04-13 18:06:58.257853936 -0400
@@ -0,0 +1 @@
+#include "../../src/phonon/../3rdparty/phonon/phonon/audiodataoutputinterface.h"
Index: qt4-x11-4.6.2/include/phonon/globalconfig.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/globalconfig.h	2010-04-13 18:06:58.257853936 -0400
@@ -0,0 +1 @@
+#include "../../src/phonon/../3rdparty/phonon/phonon/globalconfig.h"
Index: qt4-x11-4.6.2/include/phonon/headers.pri
===================================================================
--- qt4-x11-4.6.2.orig/include/phonon/headers.pri	2010-02-11 10:55:14.000000000 -0500
+++ qt4-x11-4.6.2/include/phonon/headers.pri	2010-04-13 18:06:58.261869530 -0400
@@ -1,3 +1,3 @@
-SYNCQT.HEADER_FILES = ../phonon/../3rdparty/phonon/phonon/abstractaudiooutput.h ../phonon/../3rdparty/phonon/phonon/abstractmediastream.h ../phonon/../3rdparty/phonon/phonon/abstractvideooutput.h ../phonon/../3rdparty/phonon/phonon/addoninterface.h ../phonon/../3rdparty/phonon/phonon/audiooutput.h ../phonon/../3rdparty/phonon/phonon/audiooutputinterface.h ../phonon/../3rdparty/phonon/phonon/backendcapabilities.h ../phonon/../3rdparty/phonon/phonon/backendinterface.h ../phonon/../3rdparty/phonon/phonon/effect.h ../phonon/../3rdparty/phonon/phonon/effectinterface.h ../phonon/../3rdparty/phonon/phonon/effectparameter.h ../phonon/../3rdparty/phonon/phonon/effectwidget.h ../phonon/../3rdparty/phonon/phonon/mediacontroller.h ../phonon/../3rdparty/phonon/phonon/medianode.h ../phonon/../3rdparty/phonon/phonon/mediaobject.h ../phonon/../3rdparty/phonon/phonon/mediaobjectinterface.h ../phonon/../3rdparty/phonon/phonon/mediasource.h ../phonon/../3rdparty/phonon/phonon/objectdescription.h ../phonon/../3rdparty/phonon/phonon/objectdescriptionmodel.h ../phonon/../3rdparty/phonon/phonon/path.h ../phonon/../3rdparty/phonon/phonon/phonon_export.h ../phonon/../3rdparty/phonon/phonon/phonondefs.h ../phonon/../3rdparty/phonon/phonon/phononnamespace.h ../phonon/../3rdparty/phonon/phonon/platformplugin.h ../phonon/../3rdparty/phonon/phonon/seekslider.h ../phonon/../3rdparty/phonon/phonon/streaminterface.h ../phonon/../3rdparty/phonon/phonon/videoplayer.h ../phonon/../3rdparty/phonon/phonon/videowidget.h ../phonon/../3rdparty/phonon/phonon/videowidgetinterface.h ../phonon/../3rdparty/phonon/phonon/volumefadereffect.h ../phonon/../3rdparty/phonon/phonon/volumefaderinterface.h ../phonon/../3rdparty/phonon/phonon/volumeslider.h ../../include/phonon/phonon ../../include/phonon_compat/Phonon/Phonon 
-SYNCQT.HEADER_CLASSES = ../../include/phonon/AbstractAudioOutput ../../include/phonon/AbstractMediaStream ../../include/phonon/AbstractVideoOutput ../../include/phonon/AddonInterface ../../include/phonon/AudioOutput ../../include/phonon/AudioOutputInterface40 ../../include/phonon/AudioOutputInterface42 ../../include/phonon/AudioOutputInterface ../../include/phonon/BackendCapabilities ../../include/phonon/BackendInterface ../../include/phonon/Effect ../../include/phonon/EffectInterface ../../include/phonon/EffectParameter ../../include/phonon/EffectWidget ../../include/phonon/MediaController ../../include/phonon/MediaNode ../../include/phonon/MediaObject ../../include/phonon/MediaObjectInterface ../../include/phonon/MediaSource ../../include/phonon/ObjectDescriptionData ../../include/phonon/ObjectDescription ../../include/phonon/AudioOutputDevice ../../include/phonon/AudioCaptureDevice ../../include/phonon/EffectDescription ../../include/phonon/AudioChannelDescription ../../include/phonon/SubtitleDescription ../../include/phonon/ObjectDescriptionModelData ../../include/phonon/ObjectDescriptionModel ../../include/phonon/AudioOutputDeviceModel ../../include/phonon/AudioCaptureDeviceModel ../../include/phonon/EffectDescriptionModel ../../include/phonon/AudioChannelDescriptionModel ../../include/phonon/SubtitleDescriptionModel ../../include/phonon/Path ../../include/phonon/Global ../../include/phonon/PlatformPlugin ../../include/phonon/SeekSlider ../../include/phonon/StreamInterface ../../include/phonon/VideoPlayer ../../include/phonon/VideoWidget ../../include/phonon/VideoWidgetInterface ../../include/phonon/VolumeFaderEffect ../../include/phonon/VolumeFaderInterface ../../include/phonon/VolumeSlider 
-SYNCQT.PRIVATE_HEADER_FILES = ../phonon/../3rdparty/phonon/phonon/abstractaudiooutput_p.h ../phonon/../3rdparty/phonon/phonon/abstractmediastream_p.h ../phonon/../3rdparty/phonon/phonon/abstractvideooutput_p.h ../phonon/../3rdparty/phonon/phonon/audiooutput_p.h ../phonon/../3rdparty/phonon/phonon/audiooutputadaptor_p.h ../phonon/../3rdparty/phonon/phonon/backendcapabilities_p.h ../phonon/../3rdparty/phonon/phonon/effect_p.h ../phonon/../3rdparty/phonon/phonon/effectparameter_p.h ../phonon/../3rdparty/phonon/phonon/effectwidget_p.h ../phonon/../3rdparty/phonon/phonon/factory_p.h ../phonon/../3rdparty/phonon/phonon/frontendinterface_p.h ../phonon/../3rdparty/phonon/phonon/globalconfig_p.h ../phonon/../3rdparty/phonon/phonon/globalstatic_p.h ../phonon/../3rdparty/phonon/phonon/iodevicestream_p.h ../phonon/../3rdparty/phonon/phonon/medianode_p.h ../phonon/../3rdparty/phonon/phonon/medianodedestructionhandler_p.h ../phonon/../3rdparty/phonon/phonon/mediaobject_p.h ../phonon/../3rdparty/phonon/phonon/mediasource_p.h ../phonon/../3rdparty/phonon/phonon/objectdescription_p.h ../phonon/../3rdparty/phonon/phonon/objectdescriptionmodel_p.h ../phonon/../3rdparty/phonon/phonon/path_p.h ../phonon/../3rdparty/phonon/phonon/phonondefs_p.h ../phonon/../3rdparty/phonon/phonon/phononnamespace_p.h ../phonon/../3rdparty/phonon/phonon/platform_p.h ../phonon/../3rdparty/phonon/phonon/qsettingsgroup_p.h ../phonon/../3rdparty/phonon/phonon/seekslider_p.h ../phonon/../3rdparty/phonon/phonon/streaminterface_p.h ../phonon/../3rdparty/phonon/phonon/videowidget_p.h ../phonon/../3rdparty/phonon/phonon/volumefadereffect_p.h ../phonon/../3rdparty/phonon/phonon/volumeslider_p.h 
+SYNCQT.HEADER_FILES = ../phonon/../3rdparty/phonon/phonon/abstractaudiooutput.h ../phonon/../3rdparty/phonon/phonon/abstractmediastream.h ../phonon/../3rdparty/phonon/phonon/abstractvideooutput.h ../phonon/../3rdparty/phonon/phonon/addoninterface.h ../phonon/../3rdparty/phonon/phonon/audiodataoutput.h ../phonon/../3rdparty/phonon/phonon/audiodataoutputinterface.h ../phonon/../3rdparty/phonon/phonon/audiooutput.h ../phonon/../3rdparty/phonon/phonon/audiooutputinterface.h ../phonon/../3rdparty/phonon/phonon/backendcapabilities.h ../phonon/../3rdparty/phonon/phonon/backendinterface.h ../phonon/../3rdparty/phonon/phonon/effect.h ../phonon/../3rdparty/phonon/phonon/effectinterface.h ../phonon/../3rdparty/phonon/phonon/effectparameter.h ../phonon/../3rdparty/phonon/phonon/effectwidget.h ../phonon/../3rdparty/phonon/phonon/globalconfig.h ../phonon/../3rdparty/phonon/phonon/mediacontroller.h ../phonon/../3rdparty/phonon/phonon/medianode.h ../phonon/../3rdparty/phonon/phonon/mediaobject.h ../phonon/../3rdparty/phonon/phonon/mediaobjectinterface.h ../phonon/../3rdparty/phonon/phonon/mediasource.h ../phonon/../3rdparty/phonon/phonon/objectdescription.h ../phonon/../3rdparty/phonon/phonon/objectdescriptionmodel.h ../phonon/../3rdparty/phonon/phonon/path.h ../phonon/../3rdparty/phonon/phonon/phonon_export.h ../phonon/../3rdparty/phonon/phonon/phonondefs.h ../phonon/../3rdparty/phonon/phonon/phononnamespace.h ../phonon/../3rdparty/phonon/phonon/platformplugin.h ../phonon/../3rdparty/phonon/phonon/pulsesupport.h ../phonon/../3rdparty/phonon/phonon/seekslider.h ../phonon/../3rdparty/phonon/phonon/streaminterface.h ../phonon/../3rdparty/phonon/phonon/videoplayer.h ../phonon/../3rdparty/phonon/phonon/videowidget.h ../phonon/../3rdparty/phonon/phonon/videowidgetinterface.h ../phonon/../3rdparty/phonon/phonon/volumefadereffect.h ../phonon/../3rdparty/phonon/phonon/volumefaderinterface.h ../phonon/../3rdparty/phonon/phonon/volumeslider.h ../../include/phonon/phonon ../../include/phonon_compat/Phonon/Phonon 
+SYNCQT.HEADER_CLASSES = ../../include/phonon/AbstractAudioOutput ../../include/phonon/AbstractMediaStream ../../include/phonon/AbstractVideoOutput ../../include/phonon/AddonInterface ../../include/phonon/AudioDataOutput ../../include/phonon/AudioDataOutputInterface ../../include/phonon/AudioOutput ../../include/phonon/AudioOutputInterface40 ../../include/phonon/AudioOutputInterface42 ../../include/phonon/AudioOutputInterface ../../include/phonon/BackendCapabilities ../../include/phonon/BackendInterface ../../include/phonon/Effect ../../include/phonon/EffectInterface ../../include/phonon/EffectParameter ../../include/phonon/EffectWidget ../../include/phonon/GlobalConfig ../../include/phonon/MediaController ../../include/phonon/MediaNode ../../include/phonon/MediaObject ../../include/phonon/MediaObjectInterface ../../include/phonon/MediaSource ../../include/phonon/ObjectDescriptionData ../../include/phonon/ObjectDescription ../../include/phonon/AudioOutputDevice ../../include/phonon/AudioCaptureDevice ../../include/phonon/EffectDescription ../../include/phonon/AudioChannelDescription ../../include/phonon/SubtitleDescription ../../include/phonon/ObjectDescriptionModelData ../../include/phonon/ObjectDescriptionModel ../../include/phonon/AudioOutputDeviceModel ../../include/phonon/AudioCaptureDeviceModel ../../include/phonon/EffectDescriptionModel ../../include/phonon/AudioChannelDescriptionModel ../../include/phonon/SubtitleDescriptionModel ../../include/phonon/Path ../../include/phonon/Global ../../include/phonon/PlatformPlugin ../../include/phonon/PulseSupport ../../include/phonon/SeekSlider ../../include/phonon/StreamInterface ../../include/phonon/VideoPlayer ../../include/phonon/VideoWidget ../../include/phonon/VideoWidgetInterface ../../include/phonon/VideoWidgetInterface44 ../../include/phonon/VideoWidgetInterfaceLatest ../../include/phonon/VolumeFaderEffect ../../include/phonon/VolumeFaderInterface ../../include/phonon/VolumeSlider 
+SYNCQT.PRIVATE_HEADER_FILES = ../phonon/../3rdparty/phonon/phonon/abstractaudiooutput_p.h ../phonon/../3rdparty/phonon/phonon/abstractmediastream_p.h ../phonon/../3rdparty/phonon/phonon/abstractvideooutput_p.h ../phonon/../3rdparty/phonon/phonon/audiodataoutput_p.h ../phonon/../3rdparty/phonon/phonon/audiooutput_p.h ../phonon/../3rdparty/phonon/phonon/audiooutputadaptor_p.h ../phonon/../3rdparty/phonon/phonon/backendcapabilities_p.h ../phonon/../3rdparty/phonon/phonon/effect_p.h ../phonon/../3rdparty/phonon/phonon/effectparameter_p.h ../phonon/../3rdparty/phonon/phonon/effectwidget_p.h ../phonon/../3rdparty/phonon/phonon/factory_p.h ../phonon/../3rdparty/phonon/phonon/frontendinterface_p.h ../phonon/../3rdparty/phonon/phonon/globalconfig_p.h ../phonon/../3rdparty/phonon/phonon/globalstatic_p.h ../phonon/../3rdparty/phonon/phonon/iodevicestream_p.h ../phonon/../3rdparty/phonon/phonon/medianode_p.h ../phonon/../3rdparty/phonon/phonon/medianodedestructionhandler_p.h ../phonon/../3rdparty/phonon/phonon/mediaobject_p.h ../phonon/../3rdparty/phonon/phonon/mediasource_p.h ../phonon/../3rdparty/phonon/phonon/objectdescription_p.h ../phonon/../3rdparty/phonon/phonon/objectdescriptionmodel_p.h ../phonon/../3rdparty/phonon/phonon/path_p.h ../phonon/../3rdparty/phonon/phonon/phonondefs_p.h ../phonon/../3rdparty/phonon/phonon/phononnamespace_p.h ../phonon/../3rdparty/phonon/phonon/platform_p.h ../phonon/../3rdparty/phonon/phonon/qsettingsgroup_p.h ../phonon/../3rdparty/phonon/phonon/seekslider_p.h ../phonon/../3rdparty/phonon/phonon/streaminterface_p.h ../phonon/../3rdparty/phonon/phonon/swiftslider_p.h ../phonon/../3rdparty/phonon/phonon/videowidget_p.h ../phonon/../3rdparty/phonon/phonon/volumefadereffect_p.h ../phonon/../3rdparty/phonon/phonon/volumeslider_p.h 
Index: qt4-x11-4.6.2/include/phonon/phonon
===================================================================
--- qt4-x11-4.6.2.orig/include/phonon/phonon	2010-02-11 10:55:14.000000000 -0500
+++ qt4-x11-4.6.2/include/phonon/phonon	2010-04-13 18:06:58.261869530 -0400
@@ -4,6 +4,8 @@
 #include "abstractmediastream.h"
 #include "abstractvideooutput.h"
 #include "addoninterface.h"
+#include "audiodataoutput.h"
+#include "audiodataoutputinterface.h"
 #include "audiooutput.h"
 #include "audiooutputinterface.h"
 #include "backendcapabilities.h"
@@ -12,6 +14,7 @@
 #include "effectinterface.h"
 #include "effectparameter.h"
 #include "effectwidget.h"
+#include "globalconfig.h"
 #include "mediacontroller.h"
 #include "medianode.h"
 #include "mediaobject.h"
@@ -23,6 +26,7 @@
 #include "phonondefs.h"
 #include "phononnamespace.h"
 #include "platformplugin.h"
+#include "pulsesupport.h"
 #include "seekslider.h"
 #include "streaminterface.h"
 #include "videoplayer.h"
Index: qt4-x11-4.6.2/include/phonon/private/audiodataoutput_p.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/private/audiodataoutput_p.h	2010-04-13 18:06:58.261869530 -0400
@@ -0,0 +1 @@
+#include "../../../src/phonon/../3rdparty/phonon/phonon/audiodataoutput_p.h"
Index: qt4-x11-4.6.2/include/phonon/private/swiftslider_p.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/private/swiftslider_p.h	2010-04-13 18:06:58.261869530 -0400
@@ -0,0 +1 @@
+#include "../../../src/phonon/../3rdparty/phonon/phonon/swiftslider_p.h"
Index: qt4-x11-4.6.2/include/phonon/pulsesupport.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon/pulsesupport.h	2010-04-13 18:06:58.261869530 -0400
@@ -0,0 +1 @@
+#include "../../src/phonon/../3rdparty/phonon/phonon/pulsesupport.h"
Index: qt4-x11-4.6.2/include/phonon_compat/Phonon/AudioDataOutput
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon_compat/Phonon/AudioDataOutput	2010-04-13 18:06:58.261869530 -0400
@@ -0,0 +1 @@
+#include "../../phonon/audiodataoutput.h"
Index: qt4-x11-4.6.2/include/phonon_compat/Phonon/AudioDataOutputInterface
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon_compat/Phonon/AudioDataOutputInterface	2010-04-13 18:06:58.261869530 -0400
@@ -0,0 +1 @@
+#include "../../phonon/audiodataoutputinterface.h"
Index: qt4-x11-4.6.2/include/phonon_compat/Phonon/GlobalConfig
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon_compat/Phonon/GlobalConfig	2010-04-13 18:06:58.265853485 -0400
@@ -0,0 +1 @@
+#include "../../phonon/globalconfig.h"
Index: qt4-x11-4.6.2/include/phonon_compat/Phonon/Phonon
===================================================================
--- qt4-x11-4.6.2.orig/include/phonon_compat/Phonon/Phonon	2010-02-11 10:55:15.000000000 -0500
+++ qt4-x11-4.6.2/include/phonon_compat/Phonon/Phonon	2010-04-13 18:06:58.265853485 -0400
@@ -4,6 +4,8 @@
 #include "abstractmediastream.h"
 #include "abstractvideooutput.h"
 #include "addoninterface.h"
+#include "audiodataoutput.h"
+#include "audiodataoutputinterface.h"
 #include "audiooutput.h"
 #include "audiooutputinterface.h"
 #include "backendcapabilities.h"
@@ -12,6 +14,7 @@
 #include "effectinterface.h"
 #include "effectparameter.h"
 #include "effectwidget.h"
+#include "globalconfig.h"
 #include "mediacontroller.h"
 #include "medianode.h"
 #include "mediaobject.h"
@@ -23,6 +26,7 @@
 #include "phonondefs.h"
 #include "phononnamespace.h"
 #include "platformplugin.h"
+#include "pulsesupport.h"
 #include "seekslider.h"
 #include "streaminterface.h"
 #include "videoplayer.h"
Index: qt4-x11-4.6.2/include/phonon_compat/Phonon/PulseSupport
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon_compat/Phonon/PulseSupport	2010-04-13 18:06:58.265853485 -0400
@@ -0,0 +1 @@
+#include "../../phonon/pulsesupport.h"
Index: qt4-x11-4.6.2/include/phonon_compat/Phonon/VideoWidgetInterface44
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon_compat/Phonon/VideoWidgetInterface44	2010-04-13 18:06:58.265853485 -0400
@@ -0,0 +1 @@
+#include "../../phonon/videowidgetinterface.h"
Index: qt4-x11-4.6.2/include/phonon_compat/Phonon/VideoWidgetInterfaceLatest
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/include/phonon_compat/Phonon/VideoWidgetInterfaceLatest	2010-04-13 18:06:58.265853485 -0400
@@ -0,0 +1 @@
+#include "../../phonon/videowidgetinterface.h"
Index: qt4-x11-4.6.2/src/3rdparty/phonon/CMakeLists.txt
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/CMakeLists.txt	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/CMakeLists.txt	2010-04-13 18:06:58.265853485 -0400
@@ -149,7 +149,7 @@
 
 set(PHONON_LIB_MAJOR_VERSION "4")
 set(PHONON_LIB_MINOR_VERSION "3")
-set(PHONON_LIB_PATCH_VERSION "50")
+set(PHONON_LIB_PATCH_VERSION "80")
 set(PHONON_LIB_VERSION "${PHONON_LIB_MAJOR_VERSION}.4.0")
 set(PHONON_LIB_SOVERSION ${PHONON_LIB_MAJOR_VERSION})
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/abstractvideorenderer.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/abstractvideorenderer.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/abstractvideorenderer.cpp	2010-04-13 18:06:58.265853485 -0400
@@ -99,8 +99,8 @@
             m_dstX = m_dstY = 0;
 
             if (ratio > 0) {
-                if ((realWidth / realHeight > ratio && scaleMode == Phonon::VideoWidget::FitInView)
-                    || (realWidth / realHeight < ratio && scaleMode == Phonon::VideoWidget::ScaleAndCrop)) {
+                if (realWidth / realHeight > ratio && scaleMode == Phonon::VideoWidget::FitInView
+                    || realWidth / realHeight < ratio && scaleMode == Phonon::VideoWidget::ScaleAndCrop) {
                         //the height is correct, let's change the width
                         m_dstWidth = qRound(realHeight * ratio);
                         m_dstX = qRound((realWidth - realHeight * ratio) / 2.);
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/backend.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/backend.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/backend.cpp	2010-04-13 18:06:58.269853783 -0400
@@ -41,8 +41,6 @@
 {
     namespace DS9
     {
-        QMutex *Backend::directShowMutex = 0;
-
         bool Backend::AudioMoniker::operator==(const AudioMoniker &other)
         {
             return other->IsEqual(*this) == S_OK;
@@ -52,8 +50,6 @@
         Backend::Backend(QObject *parent, const QVariantList &)
             : QObject(parent)
         {
-            directShowMutex = &m_directShowMutex;
-
             ::CoInitialize(0);
 
             //registering meta types
@@ -66,8 +62,6 @@
             m_audioOutputs.clear();
             m_audioEffects.clear();
             ::CoUninitialize();
-
-            directShowMutex = 0;
         }
 
         QObject *Backend::createObject(BackendInterface::Class c, QObject *parent, const QList<QVariant> &args)
@@ -137,7 +131,6 @@
 
         QList<int> Backend::objectDescriptionIndexes(Phonon::ObjectDescriptionType type) const
         {
-            QMutexLocker locker(&m_directShowMutex);
             QList<int> ret;
 
             switch(type)
@@ -164,7 +157,7 @@
                     while (S_OK == enumMon->Next(1, mon.pparam(), 0)) {
                         LPOLESTR str = 0;
                         mon->GetDisplayName(0,0,&str);
-                        const QString name = QString::fromWCharArray(str);
+                        const QString name = QString::fromUtf16((unsigned short*)str);
 						ComPointer<IMalloc> alloc;
 						::CoGetMalloc(1, alloc.pparam());
                         alloc->Free(str);
@@ -211,7 +204,6 @@
 
         QHash<QByteArray, QVariant> Backend::objectDescriptionProperties(Phonon::ObjectDescriptionType type, int index) const
         {
-            QMutexLocker locker(&m_directShowMutex);
             QHash<QByteArray, QVariant> ret;
             switch (type)
             {
@@ -224,7 +216,7 @@
                     LPOLESTR str = 0;
                     HRESULT hr = mon->GetDisplayName(0,0, &str);
                     if (SUCCEEDED(hr)) {
-                        QString name = QString::fromWCharArray(str);
+                        QString name = QString::fromUtf16((unsigned short*)str);
 						ComPointer<IMalloc> alloc;
 						::CoGetMalloc(1, alloc.pparam());
                         alloc->Free(str);
@@ -239,7 +231,7 @@
                     WCHAR name[80]; // 80 is clearly stated in the MSDN doc
                     HRESULT hr = ::DMOGetName(m_audioEffects[index], name);
                     if (SUCCEEDED(hr)) {
-                        ret["name"] = QString::fromWCharArray(name);
+                        ret["name"] = QString::fromUtf16((unsigned short*)name);
                     }
                 }
                 break;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/backend.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/backend.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/backend.h	2010-04-13 18:06:58.269853783 -0400
@@ -23,7 +23,6 @@
 #include <phonon/phononnamespace.h>
 
 #include <QtCore/QList>
-#include <QtCore/QMutex>
 
 #include "compointer.h"
 #include "backendnode.h"
@@ -64,8 +63,6 @@
 
             Filter getAudioOutputFilter(int index) const;
 
-            static QMutex *directShowMutex;
-
         Q_SIGNALS:
             void objectDescriptionChanged(ObjectDescriptionType);
 
@@ -77,7 +74,6 @@
             };
             mutable QVector<AudioMoniker> m_audioOutputs;
             mutable QVector<CLSID> m_audioEffects;
-            mutable QMutex m_directShowMutex;
         };
     }
 }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/backendnode.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/backendnode.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/backendnode.cpp	2010-04-13 18:06:58.269853783 -0400
@@ -57,25 +57,6 @@
 
         BackendNode::~BackendNode()
         {
-            //this will remove the filter from the graph
-            FILTER_INFO info;
-            for(int i = 0; i < FILTER_COUNT; ++i) {
-                const Filter &filter = m_filters[i];
-                if (!filter)
-                    continue;
-                filter->QueryFilterInfo(&info);
-                if (info.pGraph) {
-                    HRESULT hr = info.pGraph->RemoveFilter(filter);
-
-                    if (hr == VFW_E_NOT_STOPPED && m_mediaObject) {
-                        m_mediaObject->ensureStopped();
-
-                        hr = info.pGraph->RemoveFilter(filter);
-                    }
-                    Q_ASSERT(SUCCEEDED(hr));
-                    info.pGraph->Release();
-                }
-            }
         }
 
         void BackendNode::setMediaObject(MediaObject *mo)
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/ds9.desktop
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/ds9.desktop	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/ds9.desktop	2010-04-13 18:06:58.269853783 -0400
@@ -5,12 +5,13 @@
 X-KDE-Library=phonon_ds9
 X-KDE-PhononBackendInfo-InterfaceVersion=1
 X-KDE-PhononBackendInfo-Version=0.1
-X-KDE-PhononBackendInfo-Website=http://qt.nokia.com/
+X-KDE-PhononBackendInfo-Website=http://www.trolltech.com/
 InitialPreference=15
 
 Name=DirectShow9
 Name[bg]=DirectShow9
 Name[ca]=DirectShow9
+Name[ca@valencia]=DirectShow9
 Name[cs]=DirectShow9
 Name[da]=DirectShow9
 Name[de]=DirectShow9
@@ -19,11 +20,14 @@
 Name[es]=DirectShow9
 Name[et]=DirectShow9
 Name[eu]=DirectShow9
+Name[fi]=DirectShow9
 Name[fr]=DirectShow9
 Name[ga]=DirectShow9
 Name[gl]=DirectShow9
+Name[hr]=DirectShow9
 Name[hsb]=DirectShow9
 Name[hu]=DirectShow9
+Name[id]=DirectShow9
 Name[is]=DirectShow9
 Name[it]=DirectShow9
 Name[ja]=DirectShow9
@@ -31,6 +35,7 @@
 Name[ku]=DirectShow9
 Name[lt]=DirectShow9
 Name[lv]=DirectShow9
+Name[nb]=DirectShow9
 Name[nds]=DirectShow9
 Name[nl]=DirectShow9
 Name[nn]=DirectShow9
@@ -38,10 +43,13 @@
 Name[pl]=DirectShow9
 Name[pt]=DirectShow9
 Name[pt_BR]=DirectShow9
+Name[ru]=DirectShow9
 Name[se]=DirectShow9
 Name[sk]=DirectShow 9
 Name[sl]=DirectShow 9
 Name[sr]=Директшоу‑9
+Name[sr@ijekavian]=Директшоу‑9
+Name[sr@ijekavianlatin]=DirectShow‑9
 Name[sr@latin]=DirectShow‑9
 Name[sv]=Directshow 9
 Name[tr]=DirectShow9
@@ -53,6 +61,7 @@
 Comment=Phonon DirectShow9 backend
 Comment[bg]=Phonon DirectShow9
 Comment[ca]=Dorsal DirectShow9 del Phonon
+Comment[ca@valencia]=Dorsal DirectShow9 del Phonon
 Comment[cs]=Phonon DirectShow9 backend
 Comment[da]=DirectShow9-backend til Phonon
 Comment[de]=Phonon-Treiber für DirectShow9
@@ -61,11 +70,13 @@
 Comment[es]=Motor DirectShow9 para Phonon
 Comment[et]=Phononi DirectShow9 taustaprogramm
 Comment[eu]=Phonon DirectShow9 backend
+Comment[fi]=Phonon DirectShow9-taustaohjelma
 Comment[fr]=Système de gestion DirectShow9 pour Phonon 
 Comment[ga]=Inneall DirectShow9 le haghaidh Phonon
 Comment[gl]=Infraestrutura de DirectShow9 para Phonon
 Comment[hsb]=Phonon DirectShow9 backend
 Comment[hu]=Phonon DirectShow9 modul
+Comment[id]=Phonon DirectShow9 backend
 Comment[is]=Phonon DirectShow9 bakendi
 Comment[it]=Motore DirectShow9 di Phonon
 Comment[ja]=Phonon DirectShow9 バックエンド
@@ -73,6 +84,7 @@
 Comment[ku]=Binesaza Phonon DirectShow9
 Comment[lt]=Phonon DirectShow9 galinė sąsaja
 Comment[lv]=Phonon DirectShow9 aizmugure
+Comment[nb]=Phonon-motor for DirectShow9
 Comment[nds]=Phonon-Hülpprogrmm DirectShow9
 Comment[nl]=DirectShow9-backend (Phonon)
 Comment[nn]=Phonon-motor for DirectShow9
@@ -80,10 +92,13 @@
 Comment[pl]=Obsługa DirectShow9 przez Phonon
 Comment[pt]=Infra-estrutura do DirectShow9 para o Phonon
 Comment[pt_BR]=Infraestrutura Phonon DirectShow9
+Comment[ru]=Механизм DirectShow9 для Phonon
 Comment[se]=Phonon DirectShow9 duogášmohtor
 Comment[sk]=Phonon DirectShow 9 podsystém
 Comment[sl]=Phononova Hrbtenica DirectShow 9
 Comment[sr]=Директшоу‑9 као позадина Фонона
+Comment[sr@ijekavian]=Директшоу‑9 као позадина Фонона
+Comment[sr@ijekavianlatin]=DirectShow‑9 kao pozadina Phonona
 Comment[sr@latin]=DirectShow‑9 kao pozadina Phonona
 Comment[sv]=Phonon Directshow 9-gränssnitt
 Comment[tr]=Phonon DirectShow9 arka ucu
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/effect.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/effect.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/effect.cpp	2010-04-13 18:06:58.269853783 -0400
@@ -82,7 +82,7 @@
                         current += wcslen(current) + 1; //skip the name
                         current += wcslen(current) + 1; //skip the unit
                         for(; *current; current += wcslen(current) + 1) {
-                            values.append( QString::fromWCharArray(current) );
+                            values.append( QString::fromUtf16((unsigned short*)current) );
                         }
                     }
                     //FALLTHROUGH
@@ -107,7 +107,7 @@
                 Phonon::EffectParameter::Hints hint = info.mopCaps == MP_CAPS_CURVE_INVSQUARE ?
                     Phonon::EffectParameter::LogarithmicHint : Phonon::EffectParameter::Hints(0);
 
-                const QString n = QString::fromWCharArray(name);
+                const QString n = QString::fromUtf16((unsigned short*)name);
                 ret.append(Phonon::EffectParameter(i, n, hint, def, min, max, values));
                 ::CoTaskMemFree(name); //let's free the memory
             }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/fakesource.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/fakesource.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/fakesource.cpp	2010-04-13 18:06:58.269853783 -0400
@@ -29,10 +29,8 @@
     namespace DS9
     {
         static WAVEFORMATEX g_defaultWaveFormat = {WAVE_FORMAT_PCM, 2, 44100, 176400, 4, 16, 0};
-        static VIDEOINFOHEADER2 g_defaultVideoInfo = { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, 0, 0, 0, 0, 0, 0, 0, {0}, 0, {sizeof(BITMAPINFOHEADER), 1, 1, 1, 0, 0, 0, 0, 0, 0, 0} };
-
-        static const AM_MEDIA_TYPE g_fakeAudioType = {MEDIATYPE_Audio, MEDIASUBTYPE_PCM, 0, 0, 2, FORMAT_WaveFormatEx, 0, sizeof(WAVEFORMATEX), reinterpret_cast<BYTE*>(&g_defaultWaveFormat)};
-        static const AM_MEDIA_TYPE g_fakeVideoType = {MEDIATYPE_Video, MEDIASUBTYPE_RGB32, TRUE, FALSE, 0, FORMAT_VideoInfo2, 0, sizeof(VIDEOINFOHEADER2), reinterpret_cast<BYTE*>(&g_defaultVideoInfo)};
+        static BITMAPINFOHEADER g_defautBitmapHeader = { sizeof(BITMAPINFOHEADER), 1, 1, 1, 0, 0, 0, 0, 0, 0, 0};
+        static VIDEOINFOHEADER2 g_defaultVideoInfo = { { 0, 0, 0, 0 }, { 0, 0, 0, 0 }, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0};
 
         class FakePin : public QPin
         {
@@ -130,12 +128,36 @@
 
         void FakeSource::createFakeAudioPin()
         {
-            new FakePin(this, g_fakeAudioType);
+            AM_MEDIA_TYPE mt;
+            qMemSet(&mt, 0, sizeof(AM_MEDIA_TYPE));
+            mt.majortype = MEDIATYPE_Audio;
+            mt.subtype = MEDIASUBTYPE_PCM;
+            mt.formattype = FORMAT_WaveFormatEx;
+            mt.lSampleSize = 2;
+
+            //fake the format (stereo 44.1 khz stereo 16 bits)
+            mt.cbFormat = sizeof(WAVEFORMATEX);
+            mt.pbFormat = reinterpret_cast<BYTE*>(&g_defaultWaveFormat);
+
+            new FakePin(this, mt);
         }
 
         void FakeSource::createFakeVideoPin()
         {
-            new FakePin(this, g_fakeVideoType);
+            AM_MEDIA_TYPE mt;
+            qMemSet(&mt, 0, sizeof(AM_MEDIA_TYPE));
+            mt.majortype = MEDIATYPE_Video;
+            mt.subtype = MEDIASUBTYPE_RGB32;
+            mt.formattype = FORMAT_VideoInfo2;
+            mt.bFixedSizeSamples = 1;
+
+            g_defaultVideoInfo.bmiHeader = g_defautBitmapHeader;
+
+            //fake the format
+            mt.cbFormat = sizeof(VIDEOINFOHEADER2);
+            mt.pbFormat = reinterpret_cast<BYTE*>(&g_defaultVideoInfo);
+
+            new FakePin(this, mt);
         }
 
     }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/iodevicereader.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/iodevicereader.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/iodevicereader.cpp	2010-04-13 18:06:58.273853384 -0400
@@ -36,20 +36,18 @@
         //these mediatypes define a stream, its type will be autodetected by DirectShow
         static QVector<AM_MEDIA_TYPE> getMediaTypes()
         {
-            //the order here is important because otherwise,
-            //directshow might not be able to detect the stream type correctly
-
-            AM_MEDIA_TYPE mt = { MEDIATYPE_Stream, MEDIASUBTYPE_Avi, TRUE, FALSE, 1, GUID_NULL, 0, 0, 0};
+            AM_MEDIA_TYPE mt = { MEDIATYPE_Stream, MEDIASUBTYPE_NULL, TRUE, FALSE, 1, GUID_NULL, 0, 0, 0};
 
             QVector<AM_MEDIA_TYPE> ret;
+            //normal auto-detect stream
+            mt.subtype = MEDIASUBTYPE_NULL;
+            ret << mt;
             //AVI stream
+            mt.subtype = MEDIASUBTYPE_Avi;
             ret << mt;
             //WAVE stream
             mt.subtype = MEDIASUBTYPE_WAVE;
             ret << mt;
-            //normal auto-detect stream (must be at the end!)
-            mt.subtype = MEDIASUBTYPE_NULL;
-            ret << mt;
             return ret;
         }
 
@@ -66,6 +64,7 @@
               //for Phonon::StreamInterface
               void writeData(const QByteArray &data)
               {
+                  QWriteLocker locker(&m_lock);
                   m_pos += data.size();
                   m_buffer += data;
               }
@@ -76,22 +75,54 @@
 
               void setStreamSize(qint64 newSize)
               {
-                  QMutexLocker locker(&m_mutex);
+                  QWriteLocker locker(&m_lock);
                   m_size = newSize;
               }
 
+              qint64 streamSize() const
+              {
+                  QReadLocker locker(&m_lock);
+                  return m_size;
+              }
+
               void setStreamSeekable(bool s)
               {
-                  QMutexLocker locker(&m_mutex);
+                  QWriteLocker locker(&m_lock);
                   m_seekable = s;
               }
 
+              bool streamSeekable() const
+              {
+                  QReadLocker locker(&m_lock);
+                  return m_seekable;
+              }
+
+              void setCurrentPos(qint64 pos)
+              {
+                  QWriteLocker locker(&m_lock);
+                  m_pos = pos;
+                  seekStream(pos);
+                  m_buffer.clear();
+              }
+
+              qint64 currentPos() const
+              {
+                  QReadLocker locker(&m_lock);
+                  return m_pos;
+              }
+
+              int currentBufferSize() const
+              {
+                  QReadLocker locker(&m_lock);
+                  return m_buffer.size();
+              }
+
               //virtual pure members
 
               //implementation from IAsyncReader
               STDMETHODIMP Length(LONGLONG *total, LONGLONG *available)
               {
-                  QMutexLocker locker(&m_mutex);
+                  QReadLocker locker(&m_lock);
                   if (total) {
                       *total = m_size;
                   }
@@ -106,42 +137,44 @@
 
               HRESULT read(LONGLONG pos, LONG length, BYTE *buffer, LONG *actual)
               {
-                  Q_ASSERT(!m_mutex.tryLock());
+                  QMutexLocker locker(&m_mutexRead);
+
                   if (m_mediaGraph->isStopping()) {
                       return VFW_E_WRONG_STATE;
                   }
 
-                  if(m_size != 1 && pos + length > m_size) {
+                  if(streamSize() != 1 && pos + length > streamSize()) {
                       //it tries to read outside of the boundaries
                       return E_FAIL;
                   }
 
-                  if (m_pos - m_buffer.size() != pos) {
-                      if (!m_seekable) {
+                  if (currentPos() - currentBufferSize() != pos) {
+                      if (!streamSeekable()) {
                           return S_FALSE;
                       }
-                      m_pos = pos;
-                      seekStream(pos);
-                      m_buffer.clear();
+                      setCurrentPos(pos);
                   }
 
-                  int oldSize = m_buffer.size();
-                  while (m_buffer.size() < int(length)) {
+                  int oldSize = currentBufferSize();
+                  while (currentBufferSize() < int(length)) {
                       needData();
                       if (m_mediaGraph->isStopping()) {
                           return VFW_E_WRONG_STATE;
                       }
 
-                      if (oldSize == m_buffer.size()) {
+                      if (oldSize == currentBufferSize()) {
                           break; //we didn't get any data
                       }
-                      oldSize = m_buffer.size();
+                      oldSize = currentBufferSize();
                   }
 
-                  int bytesRead = qMin(m_buffer.size(), int(length));
-                  qMemCopy(buffer, m_buffer.data(), bytesRead);
-                  //truncate the buffer
-                  m_buffer = m_buffer.mid(bytesRead);
+                  DWORD bytesRead = qMin(currentBufferSize(), int(length));
+                  {
+                      QWriteLocker locker(&m_lock);
+                      qMemCopy(buffer, m_buffer.data(), bytesRead);
+                      //truncate the buffer
+                      m_buffer = m_buffer.mid(bytesRead);
+                  }
 
                   if (actual) {
                       *actual = bytesRead; //initialization
@@ -157,6 +190,7 @@
             qint64 m_pos;
             qint64 m_size;
 
+            QMutex m_mutexRead;
             const MediaGraph *m_mediaGraph;
         };
 
@@ -170,6 +204,14 @@
         IODeviceReader::~IODeviceReader()
         {
         }
+
+        STDMETHODIMP IODeviceReader::Stop()
+        {
+            HRESULT hr = QBaseFilter::Stop();
+            m_streamReader->enoughData(); //this asks to cancel any blocked call to needData
+            return hr;
+        }
+
     }
 }
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/iodevicereader.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/iodevicereader.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/iodevicereader.h	2010-04-13 18:06:58.273853384 -0400
@@ -41,6 +41,7 @@
         public:
             IODeviceReader(const MediaSource &source, const MediaGraph *);
             ~IODeviceReader();
+            STDMETHODIMP Stop();
 
         private:
             StreamReader *m_streamReader;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/mediagraph.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/mediagraph.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/mediagraph.cpp	2010-04-13 18:06:58.273853384 -0400
@@ -68,8 +68,6 @@
             return ret;
         }
                 
-
-/*
         static HRESULT saveToFile(Graph graph, const QString &filepath)
         {
             const WCHAR wszStreamName[] = L"ActiveMovieGraph";
@@ -105,7 +103,7 @@
 
             return hr;
         }
-*/
+
 
         MediaGraph::MediaGraph(MediaObject *mo, short index) :
             m_graph(CLSID_FilterGraph, IID_IGraphBuilder),
@@ -383,8 +381,7 @@
 #endif
             if (info.pGraph) {
                 info.pGraph->Release();
-                if (info.pGraph == m_graph)
-                    return m_graph->RemoveFilter(filter);
+                return m_graph->RemoveFilter(filter);
             }
 
             //already removed
@@ -540,11 +537,11 @@
                     const QList<OutputPin> outputs = BackendNode::pins(filter, PINDIR_OUTPUT);
                     for(int i = 0; i < outputs.count(); ++i) {
                         const OutputPin &pin = outputs.at(i);
-                        if (HRESULT(VFW_E_NOT_CONNECTED) == pin->ConnectedTo(inPin.pparam())) {
+                        if (VFW_E_NOT_CONNECTED == pin->ConnectedTo(inPin.pparam())) {
                             return SUCCEEDED(pin->Connect(newIn, 0));
                         }
                     }
-                    //we shoud never go here
+                    //we should never go here
                     return false;
                 } else {
                     QAMMediaType type;
@@ -682,6 +679,7 @@
  #ifndef QT_NO_PHONON_MEDIACONTROLLER
                } else if (source.discType() == Phonon::Cd) {
                     m_realSource = Filter(new QAudioCDPlayer);
+                    m_result = m_graph->AddFilter(m_realSource, 0);
 
 #endif //QT_NO_PHONON_MEDIACONTROLLER
                 } else {
@@ -811,7 +809,7 @@
                 for (int i = 0; i < outputs.count(); ++i) {
                     const OutputPin &out = outputs.at(i);
                     InputPin pin;
-                    if (out->ConnectedTo(pin.pparam()) == HRESULT(VFW_E_NOT_CONNECTED)) {
+                    if (out->ConnectedTo(pin.pparam()) == VFW_E_NOT_CONNECTED) {
                         m_decoderPins += out; //unconnected outputs can be decoded outputs
                     }
                 }
@@ -822,7 +820,7 @@
             //let's reestablish the connections
             for (int i = 0; i < connections.count(); ++i) {
                 const GraphConnection &connection = connections.at(i);
-                //check if we shoud transfer the sink node
+                //check if we should transfer the sink node
 
                 grabFilter(connection.input);
                 grabFilter(connection.output);
@@ -1008,27 +1006,27 @@
                 BSTR str;
                 HRESULT hr = mediaContent->get_AuthorName(&str);
                 if (SUCCEEDED(hr)) {
-                    ret.insert(QLatin1String("ARTIST"), QString::fromWCharArray(str));
+                    ret.insert(QLatin1String("ARTIST"), QString::fromUtf16((const unsigned short*)str));
                     SysFreeString(str);
                 }
                 hr = mediaContent->get_Title(&str);
                 if (SUCCEEDED(hr)) {
-                    ret.insert(QLatin1String("TITLE"), QString::fromWCharArray(str));
+                    ret.insert(QLatin1String("TITLE"), QString::fromUtf16((const unsigned short*)str));
                     SysFreeString(str);
                 }
                 hr = mediaContent->get_Description(&str);
                 if (SUCCEEDED(hr)) {
-                    ret.insert(QLatin1String("DESCRIPTION"), QString::fromWCharArray(str));
+                    ret.insert(QLatin1String("DESCRIPTION"), QString::fromUtf16((const unsigned short*)str));
                     SysFreeString(str);
                 }
                 hr = mediaContent->get_Copyright(&str);
                 if (SUCCEEDED(hr)) {
-                    ret.insert(QLatin1String("COPYRIGHT"), QString::fromWCharArray(str));
+                    ret.insert(QLatin1String("COPYRIGHT"), QString::fromUtf16((const unsigned short*)str));
                     SysFreeString(str);
                 }
                 hr = mediaContent->get_MoreInfoText(&str);
                 if (SUCCEEDED(hr)) {
-                    ret.insert(QLatin1String("MOREINFO"), QString::fromWCharArray(str));
+                    ret.insert(QLatin1String("MOREINFO"), QString::fromUtf16((const unsigned short*)str));
                     SysFreeString(str);
                 }
             }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/mediaobject.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/mediaobject.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/mediaobject.cpp	2010-04-13 18:06:58.277853752 -0400
@@ -23,10 +23,11 @@
 
 #ifndef Q_CC_MSVC
 #include <dshow.h>
-#endif
+#endif //Q_CC_MSVC
 #include <objbase.h>
 #include <initguid.h>
 #include <qnetwork.h>
+#include <comdef.h>
 #include <evcode.h>
 
 #include "mediaobject.h"
@@ -49,7 +50,7 @@
 
         //first the definition of the WorkerThread class
         WorkerThread::WorkerThread()
-          : QThread(), m_finished(false), m_currentWorkId(1)
+          : QThread(), m_currentRenderId(0), m_finished(false), m_currentWorkId(1)
         {
         }
 
@@ -57,6 +58,24 @@
         {
         }
 
+        WorkerThread::Work WorkerThread::dequeueWork()
+        {
+            QMutexLocker locker(&m_mutex);
+            if (m_finished) {
+                return Work();
+            }
+            Work ret = m_queue.dequeue();
+
+            //we ensure to have the wait condition in the right state
+            if (m_queue.isEmpty()) {
+                m_waitCondition.reset();
+            } else {
+                m_waitCondition.set();
+            }
+
+            return ret;
+        }
+
         void WorkerThread::run()
         {
             while (m_finished == false) {
@@ -70,6 +89,11 @@
                 }
                 DWORD result = ::WaitForMultipleObjects(count, handles, FALSE, INFINITE);
                 if (result == WAIT_OBJECT_0) {
+                    if (m_finished) {
+                        //that's the end of the thread execution
+                        return;
+                    }
+
                     handleTask();
                 } else {
                     //this is the event management
@@ -157,7 +181,6 @@
             //we create a new graph
             w.graph = Graph(CLSID_FilterGraph, IID_IGraphBuilder);
             w.filter = filter;
-            w.graph->AddFilter(filter, 0);
             w.id = m_currentWorkId++;
             m_queue.enqueue(w);
             m_waitCondition.set();
@@ -177,29 +200,23 @@
 
         void WorkerThread::handleTask()
         {
-            QMutexLocker locker(Backend::directShowMutex);
-            {
-                QMutexLocker locker(&m_mutex);
-                if (m_finished || m_queue.isEmpty()) {
-                    return;
-                }
-
-                m_currentWork = m_queue.dequeue();
+            const Work w = dequeueWork();
 
-                //we ensure to have the wait condition in the right state
-                if (m_queue.isEmpty()) {
-                    m_waitCondition.reset();
-                } else {
-                    m_waitCondition.set();
-                }
+            if (m_finished) {
+                return;
             }
 
             HRESULT hr = S_OK;
 
-            if (m_currentWork.task == ReplaceGraph) {
+            m_currentRender = w.graph;
+			m_currentRenderId = w.id;
+            if (w.task == ReplaceGraph) {
+                QMutexLocker locker(&m_mutex);
+                HANDLE h;
+
                 int index = -1;
                 for(int i = 0; i < FILTER_COUNT; ++i) {
-                    if (m_graphHandle[i].graph == m_currentWork.oldGraph) {
+                    if (m_graphHandle[i].graph == w.oldGraph) {
                         m_graphHandle[i].graph = Graph();
                         index = i;
                         break;
@@ -212,40 +229,51 @@
                 Q_ASSERT(index != -1);
 
                 //add the new graph
-                HANDLE h;
-                if (SUCCEEDED(ComPointer<IMediaEvent>(m_currentWork.graph, IID_IMediaEvent)
+                if (SUCCEEDED(ComPointer<IMediaEvent>(w.graph, IID_IMediaEvent)
                     ->GetEventHandle(reinterpret_cast<OAEVENT*>(&h)))) {
-                    m_graphHandle[index].graph = m_currentWork.graph;
+                    m_graphHandle[index].graph = w.graph;
                     m_graphHandle[index].handle = h;
                 }
-            } else if (m_currentWork.task == Render) {
-                if (m_currentWork.filter) {
+            } else if (w.task == Render) {
+                if (w.filter) {
                     //let's render pins
-                    const QList<OutputPin> outputs = BackendNode::pins(m_currentWork.filter, PINDIR_OUTPUT);
-                    for (int i = 0; SUCCEEDED(hr) && i < outputs.count(); ++i) {
-                        hr = m_currentWork.graph->Render(outputs.at(i));
+                    w.graph->AddFilter(w.filter, 0);
+                    const QList<OutputPin> outputs = BackendNode::pins(w.filter, PINDIR_OUTPUT);
+                    for (int i = 0; i < outputs.count(); ++i) {
+                        //blocking call
+                        hr = w.graph->Render(outputs.at(i));
+                        if (FAILED(hr)) {
+                            break;
+                        }
                     }
-                } else if (!m_currentWork.url.isEmpty()) {
+                } else if (!w.url.isEmpty()) {
                     //let's render a url (blocking call)
-                    hr = m_currentWork.graph->RenderFile(reinterpret_cast<const wchar_t *>(m_currentWork.url.utf16()), 0);
+                    hr = w.graph->RenderFile(reinterpret_cast<const wchar_t *>(w.url.utf16()), 0);
                 }
                 if (hr != E_ABORT) {
-                    emit asyncRenderFinished(m_currentWork.id, hr, m_currentWork.graph);
+                    emit asyncRenderFinished(w.id, hr, w.graph);
                 }
-            } else if (m_currentWork.task == Seek) {
+            } else if (w.task == Seek) {
                 //that's a seekrequest
-                ComPointer<IMediaSeeking> mediaSeeking(m_currentWork.graph, IID_IMediaSeeking);
-                qint64 newtime = m_currentWork.time * 10000;
+                ComPointer<IMediaSeeking> mediaSeeking(w.graph, IID_IMediaSeeking);
+                qint64 newtime = w.time * 10000;
                 hr = mediaSeeking->SetPositions(&newtime, AM_SEEKING_AbsolutePositioning,
                     0, AM_SEEKING_NoPositioning);
-                emit asyncSeekingFinished(m_currentWork.id, newtime / 10000);
+                qint64 currentTime = -1;
+                if (SUCCEEDED(hr)) {
+                    hr = mediaSeeking->GetCurrentPosition(&currentTime);
+                    if (SUCCEEDED(hr)) {
+                        currentTime /= 10000; //convert to ms
+                    }
+                }
+                emit asyncSeekingFinished(w.id, currentTime);
                 hr = E_ABORT; //to avoid emitting asyncRenderFinished
-            } else if (m_currentWork.task == ChangeState) {
+            } else if (w.task == ChangeState) {
 
                 //remove useless decoders
                 QList<Filter> unused;
-                for (int i = 0; i < m_currentWork.decoders.count(); ++i) {
-                    const Filter &filter = m_currentWork.decoders.at(i);
+                for (int i = 0; i < w.decoders.count(); ++i) {
+                    const Filter &filter = w.decoders.at(i);
                     bool used = false;
                     const QList<OutputPin> pins = BackendNode::pins(filter, PINDIR_OUTPUT);
                     for( int i = 0; i < pins.count(); ++i) {
@@ -262,15 +290,15 @@
                 //we can get the state
                 for (int i = 0; i < unused.count(); ++i) {
                     //we should remove this filter from the graph
-                    m_currentWork.graph->RemoveFilter(unused.at(i));
+                    w.graph->RemoveFilter(unused.at(i));
                 }
 
 
                 //we can get the state
-                ComPointer<IMediaControl> mc(m_currentWork.graph, IID_IMediaControl);
+                ComPointer<IMediaControl> mc(w.graph, IID_IMediaControl);
 
                 //we change the state here
-                switch(m_currentWork.state)
+                switch(w.state)
                 {
                 case State_Stopped:
                     mc->Stop();
@@ -288,38 +316,36 @@
 
                 if (SUCCEEDED(hr)) {
                     if (s == State_Stopped) {
-                        emit stateReady(m_currentWork.graph, Phonon::StoppedState);
+                        emit stateReady(w.graph, Phonon::StoppedState);
                     } else if (s == State_Paused) {
-                        emit stateReady(m_currentWork.graph, Phonon::PausedState);
+                        emit stateReady(w.graph, Phonon::PausedState);
                     } else /*if (s == State_Running)*/ {
-                        emit stateReady(m_currentWork.graph, Phonon::PlayingState);
+                        emit stateReady(w.graph, Phonon::PlayingState);
                     }
                 }
             }
 
-            {
-                QMutexLocker locker(&m_mutex);
-                m_currentWork = Work(); //reinitialize
-            }
+            m_currentRender = Graph();
+			m_currentRenderId = 0;
+
         }
 
-        void WorkerThread::abortCurrentRender(qint16 renderId)
-        {
+		void WorkerThread::abortCurrentRender(qint16 renderId)
+		{
             QMutexLocker locker(&m_mutex);
-            if (m_currentWork.id == renderId) {
-                m_currentWork.graph->Abort();
-            }
             bool found = false;
+            //we try to see if there is already an attempt to seek and we remove it
             for(int i = 0; !found && i < m_queue.size(); ++i) {
                 const Work &w = m_queue.at(i);
                 if (w.id == renderId) {
                     found = true;
                     m_queue.removeAt(i);
-                    if (m_queue.isEmpty()) {
-                        m_waitCondition.reset();
-                    }
                 }
             }
+
+            if (m_currentRender && m_currentRenderId == renderId) {
+                m_currentRender->Abort();
+            }
         }
 
         //tells the thread to stop processing
@@ -327,9 +353,9 @@
         {
             QMutexLocker locker(&m_mutex);
             m_queue.clear();
-            if (m_currentWork.graph) {
+            if (m_currentRender) {
                 //in case we're currently rendering something
-                m_currentWork.graph->Abort();
+                m_currentRender->Abort();
 
             }
 
@@ -361,17 +387,17 @@
                 m_graphs[i] = new MediaGraph(this, i);
             }
 
-            connect(&m_thread, SIGNAL(stateReady(Graph,Phonon::State)),
-                               SLOT(slotStateReady(Graph,Phonon::State)));
+            connect(&m_thread, SIGNAL(stateReady(Graph, Phonon::State)),
+                               SLOT(slotStateReady(Graph, Phonon::State)));
 
-            connect(&m_thread, SIGNAL(eventReady(Graph,long,long)),
-                               SLOT(handleEvents(Graph,long,long)));
+            connect(&m_thread, SIGNAL(eventReady(Graph, long, long)),
+                               SLOT(handleEvents(Graph, long, long)));
 
-            connect(&m_thread, SIGNAL(asyncRenderFinished(quint16,HRESULT,Graph)),
-                SLOT(finishLoading(quint16,HRESULT,Graph)));
+            connect(&m_thread, SIGNAL(asyncRenderFinished(quint16, HRESULT, Graph)),
+                SLOT(finishLoading(quint16, HRESULT, Graph)));
 
-            connect(&m_thread, SIGNAL(asyncSeekingFinished(quint16,qint64)),
-                SLOT(finishSeeking(quint16,qint64)));
+            connect(&m_thread, SIGNAL(asyncSeekingFinished(quint16, qint64)),
+                SLOT(finishSeeking(quint16, qint64)));
             //really special case
             m_mediaObject = this;
             m_thread.start();
@@ -494,18 +520,6 @@
 
             qSwap(m_graphs[0], m_graphs[1]); //swap the graphs
 
-            if (m_transitionTime >= 0)
-                m_graphs[1]->stop(); //make sure we stop the previous graph
-
-            if (currentGraph()->mediaSource().type() != Phonon::MediaSource::Invalid &&
-                catchComError(currentGraph()->renderResult())) {
-                    setState(Phonon::ErrorState);
-                    return;
-            }
-
-            //we need to play the next media
-            play();
-
             //we tell the video widgets to switch now to the new source
 #ifndef QT_NO_PHONON_VIDEO
             for (int i = 0; i < m_videoWidgets.count(); ++i) {
@@ -514,6 +528,15 @@
 #endif //QT_NO_PHONON_VIDEO
 
             emit currentSourceChanged(currentGraph()->mediaSource());
+
+            if (currentGraph()->isLoading()) {
+                //will simply tell that when loading is finished 
+                //it should start the playback
+                play(); 
+            }
+
+
+
             emit metaDataChanged(currentGraph()->metadata());
 
             if (nextGraph()->hasVideo() != currentGraph()->hasVideo()) {
@@ -526,6 +549,15 @@
 #ifndef QT_NO_PHONON_MEDIACONTROLLER
             setTitles(currentGraph()->titles());
 #endif //QT_NO_PHONON_MEDIACONTROLLER
+
+            //this manages only gapless transitions
+            if (currentGraph()->mediaSource().type() != Phonon::MediaSource::Invalid) {
+                if (catchComError(currentGraph()->renderResult())) {
+                    setState(Phonon::ErrorState);
+                } else {
+                    play();
+                }
+            }
         }
 
         Phonon::State MediaObject::state() const
@@ -760,16 +792,15 @@
                 case Phonon::PausedState:
                     pause();
                     break;
+                case Phonon::StoppedState:
+                    stop();
+                    break;
                 case Phonon::PlayingState:
                     play();
                     break;
                 case Phonon::ErrorState:
                     setState(Phonon::ErrorState);
                     break;
-                case Phonon::StoppedState:
-                default:
-                    stop();
-                    break;
                 }
             }
         }
@@ -817,11 +848,11 @@
 #endif
                 LPAMGETERRORTEXT getErrorText = (LPAMGETERRORTEXT)QLibrary::resolve(QLatin1String("quartz"), "AMGetErrorTextW");
 
-                WCHAR buffer[MAX_ERROR_TEXT_LEN];
-                if (getErrorText && getErrorText(hr, buffer, MAX_ERROR_TEXT_LEN)) {
-                    m_errorString = QString::fromWCharArray(buffer);
+                ushort buffer[MAX_ERROR_TEXT_LEN];
+                if (getErrorText && getErrorText(hr, (WCHAR*)buffer, MAX_ERROR_TEXT_LEN)) {
+                    m_errorString = QString::fromUtf16(buffer);
                 } else {
-                    m_errorString = QString::fromLatin1("Unknown error");
+                    m_errorString = QString::fromUtf16((ushort*)_com_error(hr).ErrorMessage());
                 }
                 const QString comError = QString::number(uint(hr), 16);
                 if (!m_errorString.toLower().contains(comError.toLower())) {
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/mediaobject.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/mediaobject.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/mediaobject.h	2010-04-13 18:06:58.277853752 -0400
@@ -114,7 +114,6 @@
 
             enum Task
             {
-                None,
                 Render,
                 Seek,
                 ChangeState,
@@ -123,7 +122,6 @@
 
             struct Work
             {
-                Work() : task(None), id(0), time(0) { }
                 Task task;
                 quint16 id;
                 Graph graph;
@@ -137,14 +135,16 @@
                 };
                 QList<Filter> decoders; //for the state change requests
             };
+            Work dequeueWork();
             void handleTask();
 
-            Work m_currentWork;
+            Graph m_currentRender;
+			qint16 m_currentRenderId;
             QQueue<Work> m_queue;
             bool m_finished;
             quint16 m_currentWorkId;
             QWinWaitCondition m_waitCondition;
-            QMutex m_mutex; // mutex for the m_queue, m_finished and m_currentWorkId
+            QMutex m_mutex;
 
             //this is for WaitForMultipleObjects
             struct
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qasyncreader.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qasyncreader.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qasyncreader.cpp	2010-04-13 18:06:58.277853752 -0400
@@ -15,6 +15,8 @@
 along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */
 
+#include <QtCore/QFile>
+
 #include "qasyncreader.h"
 #include "qbasefilter.h"
 
@@ -78,7 +80,8 @@
 
         STDMETHODIMP QAsyncReader::Request(IMediaSample *sample,DWORD_PTR user)
         {
-            QMutexLocker locker(&m_mutex);
+            QMutexLocker mutexLocker(&m_mutexWait);
+            QWriteLocker locker(&m_lock);
             if (m_flushing) {
                 return VFW_E_WRONG_STATE;
             }
@@ -90,28 +93,33 @@
 
         STDMETHODIMP QAsyncReader::WaitForNext(DWORD timeout, IMediaSample **sample, DWORD_PTR *user)
         {
-            QMutexLocker locker(&m_mutex);
+            QMutexLocker locker(&m_mutexWait);
             if (!sample ||!user) {
                 return E_POINTER;
             }
 
-            //msdn says to return immediately if we're flushing but that doesn't seem to be true
-            //since it triggers a dead-lock somewhere inside directshow (see task 258830)
-
             *sample = 0;
             *user = 0;
 
-            if (m_requestQueue.isEmpty()) {
-                if (m_requestWait.wait(&m_mutex, timeout) == false) {
-                    return VFW_E_TIMEOUT;
-                }
-                if (m_requestQueue.isEmpty()) {
+            AsyncRequest r = getNextRequest();
+
+            if (r.sample == 0) {
+                //there is no request in the queue
+                if (isFlushing()) {
                     return VFW_E_WRONG_STATE;
+                } else {
+                    //First we need to lock the mutex
+                    if (m_requestWait.wait(&m_mutexWait, timeout) == false) {
+                        return VFW_E_TIMEOUT;
+                    }
+                    if (isFlushing()) {
+                        return VFW_E_WRONG_STATE;
+                    }
+
+                    r = getNextRequest();
                 }
             }
 
-            AsyncRequest r = m_requestQueue.dequeue();
-
             //at this point we're sure to have a request to proceed
             if (r.sample == 0) {
                 return E_FAIL;
@@ -119,12 +127,14 @@
 
             *sample = r.sample;
             *user = r.user;
-            return syncReadAlignedUnlocked(r.sample);
+
+            return SyncReadAligned(r.sample);
         }
 
         STDMETHODIMP QAsyncReader::BeginFlush()
         {
-            QMutexLocker locker(&m_mutex);
+            QMutexLocker mutexLocker(&m_mutexWait);
+            QWriteLocker locker(&m_lock);
             m_flushing = true;
             m_requestWait.wakeOne();
             return S_OK;
@@ -132,28 +142,13 @@
 
         STDMETHODIMP QAsyncReader::EndFlush()
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             m_flushing = false;
             return S_OK;
         }
 
         STDMETHODIMP QAsyncReader::SyncReadAligned(IMediaSample *sample)
         {
-            QMutexLocker locker(&m_mutex);
-            return syncReadAlignedUnlocked(sample);
-        }
-
-        STDMETHODIMP QAsyncReader::SyncRead(LONGLONG pos, LONG length, BYTE *buffer)
-        {
-            QMutexLocker locker(&m_mutex);
-            return read(pos, length, buffer, 0);
-        }
-
-
-        STDMETHODIMP QAsyncReader::syncReadAlignedUnlocked(IMediaSample *sample)
-        {
-            Q_ASSERT(!m_mutex.tryLock());
-
             if (!sample) {
                 return E_POINTER;
             }
@@ -180,6 +175,23 @@
             return sample->SetActualDataLength(actual);
         }
 
+        STDMETHODIMP QAsyncReader::SyncRead(LONGLONG pos, LONG length, BYTE *buffer)
+        {
+            return read(pos, length, buffer, 0);
+        }
+
+
+        //addition
+        QAsyncReader::AsyncRequest QAsyncReader::getNextRequest()
+        {
+            QWriteLocker locker(&m_lock);
+            AsyncRequest ret;
+            if (!m_requestQueue.isEmpty()) {
+                ret = m_requestQueue.dequeue();
+            }
+
+            return ret;
+        }
     }
 }
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qasyncreader.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qasyncreader.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qasyncreader.h	2010-04-13 18:06:58.277853752 -0400
@@ -48,12 +48,11 @@
             STDMETHODIMP WaitForNext(DWORD,IMediaSample **,DWORD_PTR *);
             STDMETHODIMP SyncReadAligned(IMediaSample *);
             STDMETHODIMP SyncRead(LONGLONG,LONG,BYTE *);
-            STDMETHODIMP Length(LONGLONG *,LONGLONG *) = 0;
+            virtual STDMETHODIMP Length(LONGLONG *,LONGLONG *) = 0;
             STDMETHODIMP BeginFlush();
             STDMETHODIMP EndFlush();
 
         protected:
-            STDMETHODIMP syncReadAlignedUnlocked(IMediaSample *);
             virtual HRESULT read(LONGLONG pos, LONG length, BYTE *buffer, LONG *actual) = 0;
 
         private:
@@ -63,6 +62,9 @@
                 IMediaSample *sample;
                 DWORD_PTR user;
             };
+            AsyncRequest getNextRequest();
+
+            QMutex m_mutexWait;
 
             QQueue<AsyncRequest> m_requestQueue;
             QWaitCondition m_requestWait;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qaudiocdreader.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qaudiocdreader.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qaudiocdreader.cpp	2010-04-13 18:06:58.277853752 -0400
@@ -103,8 +103,8 @@
 
         private:
             HANDLE m_cddrive;
-            CDROM_TOC m_toc;
-            WaveStructure m_waveHeader;
+            CDROM_TOC *m_toc;
+            WaveStructure *m_waveHeader;
             qint64 m_trackAddress;
         };
 
@@ -112,8 +112,19 @@
 #define SECTOR_SIZE 2352
 #define NB_SECTORS_READ 20
 
-        static const AM_MEDIA_TYPE audioCDMediaType = { MEDIATYPE_Stream, MEDIASUBTYPE_WAVE, TRUE, FALSE, 1, GUID_NULL, 0, 0, 0};
- 
+        static AM_MEDIA_TYPE getAudioCDMediaType()
+        {
+            AM_MEDIA_TYPE mt;
+            qMemSet(&mt, 0, sizeof(AM_MEDIA_TYPE));
+            mt.majortype = MEDIATYPE_Stream;
+            mt.subtype = MEDIASUBTYPE_WAVE;
+            mt.bFixedSizeSamples = TRUE;
+            mt.bTemporalCompression = FALSE;
+            mt.lSampleSize = 1;
+            mt.formattype = GUID_NULL;
+            return mt;
+        }
+
         int addressToSectors(UCHAR address[4])
         {
             return ((address[0] * 60 + address[1]) * 60 + address[2]) * 75 + address[3] - 150;
@@ -130,8 +141,11 @@
         }
 
 
-        QAudioCDReader::QAudioCDReader(QBaseFilter *parent, QChar drive) : QAsyncReader(parent, QVector<AM_MEDIA_TYPE>() << audioCDMediaType)
+        QAudioCDReader::QAudioCDReader(QBaseFilter *parent, QChar drive) : QAsyncReader(parent, QVector<AM_MEDIA_TYPE>() << getAudioCDMediaType())
         {
+            m_toc = new CDROM_TOC;
+            m_waveHeader = new WaveStructure;
+
             //now open the cd-drive
             QString path; 
             if (drive.isNull()) {
@@ -140,30 +154,36 @@
                 path = QString::fromLatin1("\\\\.\\%1:").arg(drive); 	 
             }
 
-            m_cddrive = ::CreateFile((const wchar_t *)path.utf16(), GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, 0, NULL);
+            m_cddrive = QT_WA_INLINE (
+			::CreateFile( (TCHAR*)path.utf16(), GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, 0, NULL ),
+			::CreateFileA( path.toLocal8Bit().constData(), GENERIC_READ, FILE_SHARE_READ, NULL, OPEN_EXISTING, 0, NULL )
+	                );
 
-            qMemSet(&m_toc, 0, sizeof(CDROM_TOC));
+            qMemSet(m_toc, 0, sizeof(CDROM_TOC));
             //read the TOC
             DWORD bytesRead = 0;
-            bool tocRead = ::DeviceIoControl(m_cddrive, IOCTL_CDROM_READ_TOC, 0, 0, &m_toc, sizeof(CDROM_TOC), &bytesRead, 0);
+            bool tocRead = ::DeviceIoControl(m_cddrive, IOCTL_CDROM_READ_TOC, 0, 0, m_toc, sizeof(CDROM_TOC), &bytesRead, 0);
 
             if (!tocRead) {
                 qWarning("unable to load the TOC from the CD");
                 return;
             }
 
-            m_trackAddress = addressToSectors(m_toc.TrackData[0].Address);
-            const qint32 nbSectorsToRead = (addressToSectors(m_toc.TrackData[m_toc.LastTrack + 1 - m_toc.FirstTrack].Address) 
+            m_trackAddress = addressToSectors(m_toc->TrackData[0].Address);
+            const qint32 nbSectorsToRead = (addressToSectors(m_toc->TrackData[m_toc->LastTrack + 1 - m_toc->FirstTrack].Address) 
                 - m_trackAddress);
             const qint32 dataLength = nbSectorsToRead * SECTOR_SIZE;
 
-            m_waveHeader.chunksize = 4 + (8 + m_waveHeader.chunksize2) + (8 + dataLength);
-            m_waveHeader.dataLength = dataLength;
+            m_waveHeader->chunksize = 4 + (8 + m_waveHeader->chunksize2) + (8 + dataLength);
+            m_waveHeader->dataLength = dataLength;
         }
 
         QAudioCDReader::~QAudioCDReader()
         {
             ::CloseHandle(m_cddrive);
+            delete m_toc;
+            delete m_waveHeader;
+
         }
 
         STDMETHODIMP_(ULONG) QAudioCDReader::AddRef()
@@ -179,7 +199,7 @@
 
         STDMETHODIMP QAudioCDReader::Length(LONGLONG *total,LONGLONG *available)
         {
-            const LONGLONG length = sizeof(WaveStructure) + m_waveHeader.dataLength;
+            const LONGLONG length = sizeof(WaveStructure) + m_waveHeader->dataLength;
             if (total) {
                 *total = length;
             }
@@ -218,11 +238,11 @@
             if (pos < sizeof(WaveStructure)) {
                 //we first copy the content of the structure
                 nbRead = qMin(LONG(sizeof(WaveStructure) - pos), length);
-                qMemCopy(buffer, reinterpret_cast<char*>(&m_waveHeader) + pos, nbRead);
+                qMemCopy(buffer, reinterpret_cast<char*>(m_waveHeader) + pos, nbRead);
             }
 
             const LONGLONG posInTrack = pos - sizeof(WaveStructure) + nbRead;
-            const int bytesLeft = qMin(m_waveHeader.dataLength - posInTrack, LONGLONG(length - nbRead));
+            const int bytesLeft = qMin(m_waveHeader->dataLength - posInTrack, LONGLONG(length - nbRead));
 
             if (bytesLeft > 0) {
 
@@ -277,8 +297,8 @@
         {
             QList<qint64> ret;
             ret << 0;
-            for(int i = m_toc.FirstTrack; i <= m_toc.LastTrack ; ++i) {
-                const uchar *address = m_toc.TrackData[i].Address;
+            for(int i = m_toc->FirstTrack; i <= m_toc->LastTrack ; ++i) {
+                const uchar *address = m_toc->TrackData[i].Address;
                 ret << ((address[0] * 60 + address[1]) * 60 + address[2]) * 1000 + address[3]*1000/75 - 2000;
 
             }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qaudiocdreader.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qaudiocdreader.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qaudiocdreader.h	2010-04-13 18:06:58.281853981 -0400
@@ -31,7 +31,7 @@
     {
         struct CDROM_TOC;
         struct WaveStructure;
-        EXTERN_C const IID IID_ITitleInterface;
+        extern const IID IID_ITitleInterface;
 
         //interface for the Titles
         struct ITitleInterface : public IUnknown
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qbasefilter.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qbasefilter.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qbasefilter.cpp	2010-04-13 18:06:58.281853981 -0400
@@ -92,8 +92,8 @@
                     return E_POINTER;
                 }
 
-                uint nbfetched = 0;
-                while (nbfetched < count && m_index < m_pins.count()) {
+                int nbfetched = 0;
+                while (nbfetched < int(count) && m_index < m_pins.count()) {
                     IPin *current = m_pins[m_index];
                     current->AddRef();
                     ret[nbfetched] = current;
@@ -166,19 +166,19 @@
 
         const QList<QPin *> QBaseFilter::pins() const
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             return m_pins;
         }
 
         void QBaseFilter::addPin(QPin *pin)
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             m_pins.append(pin);
         }
 
         void QBaseFilter::removePin(QPin *pin)
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             m_pins.removeAll(pin);
         }
 
@@ -211,8 +211,7 @@
             }
             else if (iid == IID_IMediaPosition || iid == IID_IMediaSeeking) {
                 if (inputPins().isEmpty()) {
-                    *out = getUpStreamInterface(iid);
-                    if (*out) {
+                    if (*out = getUpStreamInterface(iid)) {
                         return S_OK; //we return here to avoid adding a reference
                     } else {
                         hr = E_NOINTERFACE;
@@ -251,35 +250,35 @@
 
         STDMETHODIMP QBaseFilter::GetClassID(CLSID *clsid)
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             *clsid = m_clsid;
             return S_OK;
         }
 
         STDMETHODIMP QBaseFilter::Stop()
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             m_state = State_Stopped;
             return S_OK;
         }
 
         STDMETHODIMP QBaseFilter::Pause()
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             m_state = State_Paused;
             return S_OK;
         }
 
         STDMETHODIMP QBaseFilter::Run(REFERENCE_TIME)
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             m_state = State_Running;
             return S_OK;
         }
 
         STDMETHODIMP QBaseFilter::GetState(DWORD, FILTER_STATE *state)
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             if (!state) {
                 return E_POINTER;
             }
@@ -290,7 +289,7 @@
 
         STDMETHODIMP QBaseFilter::SetSyncSource(IReferenceClock *clock)
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             if (clock) {
                 clock->AddRef();
             }
@@ -303,7 +302,7 @@
 
         STDMETHODIMP QBaseFilter::GetSyncSource(IReferenceClock **clock)
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             if (!clock) {
                 return E_POINTER;
             }
@@ -342,7 +341,7 @@
 
         STDMETHODIMP QBaseFilter::QueryFilterInfo(FILTER_INFO *info )
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             if (!info) {
                 return E_POINTER;
             }
@@ -356,9 +355,9 @@
 
         STDMETHODIMP QBaseFilter::JoinFilterGraph(IFilterGraph *graph, LPCWSTR name)
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             m_graph = graph;
-            m_name = QString::fromWCharArray(name);
+            m_name = QString::fromUtf16((const unsigned short*)name);
             return S_OK;
         }
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qbasefilter.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qbasefilter.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qbasefilter.h	2010-04-13 18:06:58.281853981 -0400
@@ -22,7 +22,7 @@
 
 #include <QtCore/QString>
 #include <QtCore/QList>
-#include <QtCore/QMutex>
+#include <QtCore/QReadWriteLock>
 
 #include <dshow.h>
 
@@ -127,7 +127,7 @@
             IFilterGraph *m_graph;
             FILTER_STATE m_state;
             QList<QPin *> m_pins;
-            mutable QMutex m_mutex;
+            mutable QReadWriteLock m_lock;
         };
     }
 }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qmeminputpin.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qmeminputpin.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qmeminputpin.cpp	2010-04-13 18:06:58.281853981 -0400
@@ -28,8 +28,8 @@
     namespace DS9
     {
 
-        QMemInputPin::QMemInputPin(QBaseFilter *parent, const QVector<AM_MEDIA_TYPE> &mt, bool transform, QPin *output) :
-            QPin(parent, PINDIR_INPUT, mt), m_shouldDuplicateSamples(true), m_transform(transform), m_output(output)
+        QMemInputPin::QMemInputPin(QBaseFilter *parent, const QVector<AM_MEDIA_TYPE> &mt, bool transform) :
+            QPin(parent, PINDIR_INPUT, mt), m_shouldDuplicateSamples(true), m_transform(transform)
         {
         }
 
@@ -66,9 +66,11 @@
         {
             //this allows to serialize with Receive calls
             QMutexLocker locker(&m_mutexReceive);
-            IPin *conn = m_output ? m_output->connected() : 0;
-            if (conn) {
-                conn->EndOfStream();
+            for(int i = 0; i < m_outputs.count(); ++i) {
+                IPin *conn = m_outputs.at(i)->connected();
+                if (conn) {
+                    conn->EndOfStream();
+                }
             }
             return S_OK;
         }
@@ -76,11 +78,13 @@
         STDMETHODIMP QMemInputPin::BeginFlush()
         {
             //pass downstream
-            IPin *conn = m_output ? m_output->connected() : 0;
-            if (conn) {
-                conn->BeginFlush();
+            for(int i = 0; i < m_outputs.count(); ++i) {
+                IPin *conn = m_outputs.at(i)->connected();
+                if (conn) {
+                    conn->BeginFlush();
+                }
             }
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             m_flushing = true;
             return S_OK;
         }
@@ -88,19 +92,22 @@
         STDMETHODIMP QMemInputPin::EndFlush()
         {
             //pass downstream
-            IPin *conn = m_output ? m_output->connected() : 0;
-            if (conn) {
-                conn->EndFlush();
+            for(int i = 0; i < m_outputs.count(); ++i) {
+                IPin *conn = m_outputs.at(i)->connected();
+                if (conn) {
+                    conn->EndFlush();
+                }
             }
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             m_flushing = false;
             return S_OK;
         }
 
         STDMETHODIMP QMemInputPin::NewSegment(REFERENCE_TIME start, REFERENCE_TIME stop, double rate)
         {
-            if (m_output)
-                m_output->NewSegment(start, stop, rate);
+            for(int i = 0; i < m_outputs.count(); ++i) {
+                m_outputs.at(i)->NewSegment(start, stop, rate);
+            }
             return S_OK;
         }
 
@@ -112,9 +119,14 @@
             if (hr == S_OK &&
                 mt->majortype != MEDIATYPE_NULL &&
                 mt->subtype != MEDIASUBTYPE_NULL &&
-                mt->formattype != GUID_NULL && m_output) {
-                    //we tell the output pin that it should connect with this type
-                    hr = m_output->setAcceptedMediaType(connectedType());
+                mt->formattype != GUID_NULL) {
+                    //we tell the output pins that they should connect with this type
+                    for(int i = 0; i < m_outputs.count(); ++i) {
+                        hr = m_outputs.at(i)->setAcceptedMediaType(connectedType());
+                        if (FAILED(hr)) {
+                            break;
+                        }
+                    }
             }
             return hr;
         }
@@ -125,8 +137,7 @@
                 return E_POINTER;
             }
 
-            *alloc = memoryAllocator(true);
-            if (*alloc) {
+            if (*alloc = memoryAllocator(true)) {
                 return S_OK;
             }
 
@@ -140,15 +151,18 @@
             }
 
             {
-                QMutexLocker locker(&m_mutex);
+                QWriteLocker locker(&m_lock);
                 m_shouldDuplicateSamples = m_transform && readonly;
             }
 
             setMemoryAllocator(alloc);
 
-            if (m_output) {
-                ComPointer<IMemInputPin> input(m_output, IID_IMemInputPin);
-                input->NotifyAllocator(alloc, m_shouldDuplicateSamples);
+            for(int i = 0; i < m_outputs.count(); ++i) {
+                IPin *pin = m_outputs.at(i)->connected();
+                if (pin) {
+                    ComPointer<IMemInputPin> input(pin, IID_IMemInputPin);
+                    input->NotifyAllocator(alloc, m_shouldDuplicateSamples);
+                }
             }
 
             return S_OK;
@@ -187,18 +201,22 @@
                 }
             }
 
-            if (m_output) {
+            for (int i = 0; i < m_outputs.count(); ++i) {
+                QPin *current = m_outputs.at(i);
                 IMediaSample *outSample = m_shouldDuplicateSamples ?
-                    duplicateSampleForOutput(sample, m_output->memoryAllocator())
+                    duplicateSampleForOutput(sample, current->memoryAllocator())
                     : sample;
 
                 if (m_shouldDuplicateSamples) {
                     m_parent->processSample(outSample);
                 }
 
-                ComPointer<IMemInputPin> input(m_output->connected(), IID_IMemInputPin);
-                if (input) {
-                    input->Receive(outSample);
+                IPin *pin = current->connected();
+                if (pin) {
+                    ComPointer<IMemInputPin> input(pin, IID_IMemInputPin);
+                    if (input) {
+                        input->Receive(outSample);
+                    }
                 }
 
                 if (m_shouldDuplicateSamples) {
@@ -229,16 +247,39 @@
 
         STDMETHODIMP QMemInputPin::ReceiveCanBlock()
         {
-            //we test the output to see if it can block
-            if (m_output) {
-                ComPointer<IMemInputPin> meminput(m_output->connected(), IID_IMemInputPin);
-                if (meminput && meminput->ReceiveCanBlock() != S_FALSE) {
-                    return S_OK;
+            //we test the output to see if they can block
+            for(int i = 0; i < m_outputs.count(); ++i) {
+                IPin *input = m_outputs.at(i)->connected();
+                if (input) {
+                    ComPointer<IMemInputPin> meminput(input, IID_IMemInputPin);
+                    if (meminput && meminput->ReceiveCanBlock() != S_FALSE) {
+                        return S_OK;
+                    }
                 }
             }
             return S_FALSE;
         }
 
+        //addition
+        //this should be used by the filter to tell its input pins to which output they should route the samples
+
+        void QMemInputPin::addOutput(QPin *output)
+        {
+            QWriteLocker locker(&m_lock);
+            m_outputs += output;
+        }
+
+        void QMemInputPin::removeOutput(QPin *output)
+        {
+            QWriteLocker locker(&m_lock);
+            m_outputs.removeOne(output);
+        }
+
+        QList<QPin*> QMemInputPin::outputs() const
+        {
+            QReadLocker locker(&m_lock);
+            return m_outputs;
+        }
 
         ALLOCATOR_PROPERTIES QMemInputPin::getDefaultAllocatorProperties() const
         {
@@ -253,7 +294,7 @@
             LONG length = sample->GetActualDataLength();
 
             HRESULT hr = alloc->Commit();
-            if (hr == HRESULT(VFW_E_SIZENOTSET)) {
+            if (hr == VFW_E_SIZENOTSET) {
                 ALLOCATOR_PROPERTIES prop = getDefaultAllocatorProperties();
                 prop.cbBuffer = qMax(prop.cbBuffer, length);
                 ALLOCATOR_PROPERTIES actual;
@@ -283,7 +324,7 @@
             {
                 LONGLONG start, end;
                 hr = sample->GetMediaTime(&start, &end);
-                if (hr != HRESULT(VFW_E_MEDIA_TIME_NOT_SET)) {
+                if (hr != VFW_E_MEDIA_TIME_NOT_SET) {
                     hr = out->SetMediaTime(&start, &end);
                     Q_ASSERT(SUCCEEDED(hr));
                 }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qmeminputpin.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qmeminputpin.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qmeminputpin.h	2010-04-13 18:06:58.281853981 -0400
@@ -37,7 +37,7 @@
         class QMemInputPin : public QPin, public IMemInputPin
         {
         public:
-            QMemInputPin(QBaseFilter *, const QVector<AM_MEDIA_TYPE> &, bool transform, QPin *output);
+            QMemInputPin(QBaseFilter *, const QVector<AM_MEDIA_TYPE> &, bool transform);
             ~QMemInputPin();
 
             //reimplementation from IUnknown
@@ -60,13 +60,18 @@
             STDMETHODIMP ReceiveMultiple(IMediaSample **,long,long *);
             STDMETHODIMP ReceiveCanBlock();
 
+            //addition
+            void addOutput(QPin *output);
+            void removeOutput(QPin *output);
+            QList<QPin*> outputs() const;
+
         private:
             IMediaSample *duplicateSampleForOutput(IMediaSample *, IMemAllocator *);
             ALLOCATOR_PROPERTIES getDefaultAllocatorProperties() const;
 
             bool m_shouldDuplicateSamples;
             const bool m_transform; //defines if the pin is transforming the samples
-            QPin* const m_output;
+            QList<QPin*> m_outputs;
             QMutex m_mutexReceive;
         };
     }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qpin.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qpin.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qpin.cpp	2010-04-13 18:06:58.281853981 -0400
@@ -28,7 +28,20 @@
     namespace DS9
     {
 
-        static const AM_MEDIA_TYPE defaultMediaType = { MEDIATYPE_NULL, MEDIASUBTYPE_NULL, TRUE, FALSE, 1, GUID_NULL, 0, 0, 0};
+        static const AM_MEDIA_TYPE defaultMediaType()
+        {
+            AM_MEDIA_TYPE ret;
+            ret.majortype = MEDIATYPE_NULL;
+            ret.subtype = MEDIASUBTYPE_NULL;
+            ret.bFixedSizeSamples = TRUE;
+            ret.bTemporalCompression = FALSE;
+            ret.lSampleSize = 1;
+            ret.formattype = GUID_NULL;
+            ret.pUnk = 0;
+            ret.cbFormat = 0;
+            ret.pbFormat = 0;
+            return ret;
+        }
 
         class QEnumMediaTypes : public IEnumMediaTypes
         {
@@ -91,8 +104,8 @@
                     return E_INVALIDARG;
                 }
 
-                uint nbFetched = 0;
-                while (nbFetched < count && m_index < m_pin->mediaTypes().count()) {
+                int nbFetched = 0;
+                while (nbFetched < int(count) && m_index < m_pin->mediaTypes().count()) {
                     //the caller will deallocate the memory
                     *out = static_cast<AM_MEDIA_TYPE *>(::CoTaskMemAlloc(sizeof(AM_MEDIA_TYPE)));
                     const AM_MEDIA_TYPE original = m_pin->mediaTypes().at(m_index);
@@ -145,9 +158,9 @@
 
 
         QPin::QPin(QBaseFilter *parent, PIN_DIRECTION dir, const QVector<AM_MEDIA_TYPE> &mt) :
-            m_parent(parent), m_flushing(false), m_refCount(1),  m_connected(0),
-            m_direction(dir), m_mediaTypes(mt), m_connectedType(defaultMediaType),
-            m_memAlloc(0)
+        m_memAlloc(0), m_parent(parent), m_refCount(1),  m_connected(0),
+            m_direction(dir), m_mediaTypes(mt), m_connectedType(defaultMediaType()),
+            m_flushing(false)
         {
             Q_ASSERT(m_parent);
             m_parent->addPin(this);
@@ -260,7 +273,7 @@
 
             if (FAILED(hr)) {
                 setConnected(0);
-                setConnectedType(defaultMediaType);
+                setConnectedType(defaultMediaType());
             } else {
                 ComPointer<IMemInputPin> input(pin, IID_IMemInputPin);
                 if (input) {
@@ -302,8 +315,10 @@
             }
 
             setConnected(0);
-            setConnectedType(defaultMediaType);
-            setMemoryAllocator(0);
+            setConnectedType(defaultMediaType());
+            if (m_direction == PINDIR_INPUT) {
+                setMemoryAllocator(0);
+            }
             return S_OK;
         }
 
@@ -323,7 +338,7 @@
 
         STDMETHODIMP QPin::ConnectionMediaType(AM_MEDIA_TYPE *type)
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             if (!type) {
                 return E_POINTER;
             }
@@ -338,6 +353,7 @@
 
         STDMETHODIMP QPin::QueryPinInfo(PIN_INFO *info)
         {
+            QReadLocker locker(&m_lock);
             if (!info) {
                 return E_POINTER;
             }
@@ -345,12 +361,14 @@
             info->dir = m_direction;
             info->pFilter = m_parent;
             m_parent->AddRef();
-            info->achName[0] = 0;
+            qMemCopy(info->achName, m_name.utf16(), qMin(MAX_FILTER_NAME, m_name.length()+1) *2);
+
             return S_OK;
         }
 
         STDMETHODIMP QPin::QueryDirection(PIN_DIRECTION *dir)
         {
+            QReadLocker locker(&m_lock);
             if (!dir) {
                 return E_POINTER;
             }
@@ -361,18 +379,20 @@
 
         STDMETHODIMP QPin::QueryId(LPWSTR *id)
         {
+            QReadLocker locker(&m_lock);
             if (!id) {
                 return E_POINTER;
             }
 
-            *id = static_cast<LPWSTR>(::CoTaskMemAlloc(2));
-            *id[0] = 0;
+            int nbBytes = (m_name.length()+1)*2;
+            *id = static_cast<LPWSTR>(::CoTaskMemAlloc(nbBytes));
+            qMemCopy(*id, m_name.utf16(), nbBytes);
             return S_OK;
         }
 
         STDMETHODIMP QPin::QueryAccept(const AM_MEDIA_TYPE *type)
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             if (!type) {
                 return E_POINTER;
             }
@@ -419,7 +439,7 @@
 
         STDMETHODIMP QPin::NewSegment(REFERENCE_TIME start, REFERENCE_TIME stop, double rate)
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             if (m_direction == PINDIR_OUTPUT && m_connected) {
                 //we deliver this downstream
                 m_connected->NewSegment(start, stop, rate);
@@ -436,8 +456,8 @@
 
         HRESULT QPin::checkOutputMediaTypesConnection(IPin *pin)
         {
-            ComPointer<IEnumMediaTypes> emt;
-            HRESULT hr = pin->EnumMediaTypes(emt.pparam());
+            IEnumMediaTypes *emt = 0;
+            HRESULT hr = pin->EnumMediaTypes(&emt);
             if (hr != S_OK) {
                 return hr;
             }
@@ -450,7 +470,7 @@
                         freeMediaType(type);
                         return S_OK;
                     } else {
-                        setConnectedType(defaultMediaType);
+                        setConnectedType(defaultMediaType());
                         freeMediaType(type);
                     }
                 }
@@ -500,7 +520,7 @@
 
         void QPin::setConnectedType(const AM_MEDIA_TYPE &type)
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
 
             //1st we free memory
             freeMediaType(m_connectedType);
@@ -510,13 +530,13 @@
 
         const AM_MEDIA_TYPE &QPin::connectedType() const 
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             return m_connectedType;
         }
 
         void QPin::setConnected(IPin *pin)
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             if (pin) {
                 pin->AddRef();
             }
@@ -528,7 +548,7 @@
 
         IPin *QPin::connected(bool addref) const
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             if (addref && m_connected) {
                 m_connected->AddRef();
             }
@@ -537,12 +557,13 @@
 
         bool QPin::isFlushing() const
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             return m_flushing;
         }
 
         FILTER_STATE QPin::filterState() const
         {
+            QReadLocker locker(&m_lock);
             FILTER_STATE fstate = State_Stopped;
             m_parent->GetState(0, &fstate);
             return fstate;
@@ -550,7 +571,7 @@
 
         QVector<AM_MEDIA_TYPE> QPin::mediaTypes() const
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             return m_mediaTypes;
         }
 
@@ -586,7 +607,7 @@
 
         void QPin::setMemoryAllocator(IMemAllocator *alloc)
         {
-            QMutexLocker locker(&m_mutex);
+            QWriteLocker locker(&m_lock);
             if (alloc) {
                 alloc->AddRef();
             }
@@ -598,7 +619,7 @@
 
         IMemAllocator *QPin::memoryAllocator(bool addref) const
         {
-            QMutexLocker locker(&m_mutex);
+            QReadLocker locker(&m_lock);
             if (addref && m_memAlloc) {
                 m_memAlloc->AddRef();
             }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qpin.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/qpin.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/qpin.h	2010-04-13 18:06:58.285865176 -0400
@@ -22,7 +22,7 @@
 
 #include <QtCore/QString>
 #include <QtCore/QVector>
-#include <QtCore/QMutex>
+#include <QtCore/QReadWriteLock>
 
 #include <dshow.h>
 
@@ -85,8 +85,8 @@
 
         protected:
             //this can be used by sub-classes
-            mutable QMutex m_mutex;
-            QBaseFilter * const m_parent;
+            mutable QReadWriteLock m_lock;
+            QBaseFilter *m_parent;
             bool m_flushing;
 
         private:
@@ -98,6 +98,7 @@
             const PIN_DIRECTION m_direction;
             QVector<AM_MEDIA_TYPE> m_mediaTypes; //accepted media types
             AM_MEDIA_TYPE m_connectedType;
+            QString m_name;
             IMemAllocator *m_memAlloc;
         };
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videorenderer_evr.cpp
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videorenderer_evr.cpp	2010-04-13 18:06:58.285865176 -0400
@@ -0,0 +1,197 @@
+/*  This file is part of the KDE project.
+
+Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
+
+This library is free software: you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation, either version 2.1 or 3 of the License.
+
+This library is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU Lesser General Public License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with this library.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+
+#include "videorenderer_evr.h"
+
+#ifndef QT_NO_PHONON_VIDEO
+
+#include <QtGui/QWidget>
+#include <QtGui/QPainter>
+#include <QtCore/QTimerEvent>
+
+#include <d3d9.h>
+#include <Evr9.h>
+
+QT_BEGIN_NAMESPACE
+
+namespace Phonon
+{
+    namespace DS9
+    {
+        VideoRendererEVR::~VideoRendererEVR()
+        {
+        }
+
+        bool VideoRendererEVR::isNative() const
+        {
+            return true;
+        }
+
+        VideoRendererEVR::VideoRendererEVR(QWidget *target) : m_target(target)
+        {
+            m_filter = Filter(CLSID_EnhancedVideoRenderer, IID_IBaseFilter);
+            if (!m_filter) {
+                qWarning("the video widget could not be initialized correctly");
+                return;
+            }
+
+            ComPointer<IMFVideoDisplayControl> filterControl = getService<IMFVideoDisplayControl>(MR_VIDEO_RENDER_SERVICE, IID_IMFVideoDisplayControl);
+
+            filterControl->SetVideoWindow(reinterpret_cast<HWND>(target->winId()));
+            filterControl->SetAspectRatioMode(MFVideoARMode_None); // We're in control of the size
+        }
+
+        QImage VideoRendererEVR::snapshot() const
+        {
+            // TODO test
+            // This will always capture black areas where no video is drawn, if any are present.
+            // Due to the hack in notifyResize()
+            ComPointer<IMFVideoDisplayControl> filterControl = getService<IMFVideoDisplayControl>(MR_VIDEO_RENDER_SERVICE, IID_IMFVideoDisplayControl);
+            if (filterControl) {
+                BITMAPINFOHEADER bmi;
+                BYTE *buffer = 0;
+                DWORD bufferSize;
+                LONGLONG timeStamp;
+
+                bmi.biSize = sizeof(BITMAPINFOHEADER);
+
+                HRESULT hr = filterControl->GetCurrentImage(&bmi, &buffer, &bufferSize, &timeStamp);
+                if (SUCCEEDED(hr)) {
+
+                    const int w = qAbs(bmi.biWidth),
+                        h = qAbs(bmi.biHeight);
+
+                    // Create image and copy data into image.
+                    QImage ret(w, h, QImage::Format_RGB32);
+
+                    if (!ret.isNull()) {
+                        uchar *data = buffer;
+                        const int bytes_per_line = w * sizeof(QRgb);
+                        for (int y = h - 1; y >= 0; --y) {
+                            qMemCopy(ret.scanLine(y), //destination
+                                data,     //source
+                                bytes_per_line);
+                            data += bytes_per_line;
+                        }
+                    }
+                    ::CoTaskMemFree(buffer);
+                    return ret;
+                }
+            }
+            return QImage();
+        }
+
+        QSize VideoRendererEVR::videoSize() const
+        {
+            SIZE nativeSize;
+            SIZE aspectRatioSize;
+
+            ComPointer<IMFVideoDisplayControl> filterControl = getService<IMFVideoDisplayControl>(MR_VIDEO_RENDER_SERVICE, IID_IMFVideoDisplayControl);
+
+            filterControl->GetNativeVideoSize(&nativeSize, &aspectRatioSize);
+
+            return QSize(nativeSize.cx, nativeSize.cy);
+        }
+       
+        void VideoRendererEVR::repaintCurrentFrame(QWidget *target, const QRect &rect)
+        {
+            // repaint the video
+            ComPointer<IMFVideoDisplayControl> filterControl = getService<IMFVideoDisplayControl>(MR_VIDEO_RENDER_SERVICE, IID_IMFVideoDisplayControl);
+            // All failed results can be safely ignored
+            filterControl->RepaintVideo();
+        }
+
+        void VideoRendererEVR::notifyResize(const QSize &size, Phonon::VideoWidget::AspectRatio aspectRatio,
+            Phonon::VideoWidget::ScaleMode scaleMode)
+        {
+            if (!isActive()) {
+                RECT dummyRect = { 0, 0, 0, 0};
+                ComPointer<IMFVideoDisplayControl> filterControl = getService<IMFVideoDisplayControl>(MR_VIDEO_RENDER_SERVICE, IID_IMFVideoDisplayControl);
+                filterControl->SetVideoPosition(0, &dummyRect);
+                return;
+            }
+
+            const QSize vsize = videoSize();
+            internalNotifyResize(size, vsize, aspectRatio, scaleMode);
+
+            RECT dstRectWin = { 0, 0, size.width(), size.height()};
+
+            // Resize the Stream output rect instead of the destination rect.
+            // Hacky workaround for flicker in the areas outside of the destination rect
+            // This way these areas don't exist
+            MFVideoNormalizedRect streamOutputRect = { float(m_dstX) / float(size.width()), float(m_dstY) / float(size.height()),
+                                                       float(m_dstWidth + m_dstX) / float(size.width()), float(m_dstHeight + m_dstY) / float(size.height())};
+
+            ComPointer<IMFVideoMixerControl> filterMixer = getService<IMFVideoMixerControl>(MR_VIDEO_MIXER_SERVICE, IID_IMFVideoMixerControl);
+            ComPointer<IMFVideoDisplayControl> filterControl = getService<IMFVideoDisplayControl>(MR_VIDEO_RENDER_SERVICE, IID_IMFVideoDisplayControl);
+
+            filterMixer->SetStreamOutputRect(0, &streamOutputRect);
+            filterControl->SetVideoPosition(0, &dstRectWin);
+        }
+
+        void VideoRendererEVR::applyMixerSettings(qreal brightness, qreal contrast, qreal hue, qreal saturation)
+        {
+            InputPin sink = BackendNode::pins(m_filter, PINDIR_INPUT).first();
+            OutputPin source;
+            if (FAILED(sink->ConnectedTo(source.pparam()))) {
+                return; //it must be connected to work
+            }
+
+            // Get the "Video Processor" (used for brightness/contrast/saturation/hue)
+            ComPointer<IMFVideoProcessor> processor = getService<IMFVideoProcessor>(MR_VIDEO_MIXER_SERVICE, IID_IMFVideoProcessor);
+            Q_ASSERT(processor);
+
+            DXVA2_ValueRange contrastRange;
+            DXVA2_ValueRange brightnessRange;
+            DXVA2_ValueRange saturationRange;
+            DXVA2_ValueRange hueRange;
+
+            if (FAILED(processor->GetProcAmpRange(DXVA2_ProcAmp_Contrast, &contrastRange)))
+                return;
+            if (FAILED(processor->GetProcAmpRange(DXVA2_ProcAmp_Brightness, &brightnessRange)))
+                return;
+            if (FAILED(processor->GetProcAmpRange(DXVA2_ProcAmp_Saturation, &saturationRange)))
+                return;
+            if (FAILED(processor->GetProcAmpRange(DXVA2_ProcAmp_Hue, &hueRange)))
+                return;
+
+            DXVA2_ProcAmpValues values;
+
+            values.Contrast = DXVA2FloatToFixed(((contrast < 0
+                                ? DXVA2FixedToFloat(contrastRange.MinValue) : DXVA2FixedToFloat(contrastRange.MaxValue))
+                               - DXVA2FixedToFloat(contrastRange.DefaultValue)) * qAbs(contrast) + DXVA2FixedToFloat(contrastRange.DefaultValue));
+            values.Brightness = DXVA2FloatToFixed(((brightness < 0
+                                ? DXVA2FixedToFloat(brightnessRange.MinValue) : DXVA2FixedToFloat(brightnessRange.MaxValue))
+                               - DXVA2FixedToFloat(brightnessRange.DefaultValue)) * qAbs(brightness) + DXVA2FixedToFloat(brightnessRange.DefaultValue));
+            values.Saturation = DXVA2FloatToFixed(((saturation < 0
+                                ? DXVA2FixedToFloat(saturationRange.MinValue) : DXVA2FixedToFloat(saturationRange.MaxValue))
+                               - DXVA2FixedToFloat(saturationRange.DefaultValue)) * qAbs(saturation) + DXVA2FixedToFloat(saturationRange.DefaultValue));
+            values.Hue = DXVA2FloatToFixed(((hue < 0
+                                ? DXVA2FixedToFloat(hueRange.MinValue) : DXVA2FixedToFloat(hueRange.MaxValue))
+                               - DXVA2FixedToFloat(hueRange.DefaultValue)) * qAbs(hue) + DXVA2FixedToFloat(hueRange.DefaultValue));
+
+            //finally set the settings
+            processor->SetProcAmpValues(DXVA2_ProcAmp_Contrast | DXVA2_ProcAmp_Brightness | DXVA2_ProcAmp_Saturation | DXVA2_ProcAmp_Hue, &values);
+
+        }
+    }
+}
+
+QT_END_NAMESPACE
+
+#endif //QT_NO_PHONON_VIDEO
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videorenderer_evr.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videorenderer_evr.h	2010-04-13 18:06:58.285865176 -0400
@@ -0,0 +1,70 @@
+/*  This file is part of the KDE project.
+
+Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
+
+This library is free software: you can redistribute it and/or modify
+it under the terms of the GNU Lesser General Public License as published by
+the Free Software Foundation, either version 2.1 or 3 of the License.
+
+This library is distributed in the hope that it will be useful,
+but WITHOUT ANY WARRANTY; without even the implied warranty of
+MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+GNU Lesser General Public License for more details.
+
+You should have received a copy of the GNU Lesser General Public License
+along with this library.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef PHONON_VIDEORENDERER_EVR_H
+#define PHONON_VIDEORENDERER_EVR_H
+
+#include "abstractvideorenderer.h"
+#include "compointer.h"
+
+#include <Mfidl.h>
+
+QT_BEGIN_NAMESPACE
+
+#ifndef QT_NO_PHONON_VIDEO
+
+namespace Phonon
+{
+    namespace DS9
+    {
+        class VideoRendererEVR : public AbstractVideoRenderer
+        {
+        public:
+            VideoRendererEVR(QWidget *target);
+            ~VideoRendererEVR();
+
+            //Implementation from AbstractVideoRenderer
+            void repaintCurrentFrame(QWidget *target, const QRect &rect);
+            void notifyResize(const QSize&, Phonon::VideoWidget::AspectRatio, Phonon::VideoWidget::ScaleMode);
+            QSize videoSize() const;
+            QImage snapshot() const;
+            void applyMixerSettings(qreal brightness, qreal contrast, qreal m_hue, qreal saturation);
+            bool isNative() const;
+        private:
+            QWidget *m_target;
+
+            template <typename T> ComPointer<T> getService(REFGUID guidService, REFIID riid) const
+            {
+                ComPointer<IMFGetService> getService(m_filter, IID_IMFGetService);
+                Q_ASSERT(getService);
+                T *ptr = 0;
+                HRESULT hr = getService->GetService(guidService, riid, (void **) &ptr);
+                if (!SUCCEEDED(hr) || ptr == 0)
+                    Q_ASSERT(!SUCCEEDED(hr) && ptr != 0);
+                ComPointer<T> service(ptr);
+                return service;
+            }
+        };
+    }
+}
+
+#endif //QT_NO_PHONON_VIDEO
+
+QT_END_NAMESPACE
+
+#endif
+
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videorenderer_soft.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/videorenderer_soft.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videorenderer_soft.cpp	2010-04-13 18:06:58.285865176 -0400
@@ -194,8 +194,8 @@
                 m_sampleBuffer = ComPointer<IMediaSample>();
 #ifndef QT_NO_OPENGL
                 freeGLResources();
-                m_textureUploaded = false;
 #endif // QT_NO_OPENGL
+                m_textureUploaded = false;
             }
 
             void endOfStream()
@@ -314,6 +314,7 @@
             REFERENCE_TIME m_start;
             HANDLE m_renderEvent, m_receiveCanWait;         // Signals sample to render
             QSize m_size;
+            bool m_textureUploaded;
 
             //mixer settings
             qreal m_brightness,
@@ -355,7 +356,6 @@
 
             bool m_checkedPrograms;
             bool m_usingOpenGL;
-            bool m_textureUploaded;
             GLuint m_program[2];
             GLuint m_texture[3];
 #endif
@@ -365,7 +365,7 @@
         {
         public:
             VideoRendererSoftPin(VideoRendererSoftFilter *parent) :
-              QMemInputPin(parent, videoMediaTypes(), false /*no transformation of the samples*/, 0),
+              QMemInputPin(parent, videoMediaTypes(), false /*no transformation of the samples*/),
                   m_renderer(parent)
               {
               }
@@ -436,7 +436,7 @@
         QBaseFilter(CLSID_NULL), m_inputPin(new VideoRendererSoftPin(this)),
             m_renderer(renderer), m_start(0)
 #ifndef QT_NO_OPENGL
-            , m_checkedPrograms(false), m_usingOpenGL(false), m_textureUploaded(false)
+            ,m_usingOpenGL(false), m_checkedPrograms(false), m_textureUploaded(false)
 #endif
         {
             m_renderEvent    = ::CreateEvent(0, 0, 0, 0);
@@ -661,10 +661,7 @@
 
 
 #ifndef QT_NO_OPENGL
-            if (painter.paintEngine() && 
-                (painter.paintEngine()->type() == QPaintEngine::OpenGL || painter.paintEngine()->type() == QPaintEngine::OpenGL2)
-                && checkGLPrograms()) {
-
+            if (painter.paintEngine() && painter.paintEngine()->type() == QPaintEngine::OpenGL && checkGLPrograms()) {
                 //for now we only support YUV (both YV12 and YUY2)
                 updateTexture();
 
@@ -676,7 +673,6 @@
                 }
 
                 //let's draw the texture
-                painter.beginNativePainting();
 
                 //Let's pass the other arguments
                 const Program prog = (m_inputPin->connectedType().subtype == MEDIASUBTYPE_YV12) ? YV12toRGB : YUY2toRGB;
@@ -726,7 +722,6 @@
                 glDisableClientState(GL_VERTEX_ARRAY);
 
                 glDisable(GL_FRAGMENT_PROGRAM_ARB);
-                painter.endNativePainting();
                 return;
             } else
 #endif
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videorenderer_vmr9.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/videorenderer_vmr9.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videorenderer_vmr9.cpp	2010-04-13 18:06:58.285865176 -0400
@@ -169,7 +169,6 @@
             Q_ASSERT(SUCCEEDED(hr));
             ComPointer<IVMRWindowlessControl9> windowlessControl(m_filter, IID_IVMRWindowlessControl9);
             windowlessControl->SetVideoClippingWindow(reinterpret_cast<HWND>(target->winId()));
-            windowlessControl->SetAspectRatioMode(VMR9ARMode_None); //we're in control of the size
         }
 
         QImage VideoRendererVMR9::snapshot() const
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videowidget.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/videowidget.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/videowidget.cpp	2010-04-13 18:06:58.285865176 -0400
@@ -24,6 +24,7 @@
 
 #include "mediaobject.h"
 
+#include "videorenderer_evr.h"
 #include "videorenderer_vmr9.h"
 #include "videorenderer_soft.h"
 
@@ -84,19 +85,7 @@
             void setCurrentRenderer(AbstractVideoRenderer *renderer)
             {
                 m_currentRenderer = renderer;
-                //we disallow repaint on that widget for just a fraction of second
-                //this allows better transition between videos
-                setUpdatesEnabled(false);
-                m_flickerFreeTimer.start(20, this);
-            }
-
-            void timerEvent(QTimerEvent *e)
-            {
-                if (e->timerId() == m_flickerFreeTimer.timerId()) {
-                    m_flickerFreeTimer.stop();
-                    setUpdatesEnabled(true);
-                }
-                QWidget::timerEvent(e);
+                update();
             }
 
             QSize sizeHint() const
@@ -118,8 +107,6 @@
 
             void paintEvent(QPaintEvent *e)
             {
-                if (!updatesEnabled())
-                    return; //this avoids repaint from native events
                 checkCurrentRenderingMode();
                 m_currentRenderer->repaintCurrentFrame(this, e->rect());
             }
@@ -167,14 +154,13 @@
                     }
                 } else if (!isEmbedded()) {
                     m_currentRenderer = m_node->switchRendering(m_currentRenderer);
-                    setAttribute(Qt::WA_PaintOnScreen, false);
+                    setAttribute(Qt::WA_PaintOnScreen, true);
                 }
             }
 
             VideoWidget *m_node;
             AbstractVideoRenderer *m_currentRenderer;
             QVariant m_restoreScreenSaverActive;
-            QBasicTimer m_flickerFreeTimer;
         };
 
         VideoWidget::VideoWidget(QWidget *parent)
@@ -276,7 +262,6 @@
         {
             m_aspectRatio = aspectRatio;
             updateVideoSize();
-            m_widget->update();
         }
 
         Phonon::VideoWidget::ScaleMode VideoWidget::scaleMode() const
@@ -295,7 +280,6 @@
         {
             m_scaleMode = scaleMode;
             updateVideoSize();
-            m_widget->update();
         }
 
         void VideoWidget::setBrightness(qreal b)
@@ -349,14 +333,21 @@
             int index = graphIndex * 2 + type;
             if (m_renderers[index] == 0 && autoCreate) {
                 AbstractVideoRenderer *renderer = 0;
-				if (type == Native) {
-                    renderer = new VideoRendererVMR9(m_widget);
+                if (type == Native) {
+                    renderer = new VideoRendererEVR(m_widget);
                     if (renderer->getFilter() == 0) {
-                        //instanciating the renderer might fail with error VFW_E_DDRAW_CAPS_NOT_SUITABLE (0x80040273)
-                        m_noNativeRendererSupported = true;
                         delete renderer;
                         renderer = 0;
                     }
+                    if (renderer == 0) {
+                        renderer = new VideoRendererVMR9(m_widget);
+                        if (renderer->getFilter() == 0) {
+                            //instanciating the renderer might fail with error VFW_E_DDRAW_CAPS_NOT_SUITABLE (0x80040273)
+                            m_noNativeRendererSupported = true;
+                            delete renderer;
+                            renderer = 0;
+                        }
+                    }
                 }
 
                 if (renderer == 0) {
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/volumeeffect.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/volumeeffect.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/volumeeffect.cpp	2010-04-13 18:06:58.285865176 -0400
@@ -76,7 +76,7 @@
         class VolumeMemInputPin : public QMemInputPin
         {
         public:
-            VolumeMemInputPin(QBaseFilter *parent, const QVector<AM_MEDIA_TYPE> &mt, QPin *output) : QMemInputPin(parent, mt, true /*transform*/, output)
+            VolumeMemInputPin(QBaseFilter *parent, const QVector<AM_MEDIA_TYPE> &mt) : QMemInputPin(parent, mt, true /*transform*/)
             {
             }
 
@@ -139,7 +139,8 @@
 
             //then creating the input
             mt << audioMediaType();
-            m_input = new VolumeMemInputPin(this, mt, m_output);
+            m_input = new VolumeMemInputPin(this, mt);
+            m_input->addOutput(m_output); //make the connection here
         }
 
         void VolumeEffectFilter::treatOneSamplePerChannel(BYTE **buffer, int sampleSize, int channelCount, int frequency)
Index: qt4-x11-4.6.2/src/3rdparty/phonon/ds9/volumeeffect.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/ds9/volumeeffect.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/ds9/volumeeffect.h	2010-04-13 18:06:58.289881608 -0400
@@ -47,7 +47,7 @@
         private:
             float m_volume;
 
-            //paramaters used to fade
+            //parameters used to fade
             Phonon::VolumeFaderEffect::FadeCurve m_fadeCurve;
 
             bool m_fading; //determines if we should be fading.
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/CMakeLists.txt
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/CMakeLists.txt	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/CMakeLists.txt	2010-04-13 18:06:58.289881608 -0400
@@ -1,4 +1,4 @@
-# Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
+# Copyright (C) 2009 Nokia Corporation. All rights reserved.
 # Copyright (C) 2008 Matthias Kretz <kretz@kde.org>
 #
 # This library is free software: you can redistribute it and/or modify
@@ -19,7 +19,7 @@
 if (BUILD_PHONON_GSTREAMER)
    include_directories(
 	  ${CMAKE_CURRENT_BINARY_DIR}
-	  ${GSTREAMER_INCLUDE_DIR} 
+	  ${GSTREAMER_INCLUDE_DIR}
 	  ${GLIB2_INCLUDE_DIR}
       ${LIBXML2_INCLUDE_DIR}
 	  ${X11_X11_INCLUDE_PATH})
@@ -34,7 +34,6 @@
 
    set(phonon_gstreamer_SRCS
       audiooutput.cpp
-      artssink.cpp
       backend.cpp
       devicemanager.cpp
       effectmanager.cpp
@@ -50,14 +49,20 @@
       message.cpp
       audioeffect.cpp
       abstractrenderer.cpp
-      x11renderer.cpp
       widgetrenderer.cpp
       glrenderer.cpp
       volumefadereffect.cpp
+      audiodataoutput.cpp
       )
 
-   find_package(Alsa)
-   macro_ensure_version("0.10.22" ${GSTREAMER_VERSION} GSTREAMER_HAS_NONBLOCKING_ALSASINK)
+   if(NOT WIN32)
+      set(phonon_gstreamer_SRCS
+          ${phonon_gstreamer_SRCS}
+          artssink.cpp
+          x11renderer.cpp)
+      macro_optional_find_package(Alsa)
+      macro_ensure_version("0.10.22" ${GSTREAMER_VERSION} GSTREAMER_HAS_NONBLOCKING_ALSASINK)
+   endif(NOT WIN32)
    if(ALSA_FOUND AND NOT GSTREAMER_HAS_NONBLOCKING_ALSASINK)
       add_definitions(-DUSE_ALSASINK2)
       include_directories(${ALSA_INCLUDES})
@@ -78,6 +83,9 @@
    if(ALSA_FOUND)
       target_link_libraries(phonon_gstreamer ${ASOUND_LIBRARY})
    endif(ALSA_FOUND)
+   if(USE_INSTALL_PLUGIN)
+       target_link_libraries(phonon_gstreamer ${GSTREAMER_PLUGIN_PBUTILS_LIBRARIES})
+   endif(USE_INSTALL_PLUGIN)
 
    install(TARGETS phonon_gstreamer DESTINATION ${PLUGIN_INSTALL_DIR}/plugins/phonon_backend)
    install(FILES gstreamer.desktop DESTINATION ${SERVICES_INSTALL_DIR}/phononbackends)
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/ConfigureChecks.cmake
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/ConfigureChecks.cmake	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/ConfigureChecks.cmake	2010-04-13 18:06:58.289881608 -0400
@@ -1,4 +1,4 @@
-# Copyright (C) 2009 Nokia Corporation and/or its subsidiary(-ies).
+# Copyright (C) 2009 Nokia Corporation. All rights reserved.
 #
 # This library is free software: you can redistribute it and/or modify
 # it under the terms of the GNU Lesser General Public License as published by
@@ -17,6 +17,7 @@
 
 macro_optional_find_package(GStreamerPlugins)
 macro_log_feature(GSTREAMER_PLUGIN_VIDEO_LIBRARIES "GStreamer video plugin" "The gstreamer video plugin (part of gstreamer-plugins-base 0.10) is required for the multimedia gstreamer backend" "http://gstreamer.freedesktop.org/modules/" FALSE "0.10")
+macro_log_feature(GSTREAMER_PLUGIN_AUDIO_LIBRARIES "GStreamer audio plugin" "The gstreamer audio plugin (part of gstreamer-plugins-base 0.10) is required for the multimedia gstreamer backend" "http://gstreamer.freedesktop.org/modules/" FALSE "0.10")
 
 macro_optional_find_package(GLIB2)
 macro_log_feature(GLIB2_FOUND "GLib2" "GLib 2 is required to compile the gstreamer backend for Phonon" "http://www.gtk.org/download/" FALSE)
@@ -30,8 +31,8 @@
 macro_optional_find_package(OpenGL)
 macro_log_feature(OPENGL_FOUND "OpenGL" "OpenGL support is required to compile the gstreamer backend for Phonon" "" FALSE)
 
-if (GSTREAMER_FOUND AND GSTREAMER_PLUGIN_VIDEO_LIBRARIES AND GLIB2_FOUND AND GOBJECT_FOUND AND LIBXML2_FOUND AND OPENGL_FOUND)
+if (GSTREAMER_FOUND AND GSTREAMER_PLUGIN_VIDEO_LIBRARIES AND GSTREAMER_PLUGIN_AUDIO_LIBRARIES AND GLIB2_FOUND AND GOBJECT_FOUND AND LIBXML2_FOUND AND OPENGL_FOUND)
    set(BUILD_PHONON_GSTREAMER TRUE)
-else (GSTREAMER_FOUND AND GSTREAMER_PLUGIN_VIDEO_LIBRARIES AND GLIB2_FOUND AND GOBJECT_FOUND AND LIBXML2_FOUND AND OPENGL_FOUND)
+else (GSTREAMER_FOUND AND GSTREAMER_PLUGIN_VIDEO_LIBRARIES AND GSTREAMER_PLUGIN_AUDIO_LIBRARIES AND GLIB2_FOUND AND GOBJECT_FOUND AND LIBXML2_FOUND AND OPENGL_FOUND)
    set(BUILD_PHONON_GSTREAMER FALSE)
-endif (GSTREAMER_FOUND AND GSTREAMER_PLUGIN_VIDEO_LIBRARIES AND GLIB2_FOUND AND GOBJECT_FOUND AND LIBXML2_FOUND AND OPENGL_FOUND)
+endif (GSTREAMER_FOUND AND GSTREAMER_PLUGIN_VIDEO_LIBRARIES AND GSTREAMER_PLUGIN_AUDIO_LIBRARIES AND GLIB2_FOUND AND GOBJECT_FOUND AND LIBXML2_FOUND AND OPENGL_FOUND)
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/audiodataoutput.cpp
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/audiodataoutput.cpp	2010-04-13 18:06:58.289881608 -0400
@@ -0,0 +1,143 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2006 Matthias Kretz <kretz@kde.org>
+    Copyright (C) 2009 Martin Sandsmark <sandsmark@samfundet.no>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#include "audiodataoutput.h"
+#include "gsthelper.h"
+#include "medianode.h"
+#include "mediaobject.h"
+#include <QtCore/QVector>
+#include <QtCore/QMap>
+#include <phonon/audiooutput.h>
+
+namespace Phonon
+{
+namespace Gstreamer
+{
+AudioDataOutput::AudioDataOutput(Backend *backend, QObject *parent)
+    : QObject(parent),
+    MediaNode(backend, AudioSink | AudioSource)
+{
+    static int count = 0;
+    m_name = "AudioDataOutput" + QString::number(count++);
+
+    m_queue = gst_element_factory_make ("identity", NULL);
+    gst_object_ref(m_queue);
+    m_isValid = true;
+}
+
+AudioDataOutput::~AudioDataOutput()
+{
+    gst_element_set_state(m_queue, GST_STATE_NULL);
+    gst_object_unref(m_queue);
+}
+
+int AudioDataOutput::dataSize() const
+{
+    return m_dataSize;
+}
+
+int AudioDataOutput::sampleRate() const
+{
+    return 44100;
+}
+
+void AudioDataOutput::setDataSize(int size)
+{
+    m_dataSize = size;
+}
+
+typedef QMap<Phonon::AudioDataOutput::Channel, QVector<float> > FloatMap;
+typedef QMap<Phonon::AudioDataOutput::Channel, QVector<qint16> > IntMap;
+
+inline void AudioDataOutput::convertAndEmit(const QVector<qint16> &leftBuffer, const QVector<qint16> &rightBuffer)
+{
+    //TODO: Floats
+    IntMap map;
+    map.insert(Phonon::AudioDataOutput::LeftChannel, leftBuffer);
+    map.insert(Phonon::AudioDataOutput::RightChannel, rightBuffer);
+    emit dataReady(map);
+}
+
+void AudioDataOutput::processBuffer(GstPad*, GstBuffer* buffer, gpointer gThat)
+{
+    // TODO emit endOfMedia
+    AudioDataOutput *that = reinterpret_cast<AudioDataOutput*>(gThat);
+
+    // determine the number of channels
+    GstStructure* structure = gst_caps_get_structure (GST_BUFFER_CAPS(buffer), 0);
+    gst_structure_get_int (structure, "channels", &that->m_channels);
+
+    if (that->m_channels > 2 || that->m_channels < 0) {
+        qWarning() << Q_FUNC_INFO << ": Number of channels not supported: " << that->m_channels;
+        return;
+    }
+
+    gint16 *data = reinterpret_cast<gint16*>(GST_BUFFER_DATA(buffer));
+    guint size = GST_BUFFER_SIZE(buffer) / sizeof(gint16);
+
+    that->m_pendingData.reserve(that->m_pendingData.size() + size);
+
+    for (uint i=0; i<size; i++) {
+        // 8 bit? interleaved? yay for lacking documentation!
+        that->m_pendingData.append(data[i]);
+    }
+
+    while (that->m_pendingData.size() > that->m_dataSize * that->m_channels) {
+        if (that->m_channels == 1) {
+            QVector<qint16> intBuffer(that->m_dataSize);
+            memcpy(intBuffer.data(), that->m_pendingData.constData(), that->m_dataSize * sizeof(qint16));
+
+            that->convertAndEmit(intBuffer, intBuffer);
+            int newSize = that->m_pendingData.size() - that->m_dataSize;
+            memmove(that->m_pendingData.data(), that->m_pendingData.constData() + that->m_dataSize, newSize * sizeof(qint16));
+            that->m_pendingData.resize(newSize);
+        } else {
+            QVector<qint16> left(that->m_dataSize), right(that->m_dataSize);
+            for (int i=0; i<that->m_dataSize; i++) {
+                left[i] = that->m_pendingData[i*2];
+                right[i] = that->m_pendingData[i*2+1];
+            }
+            that->m_pendingData.resize(that->m_pendingData.size() - that->m_dataSize*2);
+            that->convertAndEmit(left, right);
+        }
+    }
+}
+
+void AudioDataOutput::mediaNodeEvent(const MediaNodeEvent *event)
+{
+    if (event->type() == MediaNodeEvent::MediaObjectConnected && root()) {
+        g_object_set(G_OBJECT(audioElement()), "sync", true, (const char*)NULL);
+        GstPad *audiopad = gst_element_get_pad (audioElement(), "src");
+        gst_pad_add_buffer_probe (audiopad, G_CALLBACK(processBuffer), this);
+        gst_object_unref (audiopad);
+        return;
+    }
+
+    MediaNode::mediaNodeEvent(event);
+}
+
+}} //namespace Phonon::Gstreamer
+
+#include "moc_audiodataoutput.cpp"
+// vim: sw=4 ts=4
+
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/audiodataoutput.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/audiodataoutput.h	2010-04-13 18:06:58.289881608 -0400
@@ -0,0 +1,84 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2006 Matthias Kretz <kretz@kde.org>
+    Copyright (C) 2009 Martin Sandsmark <sandsmark@samfundet.no>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+*/
+
+#ifndef Phonon_GSTREAMER_AUDIODATAOUTPUT_H
+#define Phonon_GSTREAMER_AUDIODATAOUTPUT_H
+
+#include "abstractaudiooutput.h"
+#include "backend.h"
+#include "medianode.h"
+#include <phonon/audiodataoutput.h>
+#include <phonon/audiodataoutputinterface.h>
+
+namespace Phonon
+{
+namespace Gstreamer
+{
+    /**
+     * \author Martin Sandsmark <sandsmark@samfundet.no>
+     */
+    class AudioDataOutput : public QObject,
+                            public AudioDataOutputInterface,
+                            public MediaNode
+    {
+        Q_OBJECT
+        Q_INTERFACES(Phonon::AudioDataOutputInterface Phonon::Gstreamer::MediaNode)
+
+        public:
+            AudioDataOutput(Backend *, QObject *);
+            ~AudioDataOutput();
+
+        public Q_SLOTS:
+            int dataSize() const;
+            int sampleRate() const;
+            void setDataSize(int size);
+
+        public:
+            /// callback function for handling new audio data
+            static void processBuffer(GstPad*, GstBuffer*, gpointer);
+
+            Phonon::AudioDataOutput* frontendObject() const { return m_frontend; }
+            void setFrontendObject(Phonon::AudioDataOutput *frontend) { m_frontend = frontend; }
+
+            GstElement *audioElement() { return m_queue; }
+
+            void mediaNodeEvent(const MediaNodeEvent *event);
+
+
+        signals:
+            void dataReady(const QMap<Phonon::AudioDataOutput::Channel, QVector<qint16> > &data);
+            void dataReady(const QMap<Phonon::AudioDataOutput::Channel, QVector<float> > &data);
+            void endOfMedia(int remainingSamples);
+
+        private:
+            void convertAndEmit(const QVector<qint16>&, const QVector<qint16>&);
+
+            GstElement *m_queue;
+            int m_dataSize;
+            QVector<qint16> m_pendingData;
+            Phonon::AudioDataOutput *m_frontend;
+            int m_channels;
+    };
+}} //namespace Phonon::Gstreamer
+
+// vim: sw=4 ts=4 tw=80
+#endif // Phonon_FAKE_AUDIODATAOUTPUT_H
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/audiooutput.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/audiooutput.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/audiooutput.cpp	2010-04-13 18:06:58.293854738 -0400
@@ -125,6 +125,7 @@
 bool AudioOutput::setOutputDevice(int newDevice)
 {
     m_backend->logMessage(Q_FUNC_INFO + QString::number(newDevice), Backend::Info, this);
+
     if (newDevice == m_device)
         return true;
 
@@ -135,20 +136,11 @@
     }
 
     bool success = false;
-    const QList<AudioDevice> deviceList = m_backend->deviceManager()->audioOutputDevices();
-    int deviceIdx = -1;
-    for (int i=0; i<deviceList.size(); i++) {
-        if (deviceList.at(i).id == newDevice) {
-            deviceIdx = i;
-            break;
-        }
-    }
-
-    if (m_audioSink && deviceIdx >= 0) {
+    if (m_audioSink &&  newDevice >= 0) {
         // Save previous state
         GstState oldState = GST_STATE(m_audioSink);
         const QByteArray oldDeviceValue = GstHelper::property(m_audioSink, "device");
-        const QByteArray deviceId = deviceList.at(deviceIdx).gstId;
+        const QByteArray deviceId = m_backend->deviceManager()->gstId(newDevice);
         m_device = newDevice;
 
         // We test if the device can be opened by checking if it can go from NULL to READY state
@@ -170,7 +162,7 @@
                                   deviceId, Backend::Info, this);
         }
 
-        // Note the stopped state should not really be neccessary, but seems to be required to 
+        // Note the stopped state should not really be necessary, but seems to be required to
         // properly reset after changing the audio state
         if (root()) {
             QMetaObject::invokeMethod(root(), "setState", Qt::QueuedConnection, Q_ARG(State, StoppedState));
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/backend.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/backend.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/backend.cpp	2010-04-13 18:06:58.293854738 -0400
@@ -18,6 +18,7 @@
 #include "common.h"
 #include "backend.h"
 #include "audiooutput.h"
+#include "audiodataoutput.h"
 #include "audioeffect.h"
 #include "mediaobject.h"
 #include "videowidget.h"
@@ -26,6 +27,7 @@
 #include "message.h"
 #include "volumefadereffect.h"
 #include <gst/interfaces/propertyprobe.h>
+#include <phonon/pulsesupport.h>
 
 #include <QtCore/QSet>
 #include <QtCore/QVariant>
@@ -49,13 +51,17 @@
         , m_debugLevel(Warning)
         , m_isValid(false)
 {
+    // Initialise PulseAudio support
+    PulseSupport *pulse = PulseSupport::getInstance();
+    pulse->enable();
+    connect(pulse, SIGNAL(objectDescriptionChanged(ObjectDescriptionType)), SIGNAL(objectDescriptionChanged(ObjectDescriptionType)));
+
     // In order to support reloading, we only set the app name once...
     static bool first = true;
     if (first) {
         first = false;
         g_set_application_name(qApp->applicationName().toUtf8());
     }
-
     GError *err = 0;
     bool wasInit = gst_init_check(0, 0, &err);  //init gstreamer: must be called before any gst-related functions
     if (err)
@@ -92,6 +98,9 @@
 
 Backend::~Backend() 
 {
+    delete m_effectManager;
+    delete m_deviceManager;
+    PulseSupport::shutdown();
 }
 
 gboolean Backend::busCall(GstBus *bus, GstMessage *msg, gpointer data)
@@ -119,18 +128,15 @@
     case MediaObjectClass:
         return new MediaObject(this, parent);
 
-    case AudioOutputClass: {
-            AudioOutput *ao = new AudioOutput(this, parent);
-            m_audioOutputs.append(ao);
-            return ao;
-        }
+    case AudioOutputClass:
+        return new AudioOutput(this, parent);
+
 #ifndef QT_NO_PHONON_EFFECT
     case EffectClass:
         return new AudioEffect(this, args[0].toInt(), parent);
 #endif //QT_NO_PHONON_EFFECT
     case AudioDataOutputClass:
-        logMessage("createObject() : AudioDataOutput not implemented");
-        break;
+        return new AudioDataOutput(this, parent);
 
 #ifndef QT_NO_PHONON_VIDEO
     case VideoDataOutputClass:
@@ -214,14 +220,14 @@
         GstPluginFeature *feature = GST_PLUGIN_FEATURE(iter->data);
         QString klass = gst_element_factory_get_klass(GST_ELEMENT_FACTORY(feature));
 
-        if (klass == QLatin1String("Codec/Decoder") ||
-            klass == QLatin1String("Codec/Decoder/Audio") ||
-            klass == QLatin1String("Codec/Decoder/Video") ||
-            klass == QLatin1String("Codec/Demuxer") ||
-            klass == QLatin1String("Codec/Demuxer/Audio") ||
-            klass == QLatin1String("Codec/Demuxer/Video") ||
-            klass == QLatin1String("Codec/Parser") ||
-            klass == QLatin1String("Codec/Parser/Audio") ||
+        if (klass == QLatin1String("Codec/Decoder") || 
+            klass == QLatin1String("Codec/Decoder/Audio") || 
+            klass == QLatin1String("Codec/Decoder/Video") || 
+            klass == QLatin1String("Codec/Demuxer") || 
+            klass == QLatin1String("Codec/Demuxer/Audio") || 
+            klass == QLatin1String("Codec/Demuxer/Video") || 
+            klass == QLatin1String("Codec/Parser") || 
+            klass == QLatin1String("Codec/Parser/Audio") || 
             klass == QLatin1String("Codec/Parser/Video")) {
 
             const GList *static_templates;
@@ -244,6 +250,15 @@
         }
     }
     g_list_free(factoryList);
+    if (availableMimeTypes.contains("audio/x-vorbis")
+        && availableMimeTypes.contains("application/x-ogm-audio")) {
+        if (!availableMimeTypes.contains("audio/x-vorbis+ogg"))
+            availableMimeTypes.append("audio/x-vorbis+ogg");
+        if (!availableMimeTypes.contains("application/ogg"))  /* *.ogg */
+            availableMimeTypes.append("application/ogg");
+        if (!availableMimeTypes.contains("audio/ogg")) /* *.oga */
+            availableMimeTypes.append("audio/ogg");
+    }
     availableMimeTypes.sort();
     return availableMimeTypes;
 }
@@ -293,14 +308,11 @@
 
     switch (type) {
     case Phonon::AudioOutputDeviceType: {
-            QList<AudioDevice> audioDevices = deviceManager()->audioOutputDevices();
-            foreach(const AudioDevice &device, audioDevices) {
-                if (device.id == index) {
-                    ret.insert("name", device.gstId);
-                    ret.insert("description", device.description);
-                    ret.insert("icon", QLatin1String("audio-card"));
-                    break;
-                }
+            AudioDevice* ad;
+            if ((ad = deviceManager()->audioDevice(index))) {
+                ret.insert("name", ad->gstId);
+                ret.insert("description", ad->description);
+                ret.insert("icon", ad->icon);
             }
         }
         break;
@@ -429,7 +441,7 @@
 
 /**
  * Returns a debuglevel that is determined by the
- * PHONON_GSTREAMER_DEBUG environment variable.
+ * PHONON_GST_DEBUG environment variable.
  *
  *  Warning - important warnings
  *  Info    - general info
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/backend.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/backend.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/backend.h	2010-04-13 18:06:58.293854738 -0400
@@ -86,7 +86,6 @@
 
 private:
     static gboolean busCall(GstBus *bus, GstMessage *msg, gpointer data);
-    QList<QPointer<AudioOutput> > m_audioOutputs;
 
     DeviceManager *m_deviceManager;
     EffectManager *m_effectManager;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/devicemanager.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/devicemanager.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/devicemanager.cpp	2010-04-13 18:06:58.293854738 -0400
@@ -24,6 +24,7 @@
 #include "widgetrenderer.h"
 #include "x11renderer.h"
 #include "artssink.h"
+#include "pulsesupport.h"
 
 #ifdef USE_ALSASINK2
 #include "alsasink2.h"
@@ -44,9 +45,12 @@
 AudioDevice::AudioDevice(DeviceManager *manager, const QByteArray &gstId)
         : gstId(gstId)
 {
-    //get an id
-    static int counter = 0;
-    id = counter++;
+    // This should never be called when PulseAudio is active.
+    Q_ASSERT(!PulseSupport::getInstance()->isActive());
+
+    id = manager->allocateDeviceId();
+    icon = "audio-card";
+
     //get name from device
     if (gstId == "default") {
         description = "Default audio device";
@@ -71,22 +75,25 @@
 DeviceManager::DeviceManager(Backend *backend)
         : QObject(backend)
         , m_backend(backend)
+        , m_audioDeviceCounter(0)
 {
-    m_audioSink = qgetenv("PHONON_GST_AUDIOSINK");
-    m_videoSinkWidget = qgetenv("PHONON_GST_VIDEOMODE");
-
-#ifndef QT_NO_SETTINGS
     QSettings settings(QLatin1String("Trolltech"));
     settings.beginGroup(QLatin1String("Qt"));
 
+    PulseSupport *pulse = PulseSupport::getInstance();
+    m_audioSink = qgetenv("PHONON_GST_AUDIOSINK");
     if (m_audioSink.isEmpty()) {
         m_audioSink = settings.value(QLatin1String("audiosink"), "Auto").toByteArray().toLower();
+        if (m_audioSink == "auto" && pulse->isActive())
+            m_audioSink = "pulsesink";
     }
+    if ("pulsesink" != m_audioSink)
+        pulse->enable(false);
 
+    m_videoSinkWidget = qgetenv("PHONON_GST_VIDEOMODE");
     if (m_videoSinkWidget.isEmpty()) {
         m_videoSinkWidget = settings.value(QLatin1String("videomode"), "Auto").toByteArray().toLower();
     }
-#endif //QT_NO_SETTINGS
 
     if (m_backend->isValid())
         updateDeviceList();
@@ -271,9 +278,17 @@
 }
 #endif //QT_NO_PHONON_VIDEO
 
-/*
- * Returns a positive device id or -1 if device
- * does not exist
+/**
+ * Allocate a device id for a new audio device
+ */
+int DeviceManager::allocateDeviceId()
+{
+    return m_audioDeviceCounter++;
+}
+
+
+/**
+ * Returns a positive device id or -1 if device does not exist
  *
  * The gstId is typically in the format hw:1,0
  */
@@ -288,16 +303,30 @@
 }
 
 /**
- * Get a human-readable description from a device id
+ * Returns a gstId or "default" if device does not exist
+ *
+ * The gstId is typically in the format hw:1,0
  */
-QByteArray DeviceManager::deviceDescription(int id) const
+const QByteArray DeviceManager::gstId(int deviceId)
+{
+    if (!PulseSupport::getInstance()->isActive()) {
+        AudioDevice *ad = audioDevice(deviceId);
+        if (ad)
+            return QByteArray(ad->gstId);
+    }
+    return QByteArray("default");
+}
+
+/**
+* Get the AudioDevice for a given device id
+*/
+AudioDevice* DeviceManager::audioDevice(int id)
 {
     for (int i = 0 ; i < m_audioDeviceList.size() ; ++i) {
-        if (m_audioDeviceList[i].id == id) {
-            return m_audioDeviceList[i].description;
-        }
+        if (m_audioDeviceList[i].id == id)
+            return &m_audioDeviceList[i];
     }
-    return QByteArray();
+    return NULL;
 }
 
 /**
@@ -311,8 +340,11 @@
     QList<QByteArray> list;
 
     if (audioSink) {
-        list = GstHelper::extractProperties(audioSink, "device");
-        list.prepend("default");
+        if (!PulseSupport::getInstance()->isActive()) {
+            // If we're using pulse, the PulseSupport class takes care of things for us.
+            list = GstHelper::extractProperties(audioSink, "device");
+            list.prepend("default");
+        }
 
         for (int i = 0 ; i < list.size() ; ++i) {
             QByteArray gstId = list.at(i);
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/devicemanager.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/devicemanager.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/devicemanager.h	2010-04-13 18:06:58.297854408 -0400
@@ -42,6 +42,7 @@
     int id;
     QByteArray gstId;
     QByteArray description;
+    QString icon;
 };
 
 class DeviceManager : public QObject {
@@ -51,8 +52,10 @@
     virtual ~DeviceManager();
     const QList<AudioDevice> audioOutputDevices() const;
     GstPad *requestPad(int device) const;
+    int allocateDeviceId();
     int deviceId(const QByteArray &gstId) const;
-    QByteArray deviceDescription(int id) const;
+    const QByteArray gstId(int id);
+    AudioDevice* audioDevice(int id);
     GstElement *createGNOMEAudioSink(Category category);
     GstElement *createAudioSink(Category category = NoCategory);
     AbstractRenderer *createVideoRenderer(VideoWidget *parent);
@@ -68,6 +71,7 @@
     bool canOpenDevice(GstElement *element) const;
     Backend *m_backend;
     QList <AudioDevice> m_audioDeviceList;
+    int m_audioDeviceCounter;
     QTimer m_devicePollTimer;
     QByteArray m_audioSink;
     QByteArray m_videoSinkWidget;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/effectmanager.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/effectmanager.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/effectmanager.cpp	2010-04-13 18:06:58.297854408 -0400
@@ -54,7 +54,7 @@
             // "volume" not needed
             // "equalizer-nbands" not really useful at the moment
 
-            // These plugins simply dont work or have major stability issues:
+            // These plugins simply don't work or have major stability issues:
             // "iir" Does not seem to do much at the moment
             // "audioinvert" Only works for some streams, should be invesigated
             // "lpwsinc" Crashes for large values of filter kernel
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/glrenderer.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/glrenderer.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/glrenderer.cpp	2010-04-13 18:06:58.297854408 -0400
@@ -266,7 +266,7 @@
     palette.setColor(QPalette::Background, Qt::black);
     setPalette(palette);
     setAutoFillBackground(true);
-    // Videowidget allways have this property to allow hiding the mouse cursor
+    // Videowidget always have this property to allow hiding the mouse cursor
     setMouseTracking(true);
 }
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/gsthelper.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/gsthelper.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/gsthelper.cpp	2010-04-13 18:06:58.297854408 -0400
@@ -121,7 +121,7 @@
 {
     GstElement *playbin = 0;
     //init playbin and add to our pipeline
-    playbin = gst_element_factory_make("playbin", NULL);
+    playbin = gst_element_factory_make("playbin2", NULL);
 
     //Create an identity element to redirect sound
     GstElement *audioSinkBin =  gst_bin_new (NULL);
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/gstreamer.desktop
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/gstreamer.desktop	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/gstreamer.desktop	2010-04-13 18:06:58.297854408 -0400
@@ -10,28 +10,81 @@
 InitialPreference=10
 
 Name=GStreamer
+Name[bg]=GStreamer
+Name[ca]=GStreamer
+Name[ca@valencia]=GStreamer
+Name[cs]=GStreamer
+Name[da]=GStreamer
+Name[de]=GStreamer
+Name[el]=GStreamer
+Name[en_GB]=GStreamer
+Name[es]=GStreamer
+Name[et]=GStreamer
+Name[eu]=GStreamer
+Name[fi]=GStreamer
+Name[fr]=GStreamer
+Name[ga]=GStreamer
+Name[gl]=GStreamer
+Name[hsb]=GStreamer
+Name[hu]=GStreamer
+Name[id]=GStreamer
+Name[is]=GStreamer
+Name[it]=GStreamer
+Name[ja]=GStreamer
+Name[ko]=GStreamer
+Name[ku]=GStreamer
+Name[lt]=GStreamer
+Name[lv]=GStreamer
+Name[nb]=GStreamer
+Name[nds]=GStreamer
+Name[nl]=GStreamer
+Name[nn]=GStreamer
 Name[pa]=ਜੀਸਟੀਰਮਰ
+Name[pl]=GStreamer
+Name[pt]=GStreamer
+Name[pt_BR]=GStreamer
+Name[ru]=GStreamer
+Name[se]=GStreamer
+Name[sk]=GStreamer
+Name[sl]=GStreamer
 Name[sr]=Гстример
+Name[sr@ijekavian]=Гстример
+Name[sr@ijekavianlatin]=GStreamer
+Name[sr@latin]=GStreamer
 Name[sv]=Gstreamer
+Name[tr]=GStreamer
+Name[uk]=GStreamer
 Name[x-test]=xxGStreamerxx
+Name[zh_CN]=GStreamer
+Name[zh_TW]=GStreamer
 
 Comment=Phonon GStreamer backend
 Comment[bg]=Phonon GStreamer
 Comment[ca]=Dorsal GStreamer del Phonon
+Comment[ca@valencia]=Dorsal GStreamer del Phonon
+Comment[cs]=Phonon GStreamer backend
 Comment[da]=GStreamer-backend til Phonon
 Comment[de]=Phonon-Treiber für GStreamer
 Comment[el]=Σύστημα υποστήριξης GStreamer του Phonon
+Comment[en_GB]=Phonon GStreamer backend
 Comment[es]=Motor GStreamer para Phonon
 Comment[et]=Phononi GStreameri taustaprogramm
+Comment[eu]=Phonon GStreamer backend
+Comment[fi]=Phonon GStreamer-taustaohjelma
 Comment[fr]=Système de gestion GStreamer pour Phonon 
 Comment[ga]=Inneall GStreamer le haghaidh Phonon
 Comment[gl]=Infraestrutura de GStreamer para Phonon
+Comment[hsb]=Phonon GStreamer backend
+Comment[hu]=Phonon GStreamer modul
+Comment[id]=Phonon GStreamer backend
 Comment[is]=Phonon GStreamer bakendi
 Comment[it]=Motore Gstreamer di Phonon
 Comment[ja]=Phonon GStreamer バックエンド
 Comment[ko]=Phonon GStreamer 백엔드
 Comment[ku]=Binesaza Phonon GStreamer
+Comment[lt]=Phonon GStreamer galinė sąsaja
 Comment[lv]=Phonon GStreamer aizmugure
+Comment[nb]=Phonon-motor for GStreamer
 Comment[nds]=Phonon-Hülpprogramm GStreamer
 Comment[nl]=GStreamer-backend (Phonon)
 Comment[nn]=Phonon-motor for GStreamer
@@ -39,9 +92,13 @@
 Comment[pl]=Obsługa GStreamera przez Phonon
 Comment[pt]=Infra-estrutura do GStreamer para o Phonon
 Comment[pt_BR]=Infraestrutura Phonon GStreamer
+Comment[ru]=Механизм GStreamer для Phonon
+Comment[se]=Phonon GStreamer duogášmohtor
 Comment[sk]=GStreamer podsystém
 Comment[sl]=Phononova hrbtenica GStreamer
 Comment[sr]=Гстример као позадина Фонона
+Comment[sr@ijekavian]=Гстример као позадина Фонона
+Comment[sr@ijekavianlatin]=GStreamer kao pozadina Phonona
 Comment[sr@latin]=GStreamer kao pozadina Phonona
 Comment[sv]=Phonon Gstreamer-gränssnitt
 Comment[tr]=Phonon GStreamer arka ucu
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/medianode.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/medianode.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/medianode.cpp	2010-04-13 18:06:58.301855406 -0400
@@ -198,9 +198,9 @@
         // Disconnecting elements while playing or paused seems to cause
         // potential deadlock. Hence we force the pipeline into ready state
         // before any nodes are disconnected.
-        gst_element_set_state(root()->pipeline(), GST_STATE_READY);    
+        gst_element_set_state(root()->pipeline(), GST_STATE_READY);
 
-        Q_ASSERT(sink->root()); //sink has to have a root since it is onnected
+        Q_ASSERT(sink->root()); //sink has to have a root since it is connected
 
         if (sink->description() & (AudioSink)) {
             GstPad *sinkPad = gst_element_get_pad(sink->audioElement(), "sink");
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/mediaobject.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/mediaobject.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/mediaobject.cpp	2010-04-13 18:06:58.301855406 -0400
@@ -16,6 +16,7 @@
 */
 #include <cmath>
 #include <gst/interfaces/propertyprobe.h>
+#include <gst/pbutils/install-plugins.h>
 #include "common.h"
 #include "mediaobject.h"
 #include "videowidget.h"
@@ -53,6 +54,7 @@
         , m_tickTimer(new QTimer(this))
         , m_prefinishMark(0)
         , m_transitionTime(0)
+        , m_isStream(false)
         , m_posAtSeek(-1)
         , m_prefinishMarkReachedNotEmitted(true)
         , m_aboutToFinishEmitted(false)
@@ -79,6 +81,7 @@
         , m_autoplayTitles(true)
         , m_availableTitles(0)
         , m_currentTitle(1)
+        , m_pendingTitle(1)
 {
     qRegisterMetaType<GstCaps*>("GstCaps*");
     qRegisterMetaType<State>("State");
@@ -95,8 +98,8 @@
         m_backend->addBusWatcher(this);
         connect(m_tickTimer, SIGNAL(timeout()), SLOT(emitTick()));
     }
-    connect(this, SIGNAL(stateChanged(Phonon::State,Phonon::State)), 
-            this, SLOT(notifyStateChange(Phonon::State,Phonon::State)));
+    connect(this, SIGNAL(stateChanged(Phonon::State, Phonon::State)),
+            this, SLOT(notifyStateChange(Phonon::State, Phonon::State)));
 
 }
 
@@ -136,6 +139,14 @@
     return QString();
 }
 
+void
+pluginInstallationDone( GstInstallPluginsReturn res, gpointer userData )
+{
+    // Nothing inside yet
+    Q_UNUSED(res);
+    Q_UNUSED(userData);
+}
+
 void MediaObject::saveState()
 {
     //Only first resumeState is respected
@@ -195,13 +206,35 @@
     if (m_missingCodecs.size() > 0) {
         bool canPlay = (m_hasAudio || m_videoStreamFound);
         Phonon::ErrorType error = canPlay ? Phonon::NormalError : Phonon::FatalError;
+#ifdef PLUGIN_INSTALL_API
+        GstInstallPluginsContext *ctx = gst_install_plugins_context_new ();
+        gchar *details[2];
+        details[0] = m_missingCodecs[0].toLocal8Bit().data();
+        details[1] = NULL;
+        GstInstallPluginsReturn status;
+
+        status = gst_install_plugins_async( details, ctx, pluginInstallationDone, NULL );
+        gst_install_plugins_context_free ( ctx );
+
+        if ( status != GST_INSTALL_PLUGINS_STARTED_OK )
+        {
+            if( status == GST_INSTALL_PLUGINS_HELPER_MISSING )
+                setError(QString(tr("Missing codec helper script assistant.")), Phonon::FatalError );
+            else
+                setError(QString(tr("Plugin codec installation failed for codec: %0"))
+                        .arg(m_missingCodecs[0].split("|")[3]), error);
+        }
+        m_missingCodecs.clear();
+#else
+        QString codecs = m_missingCodecs.join(", ");
+
         if (error == Phonon::NormalError && m_hasVideo && !m_videoStreamFound) {
             m_hasVideo = false;
             emit hasVideoChanged(false);
         }
-        QString codecs = m_missingCodecs.join(", ");
         setError(QString(tr("A required codec is missing. You need to install the following codec(s) to play this content: %0")).arg(codecs), error);
         m_missingCodecs.clear();
+#endif
     }
 }
 
@@ -248,7 +281,16 @@
         value = QString::fromUtf8(gst_structure_get_name (str));
 
     }
-    media->addMissingCodecName(value);
+
+#ifdef PLUGIN_INSTALL_API
+    QString plugins = QString("gstreamer|0.10|%0|%1|decoder-%2")
+        .arg( qApp->applicationName() )
+        .arg( value )
+        .arg( QString::fromUtf8(gst_caps_to_string (caps) ) );
+    media->addMissingCodecName( plugins );
+#else
+    media->addMissingCodecName( value );
+#endif
 }
 
 static void notifyVideoCaps(GObject *obj, GParamSpec *, gpointer data)
@@ -309,7 +351,7 @@
             m_backend->logMessage("Video track connected", Backend::Info, this);
             // Note that the notify::caps _must_ be installed after linking to work with Dapper
             m_capsHandler = g_signal_connect(pad, "notify::caps", G_CALLBACK(notifyVideoCaps), this);
- 
+
             if (!m_loading && !m_hasVideo) {
                 m_hasVideo = m_videoStreamFound;
                 emit hasVideoChanged(m_hasVideo);
@@ -368,7 +410,10 @@
     }
 
     // Create a new datasource based on the input URL
-    QByteArray encoded_cstr_url = url.toEncoded();
+    // add the 'file' scheme if it's missing; the double '/' is needed!
+    QByteArray encoded_cstr_url = (url.scheme() == QLatin1String("") ?
+                    "file://" + url.toEncoded() :
+                    url.toEncoded());
     m_datasource = gst_element_make_from_uri(GST_URI_SRC, encoded_cstr_url.constData(), (const char*)NULL);
     if (!m_datasource)
         return false;
@@ -388,6 +433,14 @@
             g_object_set (G_OBJECT (m_datasource), "read-speed", 2, (const char*)NULL);
             m_backend->logMessage(QString("new device speed : 2X"), Backend::Info, this);
         }
+  }
+
+    /* make HTTP sources send extra headers so we get icecast
+     * metadata in case the stream is an icecast stream */
+    if (encoded_cstr_url.startsWith("http://")
+        && g_object_class_find_property (G_OBJECT_GET_CLASS (m_datasource), "iradio-mode")) {
+        g_object_set (m_datasource, "iradio-mode", TRUE, NULL);
+        m_isStream = true;
     }
 
     // Link data source into pipeline
@@ -442,7 +495,7 @@
     gst_object_ref (GST_OBJECT (m_pipeline));
     gst_object_sink (GST_OBJECT (m_pipeline));
 
-    m_decodebin = gst_element_factory_make ("decodebin", NULL);
+    m_decodebin = gst_element_factory_make ("decodebin2", NULL);
     g_signal_connect (m_decodebin, "new-decoded-pad", G_CALLBACK (&cb_newpad), this);
     g_signal_connect (m_decodebin, "unknown-type", G_CALLBACK (&cb_unknown_type), this);
     g_signal_connect (m_decodebin, "no-more-pads", G_CALLBACK (&cb_no_more_pads), this);
@@ -646,7 +699,7 @@
             m_backend->logMessage("EOS already reached", Backend::Info, this);
         } else if (currentState == GST_STATE_PLAYING) {
             changeState(Phonon::PlayingState);
-        } else if (!m_atEndOfStream && gst_element_set_state(m_pipeline, GST_STATE_PLAYING) != GST_STATE_CHANGE_FAILURE) {
+        } else if (gst_element_set_state(m_pipeline, GST_STATE_PLAYING) != GST_STATE_CHANGE_FAILURE) {
             m_pendingState = Phonon::PlayingState;
         } else {
             m_backend->logMessage("phonon state request failed", Backend::Info, this);
@@ -676,7 +729,7 @@
         return;
 
     Phonon::State oldState = m_state;
-    m_state = newstate; // m_state must be set before emitting, since 
+    m_state = newstate; // m_state must be set before emitting, since
                         // Error state requires that state() will return the new value
     m_pendingState = newstate;
     emit stateChanged(newstate, oldState);
@@ -696,6 +749,8 @@
 
     case Phonon::StoppedState:
         m_backend->logMessage("phonon state changed: Stopped", Backend::Info, this);
+        // We must reset the pipeline when playing again
+        m_resetNeeded = true;
         m_tickTimer->stop();
         break;
 
@@ -861,7 +916,7 @@
     // such as failing duration queries etc
     GstState state;
     gst_element_set_state(m_pipeline, GST_STATE_NULL);
-    gst_element_get_state (m_pipeline, &state, NULL, 2000);
+    gst_element_get_state(m_pipeline, &state, NULL, 2000);
 
     m_source = source;
     emit currentSourceChanged(m_source);
@@ -871,7 +926,9 @@
     // Go into to loading state
     changeState(Phonon::LoadingState);
     m_loading = true;
-    m_resetNeeded = false;
+    // IMPORTANT: Honor the m_resetNeeded flag as it currently stands.
+    // See https://qa.mandriva.com/show_bug.cgi?id=56807
+    //m_resetNeeded = false;
     m_resumeState = false;
     m_pendingState = Phonon::StoppedState;
 
@@ -884,8 +941,8 @@
     // Clear any existing errors
     m_aboutToFinishEmitted = false;
     m_error = NoError;
-    m_errorString = QString();
-    
+    m_errorString.clear();
+
     m_bufferPercent = 0;
     m_prefinishMarkReachedNotEmitted = true;
     m_aboutToFinishEmitted = false;
@@ -894,22 +951,23 @@
     setTotalTime(-1);
     m_atEndOfStream = false;
 
-    // Clear exising meta tags
+    m_availableTitles = 0;
+    m_pendingTitle = 1;
+    m_currentTitle = 1;
+
+    // Clear existing meta tags
     m_metaData.clear();
+    m_isStream = false;
 
     switch (source.type()) {
-    case MediaSource::Url: {            
-            if (createPipefromURL(source.url()))
-                m_loading = true;
-            else
+    case MediaSource::Url: {
+            if (!createPipefromURL(source.url()))
                 setError(tr("Could not open media source."));
         }
         break;
 
     case MediaSource::LocalFile: {
-            if (createPipefromURL(QUrl::fromLocalFile(source.fileName())))
-                m_loading = true;
-            else
+            if (!createPipefromURL(QUrl::fromLocalFile(source.fileName())))
                 setError(tr("Could not open media source."));
         }
         break;
@@ -922,17 +980,15 @@
         break;
 
     case MediaSource::Stream:
-        if (createPipefromStream(source))
-            m_loading = true;
-        else
+        if (!createPipefromStream(source))
             setError(tr("Could not open media source."));
         break;
 
     case MediaSource::Disc:
         {
-            QString mediaUrl;
-            switch (source.discType()) {
-            case Phonon::NoDisc:
+       QString mediaUrl;
+       switch (source.discType()) {
+       case Phonon::NoDisc:
                 qWarning() << "I should never get to see a MediaSource that is a disc but doesn't specify which one";
                 return;
             case Phonon::Cd:  // CD tracks can be specified by setting the url in the following way uri=cdda:4
@@ -948,9 +1004,7 @@
                 qWarning() <<  "media " << source.discType() << " not implemented";
                 return;
             }
-            if (!mediaUrl.isEmpty() && createPipefromURL(QUrl(mediaUrl)))
-                m_loading = true;
-            else
+            if (mediaUrl.isEmpty() || !createPipefromURL(QUrl(mediaUrl)))
                 setError(tr("Could not open media source."));
         }
         break;
@@ -966,8 +1020,7 @@
 
     // We need to link this node to ensure that fake sinks are connected
     // before loading, otherwise the stream will be blocked
-    if (m_loading)
-        link();
+    link();
     beginLoad();
 }
 
@@ -1004,22 +1057,22 @@
         emit hasVideoChanged(m_hasVideo);
     }
 
-    m_availableTitles = 1;
-    gint64 titleCount;
-    GstFormat format = gst_format_get_by_nick("track");
-    if (gst_element_query_duration (m_pipeline, &format, &titleCount)) {
+    if (m_source.discType() == Phonon::Cd) {
+        gint64 titleCount;
+        GstFormat format = gst_format_get_by_nick("track");
+        if (gst_element_query_duration (m_pipeline, &format, &titleCount)) {
         //check if returned format is still "track",
         //gstreamer sometimes returns the total time, if tracks information is not available.
-        if (qstrcmp(gst_format_get_name(format), "track") == 0)  {
-            int oldAvailableTitles = m_availableTitles;
-            m_availableTitles = (int)titleCount;
-            if (m_availableTitles != oldAvailableTitles) {
-                emit availableTitlesChanged(m_availableTitles);
-                m_backend->logMessage(QString("Available titles changed: %0").arg(m_availableTitles), Backend::Info, this);
+            if (qstrcmp(gst_format_get_name(format), "track") == 0)  {
+                int oldAvailableTitles = m_availableTitles;
+                m_availableTitles = (int)titleCount;
+                if (m_availableTitles != oldAvailableTitles) {
+                    emit availableTitlesChanged(m_availableTitles);
+                    m_backend->logMessage(QString("Available titles changed: %0").arg(m_availableTitles), Backend::Info, this);
+                }
             }
         }
     }
-
 }
 
 void MediaObject::setPrefinishMark(qint32 newPrefinishMark)
@@ -1077,7 +1130,7 @@
         }
 
         quint64 current = currentTime();
-        quint64 total = totalTime(); 
+        quint64 total = totalTime();
 
         if (current < total - m_prefinishMark)
             m_prefinishMarkReachedNotEmitted = true;
@@ -1098,7 +1151,7 @@
 
     if (m_tickInterval > 0 && currentTime != m_previousTickTime) {
         emit tick(currentTime);
-        m_previousTickTime = currentTime;        
+        m_previousTickTime = currentTime;
     }
     if (m_state == Phonon::PlayingState) {
         if (currentTime >= totalTime - m_prefinishMark) {
@@ -1109,7 +1162,12 @@
         }
         // Prepare load of next source
         if (currentTime >= totalTime - ABOUT_TO_FINNISH_TIME) {
-            if (!m_aboutToFinishEmitted) {
+            if (m_source.type() == MediaSource::Disc &&
+                m_autoplayTitles &&
+                m_availableTitles > 1 &&
+                m_currentTitle < m_availableTitles) {
+                m_aboutToFinishEmitted = false;
+            } else if (!m_aboutToFinishEmitted) {
                 m_aboutToFinishEmitted = true; // track is about to finish
                 emit aboutToFinish();
             }
@@ -1213,8 +1271,8 @@
 
     switch (GST_MESSAGE_TYPE (gstMessage)) {
 
-    case GST_MESSAGE_EOS: 
-        m_backend->logMessage("EOS recieved", Backend::Info, this);
+    case GST_MESSAGE_EOS:
+        m_backend->logMessage("EOS received", Backend::Info, this);
         handleEndOfStream();
         break;
 
@@ -1222,14 +1280,98 @@
             GstTagList* tag_list = 0;
             gst_message_parse_tag(gstMessage, &tag_list);
             if (tag_list) {
+                TagMap newTags;
+                gst_tag_list_foreach (tag_list, &foreach_tag_function, &newTags);
+                gst_tag_list_free(tag_list);
+
+                // Determine if we should no fake the album/artist tags.
+                // This is a little confusing as we want to fake it on initial
+                // connection where title, album and artist are all missing.
+                // There are however times when we get just other information,
+                // e.g. codec, and so we want to only do clever stuff if we
+                // have a commonly available tag (ORGANIZATION) or we have a
+                // change in title
+                bool fake_it =
+                   (m_isStream
+                    && ((!newTags.contains("TITLE")
+                         && newTags.contains("ORGANIZATION"))
+                        || (newTags.contains("TITLE")
+                            && m_metaData.value("TITLE") != newTags.value("TITLE")))
+                    && !newTags.contains("ALBUM")
+                    && !newTags.contains("ARTIST"));
+
                 TagMap oldMap = m_metaData; // Keep a copy of the old one for reference
-                // Append any new meta tags to the existing tag list
-                gst_tag_list_foreach (tag_list, &foreach_tag_function, &m_metaData);
+
+                // Now we've checked the new data, append any new meta tags to the existing tag list
+                // We cannot use TagMap::iterator as this is a multimap and when streaming data
+                // could in theory be lost.
+                QList<QString> keys = newTags.keys();
+                for (QList<QString>::iterator i = keys.begin(); i != keys.end(); ++i) {
+                    QString key = *i;
+                    if (m_isStream) {
+                        // If we're streaming, we need to remove data in m_metaData
+                        // in order to stop it filling up indefinitely (as it's a multimap)
+                        m_metaData.remove(key);
+                    }
+                    QList<QString> values = newTags.values(key);
+                    for (QList<QString>::iterator j = values.begin(); j != values.end(); ++j) {
+                        QString value = *j;
+                        QString currVal = m_metaData.value(key);
+                        if (!m_metaData.contains(key) || currVal != value) {
+                            m_metaData.insert(key, value);
+                        }
+                    }
+                }
+
                 m_backend->logMessage("Meta tags found", Backend::Info, this);
-                if (oldMap != m_metaData && !m_loading)
-                    emit metaDataChanged(m_metaData);
-                gst_tag_list_free(tag_list);
-            }
+                if (oldMap != m_metaData) {
+                    // This is a bit of a hack to ensure that stream metadata is
+                    // returned. We get as much as we can from the Shoutcast server's
+                    // StreamTitle= header. If further info is decoded from the stream
+                    // itself later, then it will overwrite this info.
+                    if (m_isStream && fake_it) {
+                        m_metaData.remove("ALBUM");
+                        m_metaData.remove("ARTIST");
+
+                        // Detect whether we want to "fill in the blanks"
+                        QString str;
+                        if (m_metaData.contains("TITLE"))
+                        {
+                            str = m_metaData.value("TITLE");
+                            int splitpoint;
+                            // Check to see if our title matches "%s - %s"
+                            // Where neither %s are empty...
+                            if ((splitpoint = str.indexOf(" - ")) > 0
+                                && str.size() > (splitpoint+3)) {
+                                m_metaData.insert("ARTIST", str.left(splitpoint));
+                                m_metaData.replace("TITLE", str.mid(splitpoint+3));
+                            }
+                        } else {
+                            str = m_metaData.value("GENRE");
+                            if (!str.isEmpty())
+                                m_metaData.insert("TITLE", str);
+                            else
+                                m_metaData.insert("TITLE", "Streaming Data");
+                        }
+                        if (!m_metaData.contains("ARTIST")) {
+                            str = m_metaData.value("LOCATION");
+                            if (!str.isEmpty())
+                                m_metaData.insert("ARTIST", str);
+                            else
+                                m_metaData.insert("ARTIST", "Streaming Data");
+                        }
+                        str = m_metaData.value("ORGANIZATION");
+                        if (!str.isEmpty())
+                            m_metaData.insert("ALBUM", str);
+                        else
+                            m_metaData.insert("ALBUM", "Streaming Data");
+                    }
+                    // As we manipulate the title, we need to recompare
+                    // oldMap and m_metaData here...
+                    if (oldMap != m_metaData && !m_loading)
+                        emit metaDataChanged(m_metaData);
+                }
+			}
         }
         break;
 
@@ -1255,6 +1397,9 @@
                 m_backend->logMessage("gstreamer: pipeline state set to playing", Backend::Info, this);
                 m_tickTimer->start();
                 changeState(Phonon::PlayingState);
+                if ((m_source.type() == MediaSource::Disc) && (m_currentTitle != m_pendingTitle)) {
+                    setTrack(m_pendingTitle);
+                }
                 if (m_resumeState && m_oldState == Phonon::PlayingState) {
                     seek(m_oldPos);
                     m_resumeState = false;
@@ -1290,6 +1435,9 @@
                     changeState(Phonon::StoppedState);
                 m_backend->logMessage("gstreamer: pipeline state set to ready", Backend::Debug, this);
                 m_tickTimer->stop();
+                if ((m_source.type() == MediaSource::Disc) && (m_currentTitle != m_pendingTitle)) {
+                    setTrack(m_pendingTitle);
+                }
                 break;
 
             case GST_STATE_VOID_PENDING :
@@ -1328,7 +1476,7 @@
                             setError(err->message, Phonon::FatalError);
                         gst_caps_unref (caps);
                         gst_object_unref (sinkPad);
-                   } 
+                   }
                } else {
                     setError(QString(err->message), Phonon::FatalError);
                }
@@ -1400,8 +1548,8 @@
         //case GST_MESSAGE_STEP_DONE:
         //case GST_MESSAGE_LATENCY: only from 0.10.12
         //case GST_MESSAGE_ASYNC_DONE: only from 0.10.13
-    default: 
-        break; 
+    default:
+        break;
     }
 }
 
@@ -1417,7 +1565,8 @@
     if (!m_seekable)
         m_atEndOfStream = true;
 
-    if (m_autoplayTitles &&
+    if (m_source.type() == MediaSource::Disc &&
+        m_autoplayTitles &&
         m_availableTitles > 1 &&
         m_currentTitle < m_availableTitles) {
         _iface_setCurrentTitle(m_currentTitle + 1);
@@ -1444,6 +1593,14 @@
     }
 }
 
+void MediaObject::invalidateGraph()
+{
+    m_resetNeeded = true;
+    if (m_state == Phonon::PlayingState || m_state == Phonon::PausedState) {
+        changeState(Phonon::StoppedState);
+    }
+}
+
 // Notifes the pipeline about state changes in the media object
 void MediaObject::notifyStateChange(Phonon::State newstate, Phonon::State oldstate)
 {
@@ -1502,15 +1659,30 @@
 
 void MediaObject::_iface_setCurrentTitle(int title)
 {
-    GstFormat trackFormat = gst_format_get_by_nick("track");
     m_backend->logMessage(QString("setCurrentTitle %0").arg(title), Backend::Info, this);
-    if ((title == m_currentTitle) || (title < 1) || (title > m_availableTitles))
+    if ((title == m_currentTitle) || (title == m_pendingTitle))
+        return;
+
+    m_pendingTitle = title;
+
+    if (m_state == Phonon::PlayingState || m_state == Phonon::StoppedState) {
+        setTrack(m_pendingTitle);
+    } else {
+        setState(Phonon::StoppedState);
+    }
+}
+
+void MediaObject::setTrack(int title)
+{
+    if (((m_state != Phonon::PlayingState) && (m_state != Phonon::StoppedState)) || (title < 1) || (title > m_availableTitles))
         return;
 
-    m_currentTitle = title;
 
     //let's seek to the beginning of the song
-    if (gst_element_seek_simple(m_pipeline, trackFormat, GST_SEEK_FLAG_FLUSH, m_currentTitle - 1)) {
+    GstFormat trackFormat = gst_format_get_by_nick("track");
+    m_backend->logMessage(QString("setTrack %0").arg(title), Backend::Info, this);
+    if (gst_element_seek_simple(m_pipeline, trackFormat, GST_SEEK_FLAG_FLUSH, title - 1)) {
+        m_currentTitle = title;
         updateTotalTime();
         m_atEndOfStream = false;
         emit titleChanged(title);
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/mediaobject.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/mediaobject.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/mediaobject.h	2010-04-13 18:06:58.305856961 -0400
@@ -55,6 +55,7 @@
         , public MediaNode
 {
     friend class Stream;
+    friend class AudioDataOutput;
     Q_OBJECT
     Q_INTERFACES(Phonon::MediaObjectInterface
 #ifndef QT_NO_PHONON_MEDIACONTROLLER
@@ -144,12 +145,8 @@
     void handleBusMessage(const Message &msg);
     void handleEndOfStream();
     void addMissingCodecName(const QString &codec) { m_missingCodecs.append(codec); }
-    void invalidateGraph() {
-        m_resetNeeded = true;
-        if (m_state == Phonon::PlayingState || m_state == Phonon::PausedState) {
-            changeState(Phonon::StoppedState);
-        }
-    }
+    void invalidateGraph();
+
     static void cb_newpad (GstElement *decodebin, GstPad *pad, gboolean last, gpointer data);
     static void cb_pad_added (GstElement *decodebin, GstPad *pad, gpointer data);
     static void cb_unknown_type (GstElement *decodebin, GstPad *pad, GstCaps *caps, gpointer data);
@@ -236,6 +233,7 @@
     int _iface_availableTitles() const;
     int _iface_currentTitle() const;
     void _iface_setCurrentTitle(int title);
+    void setTrack(int title);
 
     bool m_resumeState;
     State m_oldState;
@@ -250,6 +248,7 @@
     MediaSource m_nextSource;
     qint32 m_prefinishMark;
     qint32 m_transitionTime;
+	bool m_isStream;
 
     qint64 m_posAtSeek;
 
@@ -285,6 +284,7 @@
     bool m_autoplayTitles;
     int m_availableTitles;
     int m_currentTitle;
+    int m_pendingTitle;
 };
 }
 } //namespace Phonon::Gstreamer
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/qwidgetvideosink.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/qwidgetvideosink.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/qwidgetvideosink.h	2010-04-13 18:06:58.305856961 -0400
@@ -19,6 +19,7 @@
 #define Phonon_GSTREAMER_VIDEOSINK_H
 
 #include "common.h"
+#include "qwidgetvideosink.h"
 
 #include <QtCore/QByteArray>
 #include <QtCore/QEvent>
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/videowidget.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/videowidget.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/videowidget.h	2010-04-13 18:06:58.305856961 -0400
@@ -25,6 +25,7 @@
 #include "common.h"
 #include "medianode.h"
 #include "abstractrenderer.h"
+#include "videowidget.h"
 
 #include <gst/gst.h>
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/x11renderer.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/gstreamer/x11renderer.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/gstreamer/x11renderer.cpp	2010-04-13 18:06:58.305856961 -0400
@@ -90,7 +90,7 @@
             gst_object_unref(GST_OBJECT(videoSink));
             videoSink = 0;
         } else {
-            // Note that this should not really be neccessary as these are 
+            // Note that this should not really be necessary as these are
             // default values, though under certain conditions values are retained
             // even between application instances. (reproducible on 0.10.16/Gutsy)
             g_object_set(G_OBJECT(videoSink), "brightness", 0, (const char*)NULL);
@@ -138,6 +138,7 @@
 void X11Renderer::movieSizeChanged(const QSize &movieSize)
 {
     Q_UNUSED(movieSize);
+
     if (m_renderWidget) {
         m_renderWidget->setGeometry(m_videoWidget->calculateDrawFrameRect());
     }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/CMakeLists.txt
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/CMakeLists.txt	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/CMakeLists.txt	2010-04-13 18:06:58.305856961 -0400
@@ -8,6 +8,30 @@
 
 add_subdirectory(experimental)
 
+set(PULSEAUDIO_MINIMUM_VERSION "0.9.15")
+macro_optional_find_package(PulseAudio)
+if (PULSEAUDIO_FOUND)
+    # PULSEAUDIO_DEVICE_MANAGER feature check could be moved to FindPulseAudio.cmake, hint hint. -- Rex
+    macro_ensure_version("0.9.21" "${PULSEAUDIO_VERSION}" PULSEAUDIO_DEVICE_MANAGER)
+endif (PULSEAUDIO_FOUND)
+macro_log_feature(PULSEAUDIO_FOUND "PulseAudio" "A cross-platform, networked sound server." "http://www.pulseaudio.org" FALSE "" "Allows audio playback via the PulseAudio soundserver when it is running")
+macro_optional_find_package(GLIB2)
+macro_log_feature(GLIB2_FOUND "GLib2" "GLib 2 is required to compile the pulseaudio for Phonon" "http://www.gtk.org/download/" FALSE)
+
+
+if (GLIB2_FOUND AND PULSEAUDIO_FOUND)
+   add_definitions(-DHAVE_PULSEAUDIO)
+   include_directories(${GLIB2_INCLUDE_DIR} ${PULSEAUDIO_INCLUDE_DIR})
+   if (PULSEAUDIO_DEVICE_MANAGER)
+      add_definitions(-DHAVE_PULSEAUDIO_DEVICE_MANAGER)
+   endif(PULSEAUDIO_DEVICE_MANAGER)
+else(GLIB2_FOUND AND PULSEAUDIO_FOUND)
+   set(PULSEAUDIO_INCLUDE_DIR "")
+   set(PULSEAUDIO_LIBRARY "")
+   set(PULSEAUDIO_MAINLOOP_LIBRARY "")
+endif(GLIB2_FOUND AND PULSEAUDIO_FOUND)
+
+
 set(phonon_LIB_SRCS
    objectdescription.cpp
    objectdescriptionmodel.cpp
@@ -35,9 +59,12 @@
    videowidget.cpp
    videoplayer.cpp
    seekslider.cpp
+   swiftslider.cpp
    volumeslider.cpp
    effectwidget.cpp
    iodevicestream.cpp
+   audiodataoutput.cpp
+   pulsesupport.cpp
    )
 
 if (QT_QTDBUS_FOUND)
@@ -50,6 +77,10 @@
 add_definitions(-DPHONON_LIBRARY_PATH="${PLUGIN_INSTALL_DIR}/plugins")
 automoc4_add_library(phonon SHARED ${phonon_LIB_SRCS})
 target_link_libraries(phonon ${QT_QTCORE_LIBRARY} ${QT_QTGUI_LIBRARY})
+if (GLIB2_FOUND AND PULSEAUDIO_FOUND)
+target_link_libraries(phonon ${GLIB2_LIBRARIES} ${GOBJECT_LIBRARIES} ${PULSEAUDIO_LIBRARY} ${PULSEAUDIO_MAINLOOP_LIBRARY})
+endif (GLIB2_FOUND AND PULSEAUDIO_FOUND)
+
 if (QT_QTDBUS_FOUND)
   target_link_libraries(phonon ${QT_QTDBUS_LIBRARY})
 endif (QT_QTDBUS_FOUND)
@@ -99,6 +130,10 @@
    volumeslider.h
    effectwidget.h
    platformplugin.h
+   audiodataoutput.h
+   audiodataoutputinterface.h
+   globalconfig.h
+   pulsesupport.h
    DESTINATION ${INCLUDE_INSTALL_DIR}/phonon COMPONENT Devel)
 
 install(FILES org.kde.Phonon.AudioOutput.xml  DESTINATION  ${DBUS_INTERFACES_INSTALL_DIR})
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiodataoutput.cpp
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiodataoutput.cpp	2010-04-13 18:06:58.309854047 -0400
@@ -0,0 +1,66 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2005 Matthias Kretz <kretz@kde.org>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#include "audiodataoutput.h"
+#include "audiodataoutput_p.h"
+#include "factory_p.h"
+
+#define PHONON_CLASSNAME AudioDataOutput
+
+namespace Phonon
+{
+
+PHONON_HEIR_IMPL(AbstractAudioOutput)
+
+PHONON_GETTER(int, dataSize, d->dataSize)
+PHONON_GETTER(int, sampleRate, -1)
+PHONON_SETTER(setDataSize, dataSize, int)
+
+bool AudioDataOutputPrivate::aboutToDeleteBackendObject()
+{
+    Q_ASSERT(m_backendObject);
+    pBACKEND_GET(int, dataSize, "dataSize");
+
+    return AbstractAudioOutputPrivate::aboutToDeleteBackendObject();
+}
+
+void AudioDataOutputPrivate::setupBackendObject()
+{
+    Q_Q(AudioDataOutput);
+    Q_ASSERT(m_backendObject);
+    AbstractAudioOutputPrivate::setupBackendObject();
+
+    // set up attributes
+    pBACKEND_CALL1("setDataSize", int, dataSize);
+
+    qRegisterMetaType<QMap<Phonon::AudioDataOutput::Channel, QVector<qint16> > >("QMap<Phonon::AudioDataOutput::Channel, QVector<qint16> >");
+
+    QObject::connect(m_backendObject,
+            SIGNAL(dataReady(const QMap<Phonon::AudioDataOutput::Channel, QVector<qint16> > &)),
+            q, SIGNAL(dataReady(const QMap<Phonon::AudioDataOutput::Channel, QVector<qint16> > &)));
+    QObject::connect(m_backendObject, SIGNAL(endOfMedia(int)), q, SIGNAL(endOfMedia(int)));
+}
+
+} // namespace Phonon
+
+#undef PHONON_CLASSNAME
+// vim: sw=4 ts=4 tw=80
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiodataoutput.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiodataoutput.h	2010-04-13 18:06:58.309854047 -0400
@@ -0,0 +1,129 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2005-2006 Matthias Kretz <kretz@kde.org>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+#ifndef Phonon_AUDIODATAOUTPUT_H
+#define Phonon_AUDIODATAOUTPUT_H
+
+#include "phonon_export.h"
+#include "abstractaudiooutput.h"
+#include "phonondefs.h"
+
+#ifndef DOXYGEN_SHOULD_SKIP_THIS
+template<typename T> class QVector;
+template<typename Key, typename T> class QMap;
+#endif
+
+namespace Phonon
+{
+    class AudioDataOutputPrivate;
+
+    /**
+     * \short This class gives you the audio data (for visualizations).
+     *
+     * This class implements a special AbstractAudioOutput that gives your
+     * application the audio data. Don't expect realtime performance. But
+     * the latencies should be low enough to use the audio data for
+     * visualizations. You can also use the audio data for further processing
+     * (e.g. encoding and saving to a file).
+     *
+     * \author Matthias Kretz <kretz@kde.org>
+     */
+    class PHONON_EXPORT AudioDataOutput : public AbstractAudioOutput
+    {
+        Q_OBJECT
+        K_DECLARE_PRIVATE(AudioDataOutput)
+        Q_ENUMS(Channel)
+        Q_PROPERTY(int dataSize READ dataSize WRITE setDataSize)
+        PHONON_HEIR(AudioDataOutput)
+        public:
+            /**
+             * Specifies the channel the audio data belongs to.
+             */
+            enum Channel
+            {
+                LeftChannel,
+                RightChannel,
+                CenterChannel,
+                LeftSurroundChannel,
+                RightSurroundChannel,
+                SubwooferChannel
+            };
+
+            /**
+             * Returns the currently used number of samples passed through
+             * the signal.
+             *
+             * \see setDataSize
+             */
+            int dataSize() const;
+
+            /**
+             * Returns the sample rate in Hz. Common sample rates are 44100 Hz
+             * and 48000 Hz. AudioDataOutput will not do any sample rate
+             * conversion for you. If you need to convert the sample rate you
+             * might want to take a look at libsamplerate. For visualizations it
+             * is often enough to do simple interpolation or even drop/duplicate
+             * samples.
+             *
+             * \return The sample rate as reported by the backend. If the
+             * backend is unavailable -1 is returned.
+             */
+            int sampleRate() const;
+
+        public Q_SLOTS:
+            /**
+             * Sets the number of samples to be passed in one signal emission.
+             *
+             * Defaults to 512 samples per emitted signal.
+             *
+             * \param size the number of samples
+             */
+            void setDataSize(int size);
+
+        Q_SIGNALS:
+            /**
+             * Emitted whenever another dataSize number of samples are ready.
+             *
+             * \param data A mapping of Channel to a vector holding the audio data.
+             */
+            void dataReady(const QMap<Phonon::AudioDataOutput::Channel, QVector<qint16> > &data);
+
+
+            /**
+             * This signal is emitted before the last dataReady signal of a
+             * media is emitted.
+             *
+             * If, for example, the playback of a media file has finished and the
+             * last audio data of that file is going to be passed with the next
+             * dataReady signal, and only the 28 first samples of the data
+             * vector are from that media file endOfMedia will be emitted right
+             * before dataReady with \p remainingSamples = 28.
+             *
+             * \param remainingSamples The number of samples in the next
+             * dataReady vector that belong to the media that was playing to
+             * this point.
+             */
+            void endOfMedia(int remainingSamples);
+    };
+} // namespace Phonon
+
+// vim: sw=4 ts=4 tw=80
+#endif // Phonon_AUDIODATAOUTPUT_H
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiodataoutput_p.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiodataoutput_p.h	2010-04-13 18:06:58.309854047 -0400
@@ -0,0 +1,48 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2006 Matthias Kretz <kretz@kde.org>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#ifndef AUDIODATAOUTPUT_P_H
+#define AUDIODATAOUTPUT_P_H
+
+#include "audiodataoutput.h"
+#include "abstractaudiooutput_p.h"
+
+namespace Phonon
+{
+
+class AudioDataOutputPrivate : public AbstractAudioOutputPrivate
+{
+    Q_DECLARE_PUBLIC(AudioDataOutput)
+    PHONON_PRIVATECLASS
+    protected:
+        AudioDataOutputPrivate()
+            : dataSize(512)
+        {
+        }
+
+        int dataSize;
+};
+
+} // namespace Phonon
+
+#endif // AUDIODATAOUTPUT_P_H
+// vim: sw=4 ts=4 tw=80
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiodataoutputinterface.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiodataoutputinterface.h	2010-04-13 18:06:58.309854047 -0400
@@ -0,0 +1,44 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2008 Matthias Kretz <kretz@kde.org>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#ifndef PHONON_AUDIODATAOUTPUTINTERFACE_H
+#define PHONON_AUDIODATAOUTPUTINTERFACE_H
+
+namespace Phonon
+{
+
+class AudioDataOutput;
+
+class AudioDataOutputInterface
+{
+    public:
+        virtual ~AudioDataOutputInterface() {}
+
+        virtual AudioDataOutput *frontendObject() const = 0;
+        virtual void setFrontendObject(AudioDataOutput *) = 0;
+};
+
+} // namespace Phonon
+
+Q_DECLARE_INTERFACE(Phonon::AudioDataOutputInterface, "0AudioDataOutputInterface.phonon.kde.org")
+
+#endif // PHONON_AUDIODATAOUTPUTINTERFACE_H
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiooutput.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/audiooutput.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiooutput.cpp	2010-04-13 18:06:58.309854047 -0400
@@ -24,10 +24,11 @@
 #include "factory_p.h"
 #include "objectdescription.h"
 #include "audiooutputadaptor_p.h"
-#include "globalconfig_p.h"
+#include "globalconfig.h"
 #include "audiooutputinterface.h"
 #include "phononnamespace_p.h"
 #include "platform_p.h"
+#include "pulsesupport.h"
 
 #include <QtCore/qmath.h>
 
@@ -42,8 +43,12 @@
 namespace Phonon
 {
 
-static inline bool callSetOutputDevice(MediaNodePrivate *const d, int index)
+static inline bool callSetOutputDevice(AudioOutputPrivate *const d, int index)
 {
+    PulseSupport *pulse = PulseSupport::getInstance();
+    if (pulse->isActive())
+        return pulse->setOutputDevice(d->getStreamUuid(), index);
+
     Iface<IFACES2> iface(d);
     if (iface) {
         return iface->setOutputDevice(AudioOutputDevice::fromIndex(index));
@@ -51,8 +56,12 @@
     return Iface<IFACES0>::cast(d)->setOutputDevice(index);
 }
 
-static inline bool callSetOutputDevice(MediaNodePrivate *const d, const AudioOutputDevice &dev)
+static inline bool callSetOutputDevice(AudioOutputPrivate *const d, const AudioOutputDevice &dev)
 {
+    PulseSupport *pulse = PulseSupport::getInstance();
+    if (pulse->isActive())
+        return pulse->setOutputDevice(d->getStreamUuid(), dev.index());
+
     Iface<IFACES2> iface(d);
     if (iface) {
         return iface->setOutputDevice(dev);
@@ -89,16 +98,20 @@
 #endif
 
     category = c;
-
-    // select hardware device according to the category
-    device = AudioOutputDevice::fromIndex(GlobalConfig().audioOutputDeviceFor(category, GlobalConfig::AdvancedDevicesFromSettings | GlobalConfig::HideUnavailableDevices));
+    streamUuid = QUuid::createUuid().toString();
+    PulseSupport *pulse = PulseSupport::getInstance();
+    pulse->setStreamPropList(category, streamUuid);
+    q->connect(pulse, SIGNAL(usingDevice(QString,int)), SLOT(_k_deviceChanged(QString,int)));
 
     createBackendObject();
 
     q->connect(Factory::sender(), SIGNAL(availableAudioOutputDevicesChanged()), SLOT(_k_deviceListChanged()));
 }
 
-
+QString AudioOutputPrivate::getStreamUuid()
+{
+    return streamUuid;
+}
 
 void AudioOutputPrivate::createBackendObject()
 {
@@ -106,6 +119,7 @@
         return;
     Q_Q(AudioOutput);
     m_backendObject = Factory::createAudioOutput(q);
+    device = AudioOutputDevice::fromIndex(GlobalConfig().audioOutputDeviceFor(category, GlobalConfig::AdvancedDevicesFromSettings | GlobalConfig::HideUnavailableDevices));
     if (m_backendObject) {
         setupBackendObject();
     }
@@ -220,21 +234,21 @@
 {
     K_D(AudioOutput);
     if (!newAudioOutputDevice.isValid()) {
-        d->outputDeviceOverridden = false;
+        d->outputDeviceOverridden = d->forceMove = false;
         const int newIndex = GlobalConfig().audioOutputDeviceFor(d->category);
         if (newIndex == d->device.index()) {
             return true;
         }
         d->device = AudioOutputDevice::fromIndex(newIndex);
     } else {
-        d->outputDeviceOverridden = true;
+        d->outputDeviceOverridden = d->forceMove = true;
         if (d->device == newAudioOutputDevice) {
             return true;
         }
         d->device = newAudioOutputDevice;
     }
     if (k_ptr->backendObject()) {
-        return callSetOutputDevice(k_ptr, d->device.index());
+        return callSetOutputDevice(d, d->device.index());
     }
     return true;
 }
@@ -261,7 +275,10 @@
 
 #ifndef QT_NO_PHONON_SETTINGSGROUP
     // if the output device is not available and the device was not explicitly set
-    if (!callSetOutputDevice(this, device) && !outputDeviceOverridden) {
+    // There is no need to set the output device initially if PA is used as
+    // we know it will not work (stream doesn't exist yet) and that this will be
+    // handled by _k_deviceChanged()
+    if (!PulseSupport::getInstance()->isActive() && !callSetOutputDevice(this, device) && !outputDeviceOverridden) {
         // fall back in the preference list of output devices
         QList<int> deviceList = GlobalConfig().audioOutputDeviceListFor(category, GlobalConfig::AdvancedDevicesFromSettings | GlobalConfig::HideUnavailableDevices);
         if (deviceList.isEmpty()) {
@@ -306,10 +323,14 @@
 
 void AudioOutputPrivate::_k_audioDeviceFailed()
 {
+    if (PulseSupport::getInstance()->isActive())
+        return;
+
+#ifndef QT_NO_PHONON_SETTINGSGROUP
+
     pDebug() << Q_FUNC_INFO;
     // outputDeviceIndex identifies a failing device
     // fall back in the preference list of output devices
-#ifndef QT_NO_PHONON_SETTINGSGROUP
     const QList<int> deviceList = GlobalConfig().audioOutputDeviceListFor(category, GlobalConfig::AdvancedDevicesFromSettings | GlobalConfig::HideUnavailableDevices);
     for (int i = 0; i < deviceList.count(); ++i) {
         const int devIndex = deviceList.at(i);
@@ -331,8 +352,15 @@
 
 void AudioOutputPrivate::_k_deviceListChanged()
 {
-    pDebug() << Q_FUNC_INFO;
+    if (PulseSupport::getInstance()->isActive())
+        return;
+
 #ifndef QT_NO_PHONON_SETTINGSGROUP
+    pDebug() << Q_FUNC_INFO;
+    // Check to see if we have an override and do not change to a higher priority device if the overridden device is still present.
+    if (outputDeviceOverridden && device.property("available").toBool()) {
+        return;
+    }
     // let's see if there's a usable device higher in the preference list
     const QList<int> deviceList = GlobalConfig().audioOutputDeviceListFor(category, GlobalConfig::AdvancedDevicesFromSettings);
     DeviceChangeType changeType = HigherPreferenceChange;
@@ -361,6 +389,36 @@
 #endif //QT_NO_PHONON_SETTINGSGROUP
 }
 
+void AudioOutputPrivate::_k_deviceChanged(QString inStreamUuid, int deviceIndex)
+{
+    // Note that this method is only used by PulseAudio at present.
+    if (inStreamUuid == streamUuid) {
+        // 1. Check to see if we are overridden. If we are, and devices do not match,
+        //    then try and apply our own device as the output device.
+        //    We only do this the first time
+        if (outputDeviceOverridden && forceMove) {
+            forceMove = false;
+            const AudioOutputDevice &currentDevice = AudioOutputDevice::fromIndex(deviceIndex);
+            if (currentDevice != device) {
+                if (!callSetOutputDevice(this, device)) {
+                    // What to do if we are overridden and cannot change to our preferred device?
+                }
+            }
+        }
+        // 2. If we are not overridden, then we need to update our perception of what
+        //    device we are using. If the devices do not match, something lower in the
+        //    stack is overriding our preferences (e.g. a per-application stream preference,
+        //    specific application move, priority list changed etc. etc.)
+        else if (!outputDeviceOverridden) {
+            const AudioOutputDevice &currentDevice = AudioOutputDevice::fromIndex(deviceIndex);
+            if (currentDevice != device) {
+                // The device is not what we think it is, so lets say what is happening.
+                handleAutomaticDeviceChange(currentDevice, SoundSystemChange);
+            }
+        }
+    }
+}
+
 static struct
 {
     int first;
@@ -405,11 +463,33 @@
         g_lastFallback.second = 0;
         }
         break;
+    case SoundSystemChange:
+        {
+#ifndef QT_NO_PHONON_PLATFORMPLUGIN
+        if (device1.property("available").toBool()) {
+            const QString text = AudioOutput::tr("<html>Switching to the audio playback device <b>%1</b><br/>"
+                    "which has higher preference or is specifically configured for this stream.</html>").arg(device2.name());
+            Platform::notification("AudioDeviceFallback", text,
+                    QStringList(AudioOutput::tr("Revert back to device '%1'").arg(device1.name())),
+                    q, SLOT(_k_revertFallback()));
+        } else {
+            const QString &text =
+                AudioOutput::tr("<html>The audio playback device <b>%1</b> does not work.<br/>"
+                        "Falling back to <b>%2</b>.</html>").arg(device1.name()).arg(device2.name());
+            Platform::notification("AudioDeviceFallback", text);
+        }
+#endif //QT_NO_PHONON_PLATFORMPLUGIN
+        //outputDeviceOverridden = true;
+        g_lastFallback.first = 0;
+        g_lastFallback.second = 0;
+        }
+        break;
     }
 }
 
 AudioOutputPrivate::~AudioOutputPrivate()
 {
+    PulseSupport::getInstance()->clearStreamCache(streamUuid);
 #ifndef QT_NO_DBUS
     if (adaptor) {
         emit adaptor->outputDestroyed();
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiooutput.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/audiooutput.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiooutput.h	2010-04-13 18:06:58.313877044 -0400
@@ -169,6 +169,7 @@
             Q_PRIVATE_SLOT(k_func(), void _k_revertFallback())
             Q_PRIVATE_SLOT(k_func(), void _k_audioDeviceFailed())
             Q_PRIVATE_SLOT(k_func(), void _k_deviceListChanged())
+            Q_PRIVATE_SLOT(k_func(), void _k_deviceChanged(QString streamUuid, int device))
     };
 } //namespace Phonon
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiooutput_p.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/audiooutput_p.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiooutput_p.h	2010-04-13 18:06:58.313877044 -0400
@@ -46,6 +46,7 @@
             return 0;
         }
         void init(Phonon::Category c);
+        QString getStreamUuid();
 
 
     protected:
@@ -58,6 +59,7 @@
 #endif
             deviceBeforeFallback(-1),
             outputDeviceOverridden(false),
+            forceMove(false),
             muted(false)
         {
         }
@@ -66,7 +68,8 @@
 
         enum DeviceChangeType {
             FallbackChange,
-            HigherPreferenceChange
+            HigherPreferenceChange,
+            SoundSystemChange
         };
         void handleAutomaticDeviceChange(const AudioOutputDevice &newDev, DeviceChangeType type);
 
@@ -74,17 +77,20 @@
         void _k_revertFallback();
         void _k_audioDeviceFailed();
         void _k_deviceListChanged();
+        void _k_deviceChanged(QString streamUuid, int deviceIndex);
 
     private:
         QString name;
         Phonon::AudioOutputDevice device;
         qreal volume;
+        QString streamUuid;
 #ifndef QT_NO_DBUS
         Phonon::AudioOutputAdaptor *adaptor;
 #endif
         Category category;
         int deviceBeforeFallback;
         bool outputDeviceOverridden;
+        bool forceMove;
         bool muted;
 };
 } //namespace Phonon
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiooutputinterface.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/audiooutputinterface.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/audiooutputinterface.h	2010-04-13 18:06:58.313877044 -0400
@@ -64,7 +64,7 @@
          * A value of 0.0 means muted, 1.0 means unchanged, 2.0 means double voltage (i.e. all
          * samples are multiplied by 2).
          *
-         * Everytime the volume in the backend changes it should emit volumeChanged(qreal), also
+         * Every time the volume in the backend changes it should emit volumeChanged(qreal), also
          * inside this function.
          */
         virtual void setVolume(qreal) = 0;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/backendcapabilities.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/backendcapabilities.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/backendcapabilities.cpp	2010-04-13 18:06:58.317853737 -0400
@@ -26,7 +26,7 @@
 #include "phonondefs_p.h"
 #include "backendinterface.h"
 #include "factory_p.h"
-#include "globalconfig_p.h"
+#include "globalconfig.h"
 #include "globalstatic_p.h"
 #include "objectdescription.h"
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/effectwidget.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/effectwidget.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/effectwidget.cpp	2010-04-13 18:06:58.317853737 -0400
@@ -15,7 +15,7 @@
     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
     Lesser General Public License for more details.
 
-    You should have received a copy of the GNU Lesser General Public
+    You should have received a copy of the GNU Lesser General Public 
     License along with this library.  If not, see <http://www.gnu.org/licenses/>.
 
 */
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/factory.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/factory.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/factory.cpp	2010-04-13 18:06:58.317853737 -0400
@@ -134,30 +134,24 @@
                 continue;
             }
 
-			QStringList plugins(dir.entryList(QDir::Files));
+            QStringList plugins(dir.entryList(QDir::Files));
 
 #ifdef Q_OS_SYMBIAN
             /* On Symbian OS we might have two plugins, one which uses Symbian
-             * MMF framework("phonon_mmf"), and one which uses Real Networks's
+             * MMF framework("mmf"), and one which uses Real Networks's
              * Helix("hxphonon"). We prefer the latter because it's more
              * sophisticated, so we make sure the Helix backend is attempted
              * to be loaded first, and the MMF backend is used for backup. */
             {
-
-                const int hxphonon = plugins.indexOf(QLatin1String("hxphonon"));
-                if (hxphonon != -1)
-                    plugins.move(hxphonon, 0);
-
-                // Code for debugging the MMF backend.
-                if(hxphonon != -1) {
-                    qDebug() << "Found hxphonon backend and removed it from the lookup list.";
-                    plugins.removeAll(QLatin1String("hxphonon"));
-                }
+                const int helix = plugins.indexof(QLatin1String("hxphonon"));
+                if (helix != -1)
+                    plugins.move(helix, 0);
             }
 #endif
 
-            for (int i = 0; i < plugins.count(); ++i) {
-                QPluginLoader pluginLoader(libPath + plugins.at(i));
+            const QStringList files = dir.entryList(QDir::Files);
+            for (int i = 0; i < files.count(); ++i) {
+                QPluginLoader pluginLoader(libPath + files.at(i));
                 if (!pluginLoader.load()) {
                     pDebug() << Q_FUNC_INFO << "  load failed:"
                              << pluginLoader.errorString();
@@ -350,6 +344,7 @@
 #ifndef QT_NO_PHONON_VIDEO
 FACTORY_IMPL(VideoWidget)
 #endif //QT_NO_PHONON_VIDEO
+FACTORY_IMPL(AudioDataOutput)
 
 #undef FACTORY_IMPL
 
@@ -469,7 +464,7 @@
 QObject *Factory::registerQObject(QObject *o)
 {
     if (o) {
-        QObject::connect(o, SIGNAL(destroyed(QObject*)), globalFactory, SLOT(objectDestroyed(QObject*)), Qt::DirectConnection);
+        QObject::connect(o, SIGNAL(destroyed(QObject *)), globalFactory, SLOT(objectDestroyed(QObject *)), Qt::DirectConnection);
         globalFactory->objects.append(o);
     }
     return o;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/factory_p.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/factory_p.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/factory_p.h	2010-04-13 18:06:58.317853737 -0400
@@ -122,6 +122,13 @@
 #endif //QT_NO_PHONON_VIDEO
 
     /**
+    * Create a new backend object for a AudioDataOutput.
+    *
+    * \return a pointer to the AudioDataOutput the backend provides.
+    */
+    PHONON_EXPORT QObject *createAudioDataOutput(QObject *parent = 0);
+
+    /**
      * \return a pointer to the backend interface.
      */
     PHONON_EXPORT QObject *backend(bool createWhenNull = true);
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/globalconfig.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/globalconfig.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/globalconfig.cpp	2010-04-13 18:06:58.317853737 -0400
@@ -20,6 +20,7 @@
 
 */
 
+#include "globalconfig.h"
 #include "globalconfig_p.h"
 
 #include "factory_p.h"
@@ -29,6 +30,7 @@
 #include "backendinterface.h"
 #include "qsettingsgroup_p.h"
 #include "phononnamespace_p.h"
+#include "pulsesupport.h"
 
 #include <QtCore/QList>
 #include <QtCore/QVariant>
@@ -38,15 +40,18 @@
 namespace Phonon
 {
 
+GlobalConfigPrivate::GlobalConfigPrivate() : config(QLatin1String("kde.org"), QLatin1String("libphonon"))
+{
+}
+
 GlobalConfig::GlobalConfig()
-#ifndef QT_NO_SETTINGS
-    : m_config(QLatin1String("kde.org"), QLatin1String("libphonon"))
-#endif //QT_NO_SETTINGS
+    : k_ptr(new GlobalConfigPrivate)
 {
 }
 
 GlobalConfig::~GlobalConfig()
 {
+    delete k_ptr;
 }
 
 enum WhatToFilter {
@@ -59,7 +64,11 @@
 {
     QMutableListIterator<int> it(*list);
     while (it.hasNext()) {
-        const QHash<QByteArray, QVariant> properties = backendIface->objectDescriptionProperties(type, it.next());
+        QHash<QByteArray, QVariant> properties;
+        if (backendIface)
+            properties = backendIface->objectDescriptionProperties(type, it.next());
+        else
+            properties = PulseSupport::getInstance()->objectDescriptionProperties(type, it.next());
         QVariant var;
         if (whatToFilter & FilterAdvancedDevices) {
             var = properties.value("isAdvanced");
@@ -73,6 +82,7 @@
             if (var.isValid() && var.toBool()) {
                 it.remove();
                 continue;
+#ifndef QT_NO_PHONON_SETTINGSGROUP
             }
         }
         if (whatToFilter & FilterUnavailableDevices) {
@@ -85,9 +95,12 @@
     }
 }
 
-#ifndef QT_NO_PHONON_SETTINGSGROUP
-static QList<int> listSortedByConfig(const QSettingsGroup &backendConfig, Phonon::Category category, QList<int> &defaultList)
+static QList<int> sortDevicesByCategoryPriority(const GlobalConfig *config, const QSettingsGroup *backendConfig, ObjectDescriptionType type, Phonon::Category category, QList<int> &defaultList)
 {
+    Q_ASSERT(config);
+    Q_ASSERT(backendConfig);
+    Q_ASSERT(type == AudioOutputDeviceType || type == AudioCaptureDeviceType);
+
     if (defaultList.size() <= 1) {
         // nothing to sort
         return defaultList;
@@ -104,20 +117,26 @@
         }
     }
 
-    QString categoryKey = QLatin1String("Category_") + QString::number(static_cast<int>(category));
-    if (!backendConfig.hasKey(categoryKey)) {
-        // no list in config for the given category
-        categoryKey = QLatin1String("Category_") + QString::number(static_cast<int>(Phonon::NoCategory));
-        if (!backendConfig.hasKey(categoryKey)) {
-            // no list in config for NoCategory
-            return defaultList;
+    QList<int> deviceList;
+    PulseSupport *pulse = PulseSupport::getInstance();
+    if (pulse->isActive()) {
+        deviceList = pulse->objectIndexesByCategory(type, category);
+    } else {
+        QString categoryKey = QLatin1String("Category_") + QString::number(static_cast<int>(category));
+        if (!backendConfig->hasKey(categoryKey)) {
+            // no list in config for the given category
+            categoryKey = QLatin1String("Category_") + QString::number(static_cast<int>(Phonon::NoCategory));
+            if (!backendConfig->hasKey(categoryKey)) {
+                // no list in config for NoCategory
+                return defaultList;
+            }
         }
-    }
 
-    //Now the list from m_config
-    QList<int> deviceList = backendConfig.value(categoryKey, QList<int>());
+        //Now the list from d->config
+        deviceList = backendConfig->value(categoryKey, QList<int>());
+    }
 
-    //if there are devices in m_config that the backend doesn't report, remove them from the list
+    //if there are devices in d->config that the backend doesn't report, remove them from the list
     QMutableListIterator<int> i(deviceList);
     while (i.hasNext()) {
         if (0 == defaultList.removeAll(i.next())) {
@@ -125,58 +144,198 @@
         }
     }
 
-    //if the backend reports more devices that are not in m_config append them to the list
+    //if the backend reports more devices that are not in d->config append them to the list
     deviceList += defaultList;
 
     return deviceList;
 }
+
+bool GlobalConfig::hideAdvancedDevices() const
+{
+    K_D(const GlobalConfig);
+    //The devices need to be stored independently for every backend
+    const QSettingsGroup generalGroup(&d->config, QLatin1String("General"));
+    return generalGroup.value(QLatin1String("HideAdvancedDevices"), true);
+}
+
+void GlobalConfig::setHideAdvancedDevices(bool hide)
+{
+    K_D(GlobalConfig);
+    QSettingsGroup generalGroup(&d->config, QLatin1String("General"));
+    generalGroup.setValue(QLatin1String("HideAdvancedDevices"), hide);
+}
+
+static bool isHiddenAudioOutputDevice(const GlobalConfig *config, int i)
+{
+    Q_ASSERT(config);
+
+    if (!config->hideAdvancedDevices())
+        return false;
+
+    AudioOutputDevice ad = AudioOutputDevice::fromIndex(i);
+    const QVariant var = ad.property("isAdvanced");
+    return (var.isValid() && var.toBool());
+}
+
+#ifndef QT_NO_PHONON_AUDIOCAPTURE
+static bool isHiddenAudioCaptureDevice(const GlobalConfig *config, int i)
+{
+    Q_ASSERT(config);
+
+    if (!config->hideAdvancedDevices())
+        return false;
+
+    AudioCaptureDevice ad = AudioCaptureDevice::fromIndex(i);
+    const QVariant var = ad.property("isAdvanced");
+    return (var.isValid() && var.toBool());
+}
+#endif
+
+static QList<int> reindexList(const GlobalConfig *config, Phonon::Category category, QList<int>newOrder, bool output)
+{
+    Q_ASSERT(config);
+#ifdef QT_NO_PHONON_AUDIOCAPTURE
+    Q_ASSERT(output);
+#endif
+
+    /*QString sb;
+    sb = QString("(Size %1)").arg(currentList.size());
+    foreach (int i, currentList)
+    sb += QString("%1, ").arg(i);
+    fprintf(stderr, "=== Reindex Current: %s\n", sb.toUtf8().constData());
+    sb = QString("(Size %1)").arg(newOrder.size());
+    foreach (int i, newOrder)
+    sb += QString("%1, ").arg(i);
+    fprintf(stderr, "=== Reindex Before : %s\n", sb.toUtf8().constData());*/
+
+    QList<int> currentList;
+    if (output)
+        currentList = config->audioOutputDeviceListFor(category, GlobalConfig::ShowUnavailableDevices|GlobalConfig::ShowAdvancedDevices);
+#ifndef QT_NO_PHONON_AUDIOCAPTURE
+    else
+        currentList = config->audioCaptureDeviceListFor(category, GlobalConfig::ShowUnavailableDevices|GlobalConfig::ShowAdvancedDevices);
+#endif
+
+    QList<int> newList;
+
+    foreach (int i, newOrder) {
+        int found = currentList.indexOf(i);
+        if (found < 0) {
+            // It's not in the list, so something is odd (e.g. client error). Ignore it.
+            continue;
+        }
+
+        // Iterate through the list from this point onward. If there are hidden devices
+        // immediately following, take them too.
+        newList.append(currentList.takeAt(found));
+        while (found < currentList.size()) {
+            bool hidden = true;
+            if (output)
+                hidden = isHiddenAudioOutputDevice(config, currentList.at(found));
+#ifndef QT_NO_PHONON_AUDIOCAPTURE
+            else
+                hidden = isHiddenAudioCaptureDevice(config, currentList.at(found));
+#endif
+
+            if (!hidden)
+                break;
+            newList.append(currentList.takeAt(found));
+        }
+    }
+
+    // If there are any devices left in.. just tack them on the end.
+    if (currentList.size() > 0)
+        newList += currentList;
+
+    /*sb = QString("(Size %1)").arg(newList.size());
+    foreach (int i, newList)
+    sb += QString("%1, ").arg(i);
+    fprintf(stderr, "=== Reindex After  : %s\n", sb.toUtf8().constData());*/
+    return newList;
+}
+
+
+void GlobalConfig::setAudioOutputDeviceListFor(Phonon::Category category, QList<int> order)
+{
+    PulseSupport *pulse = PulseSupport::getInstance();
+    if (pulse->isActive()) {
+        pulse->setOutputDevicePriorityForCategory(category, order);
+        return;
+    }
+
+    K_D(GlobalConfig);
+    QSettingsGroup backendConfig(&d->config, QLatin1String("AudioOutputDevice")); // + Factory::identifier());
+
+    order = reindexList(this, category, order, true);
+
+    const QList<int> noCategoryOrder = audioOutputDeviceListFor(Phonon::NoCategory, ShowUnavailableDevices|ShowAdvancedDevices);
+    if (category != Phonon::NoCategory && order == noCategoryOrder) {
+        backendConfig.removeEntry(QLatin1String("Category_") + QString::number(category));
+    } else {
+        backendConfig.setValue(QLatin1String("Category_") + QString::number(category), order);
+    }
+}
 #endif //QT_NO_PHONON_SETTINGSGROUP
 
 #ifndef QT_NO_PHONON_SETTINGSGROUP
 QList<int> GlobalConfig::audioOutputDeviceListFor(Phonon::Category category, int override) const
 {
-    //The devices need to be stored independently for every backend
-    const QSettingsGroup backendConfig(&m_config, QLatin1String("AudioOutputDevice")); // + Factory::identifier());
-    const QSettingsGroup generalGroup(&m_config, QLatin1String("General"));
-    const bool hideAdvancedDevices = ((override & AdvancedDevicesFromSettings)
-            ? generalGroup.value(QLatin1String("HideAdvancedDevices"), true)
+    K_D(const GlobalConfig);
+
+    const bool hide = ((override & AdvancedDevicesFromSettings)
+            ? hideAdvancedDevices()
             : static_cast<bool>(override & HideAdvancedDevices));
 
     QList<int> defaultList;
+
+    PulseSupport *pulse = PulseSupport::getInstance();
+    if (pulse->isActive()) {
+        defaultList = pulse->objectDescriptionIndexes(Phonon::AudioOutputDeviceType);
+        if (hide || (override & HideUnavailableDevices)) {
+            filter(AudioOutputDeviceType, NULL, &defaultList,
+                    (hide ? FilterAdvancedDevices : 0)
+                    | ((override & HideUnavailableDevices) ? FilterUnavailableDevices : 0)
+                    );
+        }
+    } else {
+        BackendInterface *backendIface = qobject_cast<BackendInterface *>(Factory::backend());
+
 #ifndef QT_NO_PHONON_PLATFORMPLUGIN
-    if (PlatformPlugin *platformPlugin = Factory::platformPlugin()) {
-        // the platform plugin lists the audio devices for the platform
-        // this list already is in default order (as defined by the platform plugin)
-        defaultList = platformPlugin->objectDescriptionIndexes(Phonon::AudioOutputDeviceType);
-        if (hideAdvancedDevices) {
-            QMutableListIterator<int> it(defaultList);
-            while (it.hasNext()) {
-                AudioOutputDevice objDesc = AudioOutputDevice::fromIndex(it.next());
-                const QVariant var = objDesc.property("isAdvanced");
-                if (var.isValid() && var.toBool()) {
-                    it.remove();
+        if (PlatformPlugin *platformPlugin = Factory::platformPlugin()) {
+            // the platform plugin lists the audio devices for the platform
+            // this list already is in default order (as defined by the platform plugin)
+            defaultList = platformPlugin->objectDescriptionIndexes(Phonon::AudioOutputDeviceType);
+            if (hide) {
+                QMutableListIterator<int> it(defaultList);
+                while (it.hasNext()) {
+                    AudioOutputDevice objDesc = AudioOutputDevice::fromIndex(it.next());
+                    const QVariant var = objDesc.property("isAdvanced");
+                    if (var.isValid() && var.toBool()) {
+                        it.remove();
+                    }
                 }
             }
         }
-    }
 #endif //QT_NO_PHONON_PLATFORMPLUGIN
 
-    // lookup the available devices directly from the backend (mostly for virtual devices)
-    if (BackendInterface *backendIface = qobject_cast<BackendInterface *>(Factory::backend())) {
-        // this list already is in default order (as defined by the backend)
-        QList<int> list = backendIface->objectDescriptionIndexes(Phonon::AudioOutputDeviceType);
-        if (hideAdvancedDevices || !defaultList.isEmpty() || (override & HideUnavailableDevices)) {
-            filter(AudioOutputDeviceType, backendIface, &list,
-                    (hideAdvancedDevices ? FilterAdvancedDevices : 0)
-                    // the platform plugin already provided the hardware devices
-                    | (defaultList.isEmpty() ? 0 : FilterHardwareDevices)
-                    | ((override & HideUnavailableDevices) ? FilterUnavailableDevices : 0)
-                    );
+        // lookup the available devices directly from the backend
+        if (backendIface) {
+            // this list already is in default order (as defined by the backend)
+            QList<int> list = backendIface->objectDescriptionIndexes(Phonon::AudioOutputDeviceType);
+            if (hide || !defaultList.isEmpty() || (override & HideUnavailableDevices)) {
+                filter(AudioOutputDeviceType, backendIface, &list,
+                        (hide ? FilterAdvancedDevices : 0)
+                        // the platform plugin maybe already provided the hardware devices?
+                        | (defaultList.isEmpty() ? 0 : FilterHardwareDevices)
+                        | ((override & HideUnavailableDevices) ? FilterUnavailableDevices : 0)
+                        );
+            }
+            defaultList += list;
         }
-        defaultList += list;
     }
 
-    return listSortedByConfig(backendConfig, category, defaultList);
+    const QSettingsGroup backendConfig(&d->config, QLatin1String("AudioOutputDevice")); // + Factory::identifier());
+    return sortDevicesByCategoryPriority(this, &backendConfig, AudioOutputDeviceType, category, defaultList);
 }
 #endif //QT_NO_PHONON_SETTINGSGROUP
 int GlobalConfig::audioOutputDeviceFor(Phonon::Category category, int override) const
@@ -190,54 +349,89 @@
 }
 
 #ifndef QT_NO_PHONON_AUDIOCAPTURE
-QList<int> GlobalConfig::audioCaptureDeviceListFor(Phonon::Category category, int override) const
+void GlobalConfig::setAudioCaptureDeviceListFor(Phonon::Category category, QList<int> order)
 {
 #ifndef QT_NO_PHONON_SETTINGSGROUP
-    //The devices need to be stored independently for every backend
-    const QSettingsGroup backendConfig(&m_config, QLatin1String("AudioCaptureDevice")); // + Factory::identifier());
-    const QSettingsGroup generalGroup(&m_config, QLatin1String("General"));
-    const bool hideAdvancedDevices = ((override & AdvancedDevicesFromSettings)
-            ? generalGroup.value(QLatin1String("HideAdvancedDevices"), true)
+    PulseSupport *pulse = PulseSupport::getInstance();
+    if (pulse->isActive()) {
+        pulse->setCaptureDevicePriorityForCategory(category, order);
+        return;
+    }
+
+    K_D(GlobalConfig);
+    QSettingsGroup backendConfig(&d->config, QLatin1String("AudioCaptureDevice")); // + Factory::identifier());
+
+    order = reindexList(this, category, order, false);
+
+    const QList<int> noCategoryOrder = audioCaptureDeviceListFor(Phonon::NoCategory, ShowUnavailableDevices|ShowAdvancedDevices);
+    if (category != Phonon::NoCategory && order == noCategoryOrder) {
+        backendConfig.removeEntry(QLatin1String("Category_") + QString::number(category));
+    } else {
+        backendConfig.setValue(QLatin1String("Category_") + QString::number(category), order);
+    }
+}
+
+QList<int> GlobalConfig::audioCaptureDeviceListFor(Phonon::Category category, int override) const
+{
+    K_D(const GlobalConfig);
+
+    const bool hide = ((override & AdvancedDevicesFromSettings)
+            ? hideAdvancedDevices()
             : static_cast<bool>(override & HideAdvancedDevices));
 
     QList<int> defaultList;
+
+    PulseSupport *pulse = PulseSupport::getInstance();
+    if (pulse->isActive()) {
+        defaultList = pulse->objectDescriptionIndexes(Phonon::AudioCaptureDeviceType);
+        if (hide || (override & HideUnavailableDevices)) {
+            filter(AudioCaptureDeviceType, NULL, &defaultList,
+                    (hide ? FilterAdvancedDevices : 0)
+                    | ((override & HideUnavailableDevices) ? FilterUnavailableDevices : 0)
+                    );
+        }
+    } else {
+        BackendInterface *backendIface = qobject_cast<BackendInterface *>(Factory::backend());
+
 #ifndef QT_NO_PHONON_PLATFORMPLUGIN
-    if (PlatformPlugin *platformPlugin = Factory::platformPlugin()) {
-        // the platform plugin lists the audio devices for the platform
-        // this list already is in default order (as defined by the platform plugin)
-        defaultList = platformPlugin->objectDescriptionIndexes(Phonon::AudioCaptureDeviceType);
-        if (hideAdvancedDevices) {
-            QMutableListIterator<int> it(defaultList);
-            while (it.hasNext()) {
-                AudioCaptureDevice objDesc = AudioCaptureDevice::fromIndex(it.next());
-                const QVariant var = objDesc.property("isAdvanced");
-                if (var.isValid() && var.toBool()) {
-                    it.remove();
+#else //QT_NO_SETTINGSGROUP
+    return QList<int>();
+#endif //QT_NO_SETTINGSGROUP
+        if (PlatformPlugin *platformPlugin = Factory::platformPlugin()) {
+            // the platform plugin lists the audio devices for the platform
+            // this list already is in default order (as defined by the platform plugin)
+            defaultList = platformPlugin->objectDescriptionIndexes(Phonon::AudioCaptureDeviceType);
+            if (hide) {
+                QMutableListIterator<int> it(defaultList);
+                while (it.hasNext()) {
+                    AudioCaptureDevice objDesc = AudioCaptureDevice::fromIndex(it.next());
+                    const QVariant var = objDesc.property("isAdvanced");
+                    if (var.isValid() && var.toBool()) {
+                        it.remove();
+                    }
                 }
             }
         }
-    }
 #endif //QT_NO_PHONON_PLATFORMPLUGIN
 
-    // lookup the available devices directly from the backend (mostly for virtual devices)
-    if (BackendInterface *backendIface = qobject_cast<BackendInterface *>(Factory::backend())) {
-        // this list already is in default order (as defined by the backend)
-        QList<int> list = backendIface->objectDescriptionIndexes(Phonon::AudioCaptureDeviceType);
-        if (hideAdvancedDevices || !defaultList.isEmpty() || (override & HideUnavailableDevices)) {
-            filter(AudioCaptureDeviceType, backendIface, &list,
-                    (hideAdvancedDevices ? FilterAdvancedDevices : 0)
-                    // the platform plugin already provided the hardware devices
-                    | (defaultList.isEmpty() ? 0 : FilterHardwareDevices)
-                    | ((override & HideUnavailableDevices) ? FilterUnavailableDevices : 0)
-                  );
+        // lookup the available devices directly from the backend
+        if (backendIface) {
+            // this list already is in default order (as defined by the backend)
+            QList<int> list = backendIface->objectDescriptionIndexes(Phonon::AudioCaptureDeviceType);
+            if (hide || !defaultList.isEmpty() || (override & HideUnavailableDevices)) {
+                filter(AudioCaptureDeviceType, backendIface, &list,
+                        (hide ? FilterAdvancedDevices : 0)
+                        // the platform plugin maybe already provided the hardware devices?
+                        | (defaultList.isEmpty() ? 0 : FilterHardwareDevices)
+                        | ((override & HideUnavailableDevices) ? FilterUnavailableDevices : 0)
+                      );
+            }
+            defaultList += list;
         }
-        defaultList += list;
     }
 
-    return listSortedByConfig(backendConfig, category, defaultList);
-#else //QT_NO_SETTINGSGROUP
-    return QList<int>();
-#endif //QT_NO_SETTINGSGROUP
+    const QSettingsGroup backendConfig(&d->config, QLatin1String("AudioCaptureDevice")); // + Factory::identifier());
+    return sortDevicesByCategoryPriority(this, &backendConfig, AudioCaptureDeviceType, category, defaultList);
 }
 
 int GlobalConfig::audioCaptureDeviceFor(Phonon::Category category, int override) const
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/globalconfig.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/globalconfig.h	2010-04-13 18:06:58.321854874 -0400
@@ -0,0 +1,71 @@
+/*  This file is part of the KDE project
+Copyright (C) 2006-2008 Matthias Kretz <kretz@kde.org>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation 
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public 
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#ifndef PHONON_GLOBALCONFIG_H
+#define PHONON_GLOBALCONFIG_H
+
+#include "phonon_export.h"
+#include "phononnamespace.h"
+#include "phonondefs.h"
+
+QT_BEGIN_HEADER
+QT_BEGIN_NAMESPACE
+
+namespace Phonon
+{
+    class GlobalConfigPrivate;
+
+    class PHONON_EXPORT GlobalConfig
+    {
+        K_DECLARE_PRIVATE(GlobalConfig)
+    public:
+        GlobalConfig();
+        virtual ~GlobalConfig();
+
+        enum DevicesToHideFlag {
+            ShowUnavailableDevices = 0,
+            ShowAdvancedDevices = 0,
+            HideAdvancedDevices = 1,
+            AdvancedDevicesFromSettings = 2,
+            HideUnavailableDevices = 4
+        };
+        bool hideAdvancedDevices() const;
+        void setHideAdvancedDevices(bool hide = true);
+        void setAudioOutputDeviceListFor(Phonon::Category category, QList<int> order);
+        QList<int> audioOutputDeviceListFor(Phonon::Category category, int override = AdvancedDevicesFromSettings) const;
+        int audioOutputDeviceFor(Phonon::Category category, int override = AdvancedDevicesFromSettings) const;
+
+#ifndef QT_NO_PHONON_AUDIOCAPTURE
+        void setAudioCaptureDeviceListFor(Phonon::Category category, QList<int> order);
+        QList<int> audioCaptureDeviceListFor(Phonon::Category category, int override = AdvancedDevicesFromSettings) const;
+        int audioCaptureDeviceFor(Phonon::Category category, int override = AdvancedDevicesFromSettings) const;
+#endif //QT_NO_PHONON_AUDIOCAPTURE
+
+    protected:
+        GlobalConfigPrivate *const k_ptr;
+    };
+} // namespace Phonon
+
+QT_END_NAMESPACE
+QT_END_HEADER
+
+#endif // PHONON_GLOBALCONFIG_H
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/globalconfig_p.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/globalconfig_p.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/globalconfig_p.h	2010-04-13 18:06:58.321854874 -0400
@@ -26,40 +26,19 @@
 #include <QtCore/QSettings>
 
 #include "phonon_export.h"
-#include "phononnamespace.h"
 
 QT_BEGIN_HEADER
 QT_BEGIN_NAMESPACE
 
 namespace Phonon
 {
-    class PHONON_EXPORT GlobalConfig
+    class GlobalConfigPrivate
     {
-    public:
-        GlobalConfig();
-        virtual ~GlobalConfig();
-
-        enum DevicesToHideFlag {
-            ShowUnavailableDevices = 0,
-            ShowAdvancedDevices = 0,
-            HideAdvancedDevices = 1,
-            AdvancedDevicesFromSettings = 2,
-            HideUnavailableDevices = 4
-        };
-#ifndef QT_NO_PHONON_SETTINGSGROUP
-        QList<int> audioOutputDeviceListFor(Phonon::Category category, int override = AdvancedDevicesFromSettings) const;
-#endif //QT_NO_PHONON_SETTINGSGROUP
-        int audioOutputDeviceFor(Phonon::Category category, int override = AdvancedDevicesFromSettings) const;
-
-#ifndef QT_NO_PHONON_AUDIOCAPTURE
-        QList<int> audioCaptureDeviceListFor(Phonon::Category category, int override = AdvancedDevicesFromSettings) const;
-        int audioCaptureDeviceFor(Phonon::Category category, int override = AdvancedDevicesFromSettings) const;
-#endif //QT_NO_PHONON_AUDIOCAPTURE
-
-    protected:
-#ifndef QT_NO_SETTINGS
-        QSettings m_config;
-#endif //QT_NO_SETTINGS
+        public:
+            GlobalConfigPrivate();
+            virtual ~GlobalConfigPrivate() {}
+
+            QSettings config;
     };
 } // namespace Phonon
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/mediaobject.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/mediaobject.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/mediaobject.cpp	2010-04-13 18:06:58.321854874 -0400
@@ -453,9 +453,9 @@
     //pDebug() << Q_FUNC_INFO;
 
 #ifndef QT_NO_PHONON_ABSTRACTMEDIASTREAM
-    QObject::connect(m_backendObject, SIGNAL(stateChanged(Phonon::State,Phonon::State)), q, SLOT(_k_stateChanged(Phonon::State,Phonon::State)));
+    QObject::connect(m_backendObject, SIGNAL(stateChanged(Phonon::State, Phonon::State)), q, SLOT(_k_stateChanged(Phonon::State, Phonon::State)));
 #else
-    QObject::connect(m_backendObject, SIGNAL(stateChanged(Phonon::State,Phonon::State)), q, SIGNAL(stateChanged(Phonon::State,Phonon::State)));
+    QObject::connect(m_backendObject, SIGNAL(stateChanged(Phonon::State, Phonon::State)), q, SIGNAL(stateChanged(Phonon::State, Phonon::State)));
 #endif // QT_NO_PHONON_ABSTRACTMEDIASTREAM
     QObject::connect(m_backendObject, SIGNAL(tick(qint64)),             q, SIGNAL(tick(qint64)));
     QObject::connect(m_backendObject, SIGNAL(seekableChanged(bool)),    q, SIGNAL(seekableChanged(bool)));
@@ -467,10 +467,10 @@
     QObject::connect(m_backendObject, SIGNAL(aboutToFinish()),          q, SLOT(_k_aboutToFinish()));
     QObject::connect(m_backendObject, SIGNAL(prefinishMarkReached(qint32)), q, SIGNAL(prefinishMarkReached(qint32)));
     QObject::connect(m_backendObject, SIGNAL(totalTimeChanged(qint64)), q, SIGNAL(totalTimeChanged(qint64)));
-    QObject::connect(m_backendObject, SIGNAL(metaDataChanged(QMultiMap<QString,QString>)),
-            q, SLOT(_k_metaDataChanged(QMultiMap<QString,QString>)));
-    QObject::connect(m_backendObject, SIGNAL(currentSourceChanged(MediaSource)), 
-        q, SLOT(_k_currentSourceChanged(MediaSource)));
+    QObject::connect(m_backendObject, SIGNAL(metaDataChanged(const QMultiMap<QString, QString> &)),
+            q, SLOT(_k_metaDataChanged(const QMultiMap<QString, QString> &)));
+    QObject::connect(m_backendObject, SIGNAL(currentSourceChanged(const MediaSource&)), 
+        q, SLOT(_k_currentSourceChanged(const MediaSource&)));
 
     // set up attributes
     pINTERFACE_CALL(setTickInterval(tickInterval));
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/objectdescription.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/objectdescription.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/objectdescription.cpp	2010-04-13 18:06:58.321854874 -0400
@@ -29,6 +29,7 @@
 #include <QtCore/QStringList>
 #include "backendinterface.h"
 #include "platformplugin.h"
+#include "pulsesupport.h"
 
 QT_BEGIN_NAMESPACE
 
@@ -108,27 +109,38 @@
 
 ObjectDescriptionData *ObjectDescriptionData::fromIndex(ObjectDescriptionType type, int index)
 {
-    // prefer to get the ObjectDescriptionData from the platform plugin for audio devices
+    bool is_audio_device = (AudioOutputDeviceType == type || AudioCaptureDeviceType == type);
+
+    PulseSupport *pulse = PulseSupport::getInstance();
+    if (is_audio_device && pulse->isActive()) {
+        QList<int> indexes = pulse->objectDescriptionIndexes(type);
+        if (indexes.contains(index)) {
+            QHash<QByteArray, QVariant> properties = pulse->objectDescriptionProperties(type, index);
+            return new ObjectDescriptionData(index, properties);
+        }
+    } else {
+        BackendInterface *iface = qobject_cast<BackendInterface *>(Factory::backend());
+
+        // prefer to get the ObjectDescriptionData from the platform plugin for audio devices
 #ifndef QT_NO_PHONON_PLATFORMPLUGIN
-    if (type == AudioOutputDeviceType || type == AudioCaptureDeviceType) {
-        PlatformPlugin *platformPlugin = Factory::platformPlugin();
-        if (platformPlugin) {
-            QList<int> indexes = platformPlugin->objectDescriptionIndexes(type);
-            if (indexes.contains(index)) {
-                QHash<QByteArray, QVariant> properties = platformPlugin->objectDescriptionProperties(type, index);
-                return new ObjectDescriptionData(index, properties);
+        if (is_audio_device) {
+            PlatformPlugin *platformPlugin = Factory::platformPlugin();
+            if (platformPlugin) {
+                QList<int> indexes = platformPlugin->objectDescriptionIndexes(type);
+                if (indexes.contains(index)) {
+                    QHash<QByteArray, QVariant> properties = platformPlugin->objectDescriptionProperties(type, index);
+                    return new ObjectDescriptionData(index, properties);
+                }
             }
         }
-    }
 #endif //QT_NO_PHONON_PLATFORMPLUGIN
 
-    QObject *b = Factory::backend();
-    BackendInterface *iface = qobject_cast<BackendInterface *>(b);
-    if (iface) {
-        QList<int> indexes = iface->objectDescriptionIndexes(type);
-        if (indexes.contains(index)) {
-            QHash<QByteArray, QVariant> properties = iface->objectDescriptionProperties(type, index);
-            return new ObjectDescriptionData(index, properties);
+        if (iface) {
+            QList<int> indexes = iface->objectDescriptionIndexes(type);
+            if (indexes.contains(index)) {
+                QHash<QByteArray, QVariant> properties = iface->objectDescriptionProperties(type, index);
+                return new ObjectDescriptionData(index, properties);
+            }
         }
     }
     return new ObjectDescriptionData(0); // invalid
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/objectdescriptionmodel.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/objectdescriptionmodel.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/objectdescriptionmodel.cpp	2010-04-13 18:06:58.321854874 -0400
@@ -67,8 +67,6 @@
 namespace Phonon
 {
 
-#if !defined(Q_CC_MINGW) || __MINGW32_MAJOR_VERSION >= 4
-
 template<> const QMetaObject ObjectDescriptionModel<AudioOutputDeviceType>::staticMetaObject = {
     { &QAbstractListModel::staticMetaObject, qt_meta_stringdata_Phonon__ObjectDescriptionModel_AudioOutputDeviceType,
       qt_meta_data_Phonon__ObjectDescriptionModel, 0 }
@@ -139,7 +137,6 @@
     return QAbstractListModel::qt_metacall(_c, _id, _a);
 }
 */
-#endif
 
 int ObjectDescriptionModelData::rowCount(const QModelIndex &parent) const
 {
@@ -365,8 +362,7 @@
     return QStringList(QLatin1String("application/x-phonon-objectdescription") + QString::number(static_cast<int>(type)));
 }
 
-#if !defined(Q_CC_MINGW) || __MINGW32_MAJOR_VERSION >= 4
-#if !defined(Q_CC_MSVC) || _MSC_VER > 1300 || defined(Q_CC_INTEL)
+#if !defined(Q_CC_MSVC) || _MSC_VER > 1300 || defined(Q_CC_INTEL) || defined(Q_CC_MINGW)
 #define INSTANTIATE_META_FUNCTIONS(type) \
 template const QMetaObject *ObjectDescriptionModel<type>::metaObject() const; \
 template void *ObjectDescriptionModel<type>::qt_metacast(const char *)
@@ -384,7 +380,6 @@
 INSTANTIATE_META_FUNCTIONS(ContainerFormatType);
 INSTANTIATE_META_FUNCTIONS(VisualizationType);
 */
-#endif //Q_CC_MINGW
 } // namespace Phonon
 
 #endif //QT_NO_PHONON_OBJECTDESCRIPTIONMODEL
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/objectdescriptionmodel.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/objectdescriptionmodel.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/objectdescriptionmodel.h	2010-04-13 18:06:58.321854874 -0400
@@ -35,6 +35,18 @@
 
 #ifndef QT_NO_PHONON_OBJECTDESCRIPTIONMODEL
 
+/* MinGW 3.4.x gives an ICE when trying to instantiate one of the
+   ObjectDescriptionModel<foo> classes because it can't handle
+   half exported classes correct. gcc 4.3.x has a fix for this but
+   we currently there's no official gcc 4.3 on windows available.
+   Because of this we need this little hack
+ */
+#if defined(Q_CC_MINGW)
+#define PHONON_EXPORT_ODM
+#else
+#define PHONON_EXPORT_ODM  PHONON_EXPORT
+#endif
+
 namespace Phonon
 {
     class ObjectDescriptionModelDataPrivate;
@@ -139,21 +151,6 @@
             ObjectDescriptionModelDataPrivate *const d;
     };
 
-/* Required to ensure template class vtables are exported on both symbian
-and existing builds. */
-#if defined(Q_OS_SYMBIAN) && defined(Q_CC_RVCT)
-// RVCT compiler (2.2.686) requires the export declaration to be on the class to export vtables
-// MWC compiler works both ways
-// GCCE compiler is unknown (it can't compile QtCore yet)
-#define PHONON_TEMPLATE_CLASS_EXPORT PHONON_EXPORT
-#define PHONON_TEMPLATE_CLASS_MEMBER_EXPORT
-#else
-// Windows builds (at least) do not support export declaration on templated class
-// But if you export a member function, the vtable is implicitly exported
-#define PHONON_TEMPLATE_CLASS_EXPORT
-#define PHONON_TEMPLATE_CLASS_MEMBER_EXPORT PHONON_EXPORT
-#endif
-
     /** \class ObjectDescriptionModel objectdescriptionmodel.h Phonon/ObjectDescriptionModel
      * \short The ObjectDescriptionModel class provides a model from
      * a list of ObjectDescription objects.
@@ -190,26 +187,17 @@
      * \author Matthias Kretz <kretz@kde.org>
      */
     template<ObjectDescriptionType type>
-    class PHONON_TEMPLATE_CLASS_EXPORT ObjectDescriptionModel : public QAbstractListModel
+    class ObjectDescriptionModel : public QAbstractListModel
     {
         public:
             Q_OBJECT_CHECK
-
-/* MinGW 3.4.x gives an ICE when trying to instantiate one of the
-   ObjectDescriptionModel<foo> classes because it can't handle
-   half exported classes correct. gcc 4.3.x has a fix for this but
-   we currently there's no official gcc 4.3 on windows available.
-   Because of this we need this little hack
- */
-#if !defined(Q_CC_MINGW) || __MINGW32_MAJOR_VERSION >= 4
             /** \internal */
-            static PHONON_TEMPLATE_CLASS_MEMBER_EXPORT const QMetaObject staticMetaObject;
+            static PHONON_EXPORT const QMetaObject staticMetaObject;
             /** \internal */
-            PHONON_TEMPLATE_CLASS_MEMBER_EXPORT const QMetaObject *metaObject() const;
+            PHONON_EXPORT_ODM const QMetaObject *metaObject() const;
             /** \internal */
-            PHONON_TEMPLATE_CLASS_MEMBER_EXPORT void *qt_metacast(const char *_clname);
+            PHONON_EXPORT_ODM void *qt_metacast(const char *_clname);
             //int qt_metacall(QMetaObject::Call _c, int _id, void **_a);
-#endif
 
             /**
              * Returns the number of rows in the model. This value corresponds
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/path.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/path.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/path.cpp	2010-04-13 18:06:58.325882271 -0400
@@ -310,8 +310,8 @@
     if (!transaction)
         return false;
 
-    QList<QObjectPair>::const_iterator it = disconnections.constBegin();
-    for(;it != disconnections.constEnd();++it) {
+    QList<QObjectPair>::const_iterator it = disconnections.begin();
+    for(;it != disconnections.end();++it) {
         const QObjectPair &pair = *it;
         if (!backend->disconnectNodes(pair.first, pair.second)) {
 
@@ -327,8 +327,8 @@
         }
     }
 
-    for(it = connections.constBegin(); it != connections.constEnd(); ++it) {
-        const QObjectPair pair = *it;
+    for(it = connections.begin(); it != connections.end();++it) {
+        const QObjectPair &pair = *it;
         if (!backend->connectNodes(pair.first, pair.second)) {
             //Error: a connection failed
             QList<QObjectPair>::const_iterator it2 = connections.begin();
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/phonondefs.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/phonondefs.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/phonondefs.h	2010-04-13 18:06:58.325882271 -0400
@@ -29,6 +29,11 @@
 QT_BEGIN_HEADER
 QT_BEGIN_NAMESPACE
 
+#ifdef PHONON_BACKEND_VERSION_4_4
+# ifndef PHONON_BACKEND_VERSION_4_3
+#  define PHONON_BACKEND_VERSION_4_3
+# endif
+#endif
 #ifdef PHONON_BACKEND_VERSION_4_3
 # ifndef PHONON_BACKEND_VERSION_4_2
 #  define PHONON_BACKEND_VERSION_4_2
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/pulsesupport.cpp
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/pulsesupport.cpp	2010-04-13 18:06:58.325882271 -0400
@@ -0,0 +1,999 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2009 Colin Guthrie <cguthrie@mandriva.org>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#include <QtCore/QAbstractEventDispatcher>
+#include <QtCore/QEventLoop>
+#include <QtCore/QDebug>
+#include <QtCore/QStringList>
+
+#ifdef HAVE_PULSEAUDIO
+#include <glib.h>
+#include <pulse/pulseaudio.h>
+#include <pulse/xmalloc.h>
+#include <pulse/glib-mainloop.h>
+#ifdef HAVE_PULSEAUDIO_DEVICE_MANAGER
+#  include <pulse/ext-device-manager.h>
+#endif
+#endif // HAVE_PULSEAUDIO
+
+#include "pulsesupport.h"
+
+QT_BEGIN_NAMESPACE
+
+namespace Phonon
+{
+
+static PulseSupport* s_instance = NULL;
+
+#ifdef HAVE_PULSEAUDIO
+/***
+* Prints a conditional debug message based on the current debug level
+* If obj is provided, classname and objectname will be printed as well
+*
+* see debugLevel()
+*/
+
+static int debugLevel() {
+    static int level = -1;
+    if (level < 1) {
+        level = 0;
+        QString pulseenv = qgetenv("PHONON_PULSEAUDIO_DEBUG");
+        int l = pulseenv.toInt();
+        if (l > 0)
+            level = (l > 2 ? 2 : l);
+    }
+    return level;
+}
+
+static void logMessage(const QString &message, int priority = 2, QObject *obj=0);
+static void logMessage(const QString &message, int priority, QObject *obj)
+{
+    if (debugLevel() > 0) {
+        QString output;
+        if (obj) {
+            // Strip away namespace from className
+            QString className(obj->metaObject()->className());
+            int nameLength = className.length() - className.lastIndexOf(':') - 1;
+            className = className.right(nameLength);
+            output.sprintf("%s %s (%s %p)", message.toLatin1().constData(), 
+                           obj->objectName().toLatin1().constData(), 
+                           className.toLatin1().constData(), obj);
+        }
+        else {
+            output = message;
+        }
+        if (priority <= debugLevel()) {
+            qDebug() << QString("PulseSupport(%1): %2").arg(priority).arg(output);
+        }
+    }
+}
+
+
+class AudioDevice
+{
+    public:
+        inline
+        AudioDevice(QString name, QString desc, QString icon, uint32_t index)
+        : pulseName(name), pulseIndex(index)
+        {
+            properties["name"] = desc;
+            properties["description"] = ""; // We don't have descriptions (well we do, but we use them as the name!)
+            properties["icon"] = icon;
+            properties["available"] = (index != PA_INVALID_INDEX);
+            properties["isAdvanced"] = false; // Nothing is advanced!
+        }
+
+        // Needed for QMap
+        inline AudioDevice() {}
+
+        QString pulseName;
+        uint32_t pulseIndex;
+        QHash<QByteArray, QVariant> properties;
+};
+bool operator!=(const AudioDevice &a, const AudioDevice &b)
+{
+    return !(a.pulseName == b.pulseName && a.properties == b.properties);
+}
+
+class PulseUserData
+{
+    public:
+        inline 
+        PulseUserData()
+        {
+        }
+
+        QMap<QString, AudioDevice> newOutputDevices;
+        QMap<Phonon::Category, QMap<int, int> > newOutputDevicePriorities; // prio, device
+
+        QMap<QString, AudioDevice> newCaptureDevices;
+        QMap<Phonon::Category, QMap<int, int> > newCaptureDevicePriorities; // prio, device
+};
+
+static QMap<QString, Phonon::Category> s_roleCategoryMap;
+
+static bool s_pulseActive = false;
+
+static pa_glib_mainloop *s_mainloop = NULL;
+static pa_context *s_context = NULL;
+static QEventLoop *s_connectionEventloop = NULL;
+
+
+
+static int s_deviceIndexCounter = 0;
+
+static QMap<QString, int> s_outputDeviceIndexes;
+static QMap<int, AudioDevice> s_outputDevices;
+static QMap<Phonon::Category, QMap<int, int> > s_outputDevicePriorities; // prio, device
+static QMap<QString, uint32_t> s_outputStreamIndexMap;
+
+static QMap<QString, int> s_captureDeviceIndexes;
+static QMap<int, AudioDevice> s_captureDevices;
+static QMap<Phonon::Category, QMap<int, int> > s_captureDevicePriorities; // prio, device
+static QMap<QString, uint32_t> s_captureStreamIndexMap;
+
+static void createGenericDevices()
+{
+    // OK so we don't have the device manager extension, but we can show a single device and fake it.
+    int index;
+    s_outputDeviceIndexes.clear();
+    s_outputDevices.clear();
+    s_outputDevicePriorities.clear();
+    index = s_deviceIndexCounter++;
+    s_outputDeviceIndexes.insert("sink:default", index);
+    s_outputDevices.insert(index, AudioDevice("sink:default", QObject::tr("PulseAudio Sound Server").toUtf8(), "audio-backend-pulseaudio", 0));
+    for (int i = Phonon::NoCategory; i <= Phonon::LastCategory; ++i) {
+        Phonon::Category cat = static_cast<Phonon::Category>(i);
+        s_outputDevicePriorities[cat].insert(0, index);
+    }
+
+    s_captureDeviceIndexes.clear();
+    s_captureDevices.clear();
+    s_captureDevicePriorities.clear();
+    index = s_deviceIndexCounter++;
+    s_captureDeviceIndexes.insert("source:default", index);
+    s_captureDevices.insert(index, AudioDevice("source:default", QObject::tr("PulseAudio Sound Server").toUtf8(), "audio-backend-pulseaudio", 0));
+    for (int i = Phonon::NoCategory; i <= Phonon::LastCategory; ++i) {
+        Phonon::Category cat = static_cast<Phonon::Category>(i);
+        s_captureDevicePriorities[cat].insert(0, index);
+    }
+}
+
+#ifdef HAVE_PULSEAUDIO_DEVICE_MANAGER
+static void ext_device_manager_subscribe_cb(pa_context *, void *);
+static void ext_device_manager_read_cb(pa_context *c, const pa_ext_device_manager_info *info, int eol, void *userdata) {
+    Q_ASSERT(c);
+    Q_ASSERT(userdata);
+
+    // If this is our first iteration, set things up properly
+    if (s_connectionEventloop) {
+        logMessage("Exiting connection event loop (PulseAudio server found)");
+        s_connectionEventloop->exit(0);
+        s_connectionEventloop = NULL;
+        s_pulseActive = true;
+
+        pa_operation *o;
+        pa_ext_device_manager_set_subscribe_cb(c, ext_device_manager_subscribe_cb, NULL);
+        if ((o = pa_ext_device_manager_subscribe(c, 1, NULL, NULL)))
+            pa_operation_unref(o);
+    }
+
+    if (eol < 0) {
+        logMessage(QString("Failed to initialize device manager extension: %1").arg(pa_strerror(pa_context_errno(c))));
+        createGenericDevices();
+        return;
+    }
+
+    PulseUserData *u = reinterpret_cast<PulseUserData*>(userdata);
+    if (eol) {
+        // We're done reading the data, so order it by priority and copy it into the
+        // static variables where it can then be accessed by those classes that need it.
+
+        QMap<QString, AudioDevice>::iterator newdev_it;
+
+        // Check for new output devices or things changing about known output devices.
+        bool output_changed = false;
+        for (newdev_it = u->newOutputDevices.begin(); newdev_it != u->newOutputDevices.end(); ++newdev_it) {
+            QString name = newdev_it.key();
+
+            // The name + index map is always written when a new device is added.
+            Q_ASSERT(s_outputDeviceIndexes.contains(name));
+
+            int index = s_outputDeviceIndexes[name];
+            if (!s_outputDevices.contains(index)) {
+                // This is a totally new device
+                output_changed = true;
+                logMessage(QString("Brand New Output Device Found."));
+                s_outputDevices.insert(index, *newdev_it);
+            } else  if (s_outputDevices[index] != *newdev_it) {
+                // We have this device already, but is it different?
+                output_changed = true;
+                logMessage(QString("Change to Existing Output Device (may be Added/Removed or something else)"));
+                s_outputDevices.remove(index);
+                s_outputDevices.insert(index, *newdev_it);
+            }
+        }
+        // Go through the output devices we know about and see if any are no longer mentioned in the list.
+        QMutableMapIterator<QString, int> output_existing_it(s_outputDeviceIndexes);
+        while (output_existing_it.hasNext()) {
+            output_existing_it.next();
+            if (!u->newOutputDevices.contains(output_existing_it.key())) {
+                output_changed = true;
+                logMessage(QString("Output Device Completely Removed"));
+                s_outputDevices.remove(output_existing_it.value());
+                output_existing_it.remove();
+            }
+        }
+
+        // Check for new capture devices or things changing about known capture devices.
+        bool capture_changed = false;
+        for (newdev_it = u->newCaptureDevices.begin(); newdev_it != u->newCaptureDevices.end(); ++newdev_it) {
+            QString name = newdev_it.key();
+
+            // The name + index map is always written when a new device is added.
+            Q_ASSERT(s_captureDeviceIndexes.contains(name));
+
+            int index = s_captureDeviceIndexes[name];
+            if (!s_captureDevices.contains(index)) {
+                // This is a totally new device
+                capture_changed = true;
+                logMessage(QString("Brand New Capture Device Found."));
+                s_captureDevices.insert(index, *newdev_it);
+            } else  if (s_captureDevices[index] != *newdev_it) {
+                // We have this device already, but is it different?
+                capture_changed = true;
+                logMessage(QString("Change to Existing Capture Device (may be Added/Removed or something else)"));
+                s_captureDevices.remove(index);
+                s_captureDevices.insert(index, *newdev_it);
+            }
+        }
+        // Go through the capture devices we know about and see if any are no longer mentioned in the list.
+        QMutableMapIterator<QString, int> capture_existing_it(s_captureDeviceIndexes);
+        while (capture_existing_it.hasNext()) {
+            capture_existing_it.next();
+            if (!u->newCaptureDevices.contains(capture_existing_it.key())) {
+                capture_changed = true;
+                logMessage(QString("Capture Device Completely Removed"));
+                s_captureDevices.remove(capture_existing_it.value());
+                capture_existing_it.remove();
+            }
+        }
+
+        // Just copy accross the new priority lists as we know they are valid
+        if (s_outputDevicePriorities != u->newOutputDevicePriorities) {
+            output_changed = true;
+            s_outputDevicePriorities = u->newOutputDevicePriorities;
+        }
+        if (s_captureDevicePriorities != u->newCaptureDevicePriorities) {
+            capture_changed = true;
+            s_captureDevicePriorities = u->newCaptureDevicePriorities;
+        }
+
+        if (s_instance) {
+            if (output_changed)
+                s_instance->emitObjectDescriptionChanged(AudioOutputDeviceType);
+            if (capture_changed)
+                s_instance->emitObjectDescriptionChanged(AudioCaptureDeviceType);
+        }
+
+        // We can free the user data as we will not be called again.
+        delete u;
+
+        // Some debug
+        logMessage(QString("Output Device Priority List:"));
+        for (int i = Phonon::NoCategory; i <= Phonon::LastCategory; ++i) {
+            Phonon::Category cat = static_cast<Phonon::Category>(i);
+            if (s_outputDevicePriorities.contains(cat)) {
+                logMessage(QString("  Phonon Category %1").arg(cat));
+                int count = 0;
+                foreach (int j, s_outputDevicePriorities[cat]) {
+                    QHash<QByteArray, QVariant> &props = s_outputDevices[j].properties;
+                    logMessage(QString("    %1. %2 (Available: %3)").arg(++count).arg(props["name"].toString()).arg(props["available"].toBool()));
+                }
+            }
+        }
+        logMessage(QString("Capture Device Priority List:"));
+        for (int i = Phonon::NoCategory; i <= Phonon::LastCategory; ++i) {
+            Phonon::Category cat = static_cast<Phonon::Category>(i);
+            if (s_captureDevicePriorities.contains(cat)) {
+                logMessage(QString("  Phonon Category %1").arg(cat));
+                int count = 0;
+                foreach (int j, s_captureDevicePriorities[cat]) {
+                    QHash<QByteArray, QVariant> &props = s_captureDevices[j].properties;
+                    logMessage(QString("    %1. %2 (Available: %3)").arg(++count).arg(props["name"].toString()).arg(props["available"].toBool()));
+                }
+            }
+        }
+    }
+
+    if (!info)
+        return;
+
+    Q_ASSERT(info->name);
+    Q_ASSERT(info->description);
+    Q_ASSERT(info->icon);
+
+    // QString wrapper
+    QString name(info->name);
+    int index;
+    QMap<Phonon::Category, QMap<int, int> > *new_prio_map_cats; // prio, device
+    QMap<QString, AudioDevice> *new_devices;
+
+    if (name.startsWith("sink:")) {
+        new_devices = &u->newOutputDevices;
+        new_prio_map_cats = &u->newOutputDevicePriorities;
+
+        if (s_outputDeviceIndexes.contains(name))
+            index = s_outputDeviceIndexes[name];
+        else
+            index = s_outputDeviceIndexes[name] = s_deviceIndexCounter++;
+    } else if (name.startsWith("source:")) {
+        new_devices = &u->newCaptureDevices;
+        new_prio_map_cats = &u->newCaptureDevicePriorities;
+
+        if (s_captureDeviceIndexes.contains(name))
+            index = s_captureDeviceIndexes[name];
+        else
+            index = s_captureDeviceIndexes[name] = s_deviceIndexCounter++;
+    } else {
+        // This indicates a bug in pulseaudio.
+        return;
+    }
+
+    // Add the new device itself.
+    new_devices->insert(name, AudioDevice(name, info->description, info->icon, info->index));
+
+    // For each role in the priority, map it to a phonon category and store the order.
+    for (uint32_t i = 0; i < info->n_role_priorities; ++i) {
+        pa_ext_device_manager_role_priority_info* role_prio = &info->role_priorities[i];
+        Q_ASSERT(role_prio->role);
+
+        if (s_roleCategoryMap.contains(role_prio->role)) {
+            Phonon::Category cat = s_roleCategoryMap[role_prio->role];
+
+            (*new_prio_map_cats)[cat].insert(role_prio->priority, index);
+        }
+    }
+}
+#endif
+
+void sink_input_cb(pa_context *c, const pa_sink_input_info *i, int eol, void *userdata) {
+    Q_UNUSED(userdata);
+    Q_ASSERT(c);
+
+    if (eol < 0) {
+        if (pa_context_errno(c) == PA_ERR_NOENTITY)
+            return;
+
+        logMessage(QString("Sink input callback failure"));
+        return;
+    }
+
+    if (eol > 0)
+        return;
+
+    Q_ASSERT(i);
+
+    // loop through (*i) and extract phonon->streamindex...
+    const char *t;
+    if ((t = pa_proplist_gets(i->proplist, "phonon.streamid"))) {
+        logMessage(QString("Found PulseAudio stream index %1 for Phonon Output Stream %2").arg(i->index).arg(t));
+        s_outputStreamIndexMap[QString(t)] = i->index;
+
+        // Find the sink's phonon index and notify whoever cares...
+        if (PA_INVALID_INDEX != i->sink) {
+            bool found = false;
+            int device;
+            QMap<int, AudioDevice>::iterator it;
+            for (it = s_outputDevices.begin(); it != s_outputDevices.end(); ++it) {
+                if ((*it).pulseIndex == i->sink) {
+                    found = true;
+                    device = it.key();
+                    break;
+                }
+            }
+            if (found) {
+                // OK so we just emit our signal
+                logMessage(QString("Letting the rest of phonon know about this"));
+                s_instance->emitUsingDevice(QString(t), device);
+            }
+        }
+    }
+}
+
+void source_output_cb(pa_context *c, const pa_source_output_info *i, int eol, void *userdata) {
+    Q_UNUSED(userdata);
+    Q_ASSERT(c);
+
+    if (eol < 0) {
+        if (pa_context_errno(c) == PA_ERR_NOENTITY)
+            return;
+
+        logMessage(QString("Source output callback failure"));
+        return;
+    }
+
+    if (eol > 0)
+        return;
+
+    Q_ASSERT(i);
+
+    // loop through (*i) and extract phonon->streamindex...
+    const char *t;
+    if ((t = pa_proplist_gets(i->proplist, "phonon.streamid"))) {
+        logMessage(QString("Found PulseAudio stream index %1 for Phonon Capture Stream %2").arg(i->index).arg(t));
+        s_captureStreamIndexMap[QString(t)] = i->index;
+
+        // Find the source's phonon index and notify whoever cares...
+        if (PA_INVALID_INDEX != i->source) {
+            bool found = false;
+            int device;
+            QMap<int, AudioDevice>::iterator it;
+            for (it = s_captureDevices.begin(); it != s_captureDevices.end(); ++it) {
+                if ((*it).pulseIndex == i->source) {
+                    found = true;
+                    device = it.key();
+                    break;
+                }
+            }
+            if (found) {
+                // OK so we just emit our signal
+                logMessage(QString("Letting the rest of phonon know about this"));
+                s_instance->emitUsingDevice(QString(t), device);
+            }
+        }
+    }
+}
+
+static void subscribe_cb(pa_context *c, pa_subscription_event_type_t t, uint32_t index, void *userdata) {
+    Q_UNUSED(userdata);
+
+    switch (t & PA_SUBSCRIPTION_EVENT_FACILITY_MASK) {
+        case PA_SUBSCRIPTION_EVENT_SINK_INPUT:
+            if ((t & PA_SUBSCRIPTION_EVENT_TYPE_MASK) == PA_SUBSCRIPTION_EVENT_REMOVE) {
+                QString phononid = s_outputStreamIndexMap.key(index);
+                if (!phononid.isEmpty()) {
+                    if (s_outputStreamIndexMap.contains(phononid)) {
+                        logMessage(QString("Phonon Output Stream %1 is gone at the PA end. Marking it as invalid in our cache as we may reuse it.").arg(phononid));
+                        s_outputStreamIndexMap[phononid] = PA_INVALID_INDEX;
+                    } else {
+                        logMessage(QString("Removing Phonon Output Stream %1 (it's gone!)").arg(phononid));
+                        s_outputStreamIndexMap.remove(phononid);
+                    }
+                }
+            } else {
+                pa_operation *o;
+                if (!(o = pa_context_get_sink_input_info(c, index, sink_input_cb, NULL))) {
+                    logMessage(QString("pa_context_get_sink_input_info() failed"));
+                    return;
+                }
+                pa_operation_unref(o);
+            }
+            break;
+
+        case PA_SUBSCRIPTION_EVENT_SOURCE_OUTPUT:
+            if ((t & PA_SUBSCRIPTION_EVENT_TYPE_MASK) == PA_SUBSCRIPTION_EVENT_REMOVE) {
+                QString phononid = s_captureStreamIndexMap.key(index);
+                if (!phononid.isEmpty()) {
+                    if (s_captureStreamIndexMap.contains(phononid)) {
+                        logMessage(QString("Phonon Capture Stream %1 is gone at the PA end. Marking it as invalid in our cache as we may reuse it.").arg(phononid));
+                        s_captureStreamIndexMap[phononid] = PA_INVALID_INDEX;
+                    } else {
+                        logMessage(QString("Removing Phonon Capture Stream %1 (it's gone!)").arg(phononid));
+                        s_captureStreamIndexMap.remove(phononid);
+                    }
+                }
+            } else {
+                pa_operation *o;
+                if (!(o = pa_context_get_source_output_info(c, index, source_output_cb, NULL))) {
+                    logMessage(QString("pa_context_get_sink_input_info() failed"));
+                    return;
+                }
+                pa_operation_unref(o);
+            }
+            break;
+    }
+}
+
+
+static void ext_device_manager_subscribe_cb(pa_context *c, void *) {
+    Q_ASSERT(c);
+
+    pa_operation *o;
+#ifdef HAVE_PULSEAUDIO_DEVICE_MANAGER 
+    PulseUserData *u = new PulseUserData; /** @todo Make some object to receive the info... */
+    if (!(o = pa_ext_device_manager_read(c, ext_device_manager_read_cb, u))) {
+        // We need to deal with failure on first iteration
+        if (s_connectionEventloop) {
+            logMessage("Entering connection eventloop (initialisation failed)");
+            s_connectionEventloop->exit(0);
+            s_connectionEventloop = NULL;
+        }
+        logMessage(QString("pa_ext_device_manager_read() failed"));
+        return;
+    }
+    pa_operation_unref(o);
+#else
+    // If we do not have Device Manager support. We just bail out now
+    // and say we are active with our single "devices" for playback and capture
+    s_pulseActive = true;
+    logMessage("Entering connection eventloop (successfully detected PulseAudio)");
+    if (s_connectionEventloop) {
+        s_connectionEventloop->exit(0);
+        s_connectionEventloop = NULL;
+    }
+    createGenericDevices();
+#endif
+
+
+    // Register for the stream changes...
+    pa_context_set_subscribe_callback(c, subscribe_cb, NULL);
+
+    if (!(o = pa_context_subscribe(c, (pa_subscription_mask_t)
+                                   (PA_SUBSCRIPTION_MASK_SINK_INPUT|
+                                    PA_SUBSCRIPTION_MASK_SOURCE_OUTPUT), NULL, NULL))) {
+        logMessage(QString("pa_context_subscribe() failed"));
+        return;
+    }
+    pa_operation_unref(o);
+}
+
+
+static const char* statename(pa_context_state_t state)
+{
+    switch (state)
+    {
+        case PA_CONTEXT_UNCONNECTED:  return "Unconnected";
+        case PA_CONTEXT_CONNECTING:   return "Connecting";
+        case PA_CONTEXT_AUTHORIZING:  return "Authorizing";
+        case PA_CONTEXT_SETTING_NAME: return "Setting Name";
+        case PA_CONTEXT_READY:        return "Ready";
+        case PA_CONTEXT_FAILED:       return "Failed";
+        case PA_CONTEXT_TERMINATED:   return "Terminated";
+    }
+
+    static QString unknown;
+    unknown = QString("Unknown state: %0").arg(state);
+    return unknown.toAscii().constData();
+}
+
+static void context_state_callback(pa_context *c, void *)
+{
+    Q_ASSERT(c);
+
+    logMessage(QString("context_state_callback %1").arg(statename(pa_context_get_state(c))));
+    switch (pa_context_get_state(c)) {
+        case PA_CONTEXT_UNCONNECTED:
+        case PA_CONTEXT_CONNECTING:
+        case PA_CONTEXT_AUTHORIZING:
+        case PA_CONTEXT_SETTING_NAME:
+            break;
+
+        case PA_CONTEXT_READY:
+            // Attempt to load things up
+            ext_device_manager_subscribe_cb(c, NULL);
+            break;
+
+        case PA_CONTEXT_FAILED:
+            s_pulseActive = false;
+            if (s_connectionEventloop) {
+                logMessage("Entering connection eventloop (connection failed)");
+                s_connectionEventloop->exit(0);
+                s_connectionEventloop = NULL;
+            }
+            break;
+
+        case PA_CONTEXT_TERMINATED:
+        default:
+            s_pulseActive = false;
+            /// @todo Deal with reconnection...
+            break;
+    }
+}
+#endif // HAVE_PULSEAUDIO
+
+
+PulseSupport* PulseSupport::getInstance()
+{
+    if (NULL == s_instance) {
+        s_instance = new PulseSupport();
+    }
+    return s_instance;
+}
+
+void PulseSupport::shutdown()
+{
+    if (NULL != s_instance) {
+        delete s_instance;
+        s_instance = NULL;
+    }
+}
+
+PulseSupport::PulseSupport()
+ : QObject(), mEnabled(false)
+{
+#ifdef HAVE_PULSEAUDIO
+    // Initialise our map (is there a better way to do this?)
+    s_roleCategoryMap["none"] = Phonon::NoCategory;
+    s_roleCategoryMap["video"] = Phonon::VideoCategory;
+    s_roleCategoryMap["music"] = Phonon::MusicCategory;
+    s_roleCategoryMap["game"] = Phonon::GameCategory;
+    s_roleCategoryMap["event"] = Phonon::NotificationCategory;
+    s_roleCategoryMap["phone"] = Phonon::CommunicationCategory;
+    //s_roleCategoryMap["animation"]; // No Mapping
+    //s_roleCategoryMap["production"]; // No Mapping
+    s_roleCategoryMap["a11y"] = Phonon::AccessibilityCategory;
+
+    // To allow for easy debugging, give an easy way to disable this pulseaudio check
+    QString pulseenv = qgetenv("PHONON_PULSEAUDIO_DISABLE");
+    if (pulseenv.toInt())
+        return;
+
+    // We require a glib event loop
+    if (QLatin1String(QAbstractEventDispatcher::instance()->metaObject()->className())
+            != "QGuiEventDispatcherGlib") {
+        logMessage("Disabling PulseAudio integration for lack of GLib event loop.");
+        return;
+    }
+
+    s_mainloop = pa_glib_mainloop_new(NULL);
+    Q_ASSERT(s_mainloop);
+    pa_mainloop_api *api = pa_glib_mainloop_get_api(s_mainloop);
+
+    // We create a simple event loop to allow the glib loop
+    // to iterate until we've connected or not to the server.
+    s_connectionEventloop = new QEventLoop;
+
+    // XXX I don't want to show up in the client list. All I want to know is the list of sources
+    // and sinks...
+    s_context = pa_context_new(api, "libphonon");
+    // (cg) Convert to PA_CONTEXT_NOFLAGS when PulseAudio 0.9.19 is required
+    if (pa_context_connect(s_context, NULL, static_cast<pa_context_flags_t>(0), 0) >= 0) {
+        pa_context_set_state_callback(s_context, &context_state_callback, s_connectionEventloop);
+        // Now we block until we connect or otherwise...
+        logMessage("Entering connection eventloop...");
+        s_connectionEventloop->exec();
+    }
+#endif
+}
+
+PulseSupport::~PulseSupport()
+{
+#ifdef HAVE_PULSEAUDIO
+    if (s_context) {
+        pa_context_disconnect(s_context);
+        s_context = NULL;
+    }
+
+    if (s_mainloop) {
+        pa_glib_mainloop_free(s_mainloop);
+        s_mainloop = NULL;
+    }
+
+    if (s_connectionEventloop) {
+        delete s_connectionEventloop;
+        s_connectionEventloop = NULL;
+    }
+#endif
+}
+
+bool PulseSupport::isActive()
+{
+#ifdef HAVE_PULSEAUDIO
+    return mEnabled && s_pulseActive;
+#else
+    return false;
+#endif
+}
+
+void PulseSupport::enable(bool enabled)
+{
+    mEnabled = enabled;
+}
+
+QList<int> PulseSupport::objectDescriptionIndexes(ObjectDescriptionType type) const
+{
+    QList<int> list;
+
+    if (type != AudioOutputDeviceType && type != AudioCaptureDeviceType)
+        return list;
+
+#ifdef HAVE_PULSEAUDIO
+    if (s_pulseActive) {
+        switch (type) {
+
+            case AudioOutputDeviceType: {
+                QMap<QString, int>::iterator it;
+                for (it = s_outputDeviceIndexes.begin(); it != s_outputDeviceIndexes.end(); ++it) {
+                    list.append(*it);
+                }
+                break;
+            }
+            case AudioCaptureDeviceType: {
+                QMap<QString, int>::iterator it;
+                for (it = s_captureDeviceIndexes.begin(); it != s_captureDeviceIndexes.end(); ++it) {
+                    list.append(*it);
+                }
+                break;
+            }
+            default:
+                break;
+        }
+    }
+#endif
+
+    return list;
+}
+
+QHash<QByteArray, QVariant> PulseSupport::objectDescriptionProperties(ObjectDescriptionType type, int index) const
+{
+    QHash<QByteArray, QVariant> ret;
+
+    if (type != AudioOutputDeviceType && type != AudioCaptureDeviceType)
+        return ret;
+
+#ifndef HAVE_PULSEAUDIO
+    Q_UNUSED(index);
+#else
+    if (s_pulseActive) {
+        switch (type) {
+
+            case AudioOutputDeviceType:
+                Q_ASSERT(s_outputDevices.contains(index));
+                ret = s_outputDevices[index].properties;
+                break;
+
+            case AudioCaptureDeviceType:
+                Q_ASSERT(s_captureDevices.contains(index));
+                ret = s_captureDevices[index].properties;
+                break;
+
+            default:
+                break;
+        }
+    }
+#endif
+
+    return ret;
+}
+
+QList<int> PulseSupport::objectIndexesByCategory(ObjectDescriptionType type, Category category) const
+{
+    QList<int> ret;
+
+    if (type != AudioOutputDeviceType && type != AudioCaptureDeviceType)
+        return ret;
+
+#ifndef HAVE_PULSEAUDIO
+    Q_UNUSED(category);
+#else
+    if (s_pulseActive) {
+        switch (type) {
+
+            case AudioOutputDeviceType:
+                if (s_outputDevicePriorities.contains(category))
+                    ret = s_outputDevicePriorities[category].values();
+                break;
+
+            case AudioCaptureDeviceType:
+                if (s_captureDevicePriorities.contains(category))
+                    ret = s_captureDevicePriorities[category].values();
+                break;
+
+            default:
+                break;
+        }
+    }
+#endif
+
+    return ret;
+}
+
+#ifdef HAVE_PULSEAUDIO
+static void setDevicePriority(Category category, QStringList list)
+{
+    QString role = s_roleCategoryMap.key(category);
+    if (role.isEmpty())
+        return;
+
+    logMessage(QString("Reindexing %1: %2").arg(role).arg(list.join(", ")));
+
+    char **devices;
+    devices = pa_xnew(char *, list.size()+1);
+    int i = 0;
+    foreach (QString str, list) {
+        devices[i++] = pa_xstrdup(str.toUtf8().constData());
+    }
+    devices[list.size()] = NULL;
+
+#ifdef HAVE_PULSEAUDIO_DEVICE_MANAGER 
+    pa_operation *o;
+    if (!(o = pa_ext_device_manager_reorder_devices_for_role(s_context, role.toUtf8().constData(), (const char**)devices, NULL, NULL)))
+        logMessage(QString("pa_ext_device_manager_reorder_devices_for_role() failed"));
+    else
+        pa_operation_unref(o);
+#endif
+
+    for (i = 0; i < list.size(); ++i)
+        pa_xfree(devices[i]);
+    pa_xfree(devices);
+}
+#endif
+
+void PulseSupport::setOutputDevicePriorityForCategory(Category category, QList<int> order)
+{
+#ifndef HAVE_PULSEAUDIO
+    Q_UNUSED(category);
+    Q_UNUSED(order);
+#else
+    QStringList list;
+    QList<int>::iterator it;
+
+    for (it = order.begin(); it != order.end(); ++it) {
+        if (s_outputDevices.contains(*it)) {
+            list << s_outputDeviceIndexes.key(*it);
+        }
+    }
+    setDevicePriority(category, list);
+#endif
+}
+
+void PulseSupport::setCaptureDevicePriorityForCategory(Category category, QList<int> order)
+{
+#ifndef HAVE_PULSEAUDIO
+    Q_UNUSED(category);
+    Q_UNUSED(order);
+#else
+    QStringList list;
+    QList<int>::iterator it;
+
+    for (it = order.begin(); it != order.end(); ++it) {
+        if (s_captureDevices.contains(*it)) {
+            list << s_captureDeviceIndexes.key(*it);
+        }
+    }
+    setDevicePriority(category, list);
+#endif
+}
+
+void PulseSupport::setStreamPropList(Category category, QString streamUuid)
+{
+#ifndef HAVE_PULSEAUDIO
+    Q_UNUSED(category);
+    Q_UNUSED(streamUuid);
+#else
+    QString role = s_roleCategoryMap.key(category);
+    if (role.isEmpty())
+        return;
+
+    logMessage(QString("Setting role to %1 for streamindex %2").arg(role).arg(streamUuid));
+    setenv("PULSE_PROP_media.role", role.toLatin1().constData(), 1);
+    setenv("PULSE_PROP_phonon.streamid", streamUuid.toLatin1().constData(), 1);
+#endif
+}
+
+void PulseSupport::emitObjectDescriptionChanged(ObjectDescriptionType type)
+{
+    emit objectDescriptionChanged(type);
+}
+
+void PulseSupport::emitUsingDevice(QString streamUuid, int device)
+{
+    emit usingDevice(streamUuid, device);
+}
+
+bool PulseSupport::setOutputDevice(QString streamUuid, int device) {
+#ifndef HAVE_PULSEAUDIO
+    Q_UNUSED(streamUuid);
+    Q_UNUSED(device);
+    return false;
+#else
+    if (s_outputDevices.size() < 2)
+        return true;
+
+    if (!s_outputDevices.contains(device)) {
+        logMessage(QString("Attempting to set Output Device for invalid device id %1.").arg(device));
+        return false;
+    }
+    const QVariant var = s_outputDevices[device].properties["name"];
+    logMessage(QString("Attempting to set Output Device to '%1' for Output Stream %2").arg(var.toString()).arg(streamUuid));
+
+    // Attempt to look up the pulse stream index.
+    if (s_outputStreamIndexMap.contains(streamUuid) && s_outputStreamIndexMap[streamUuid] != PA_INVALID_INDEX) {
+        logMessage(QString("... Found in map. Moving now"));
+
+        uint32_t pulse_device_index = s_outputDevices[device].pulseIndex;
+        uint32_t pulse_stream_index = s_outputStreamIndexMap[streamUuid];
+
+        logMessage(QString("Moving Pulse Sink Input %1 to '%2' (Pulse Sink %3)").arg(pulse_stream_index).arg(var.toString()).arg(pulse_device_index));
+
+        /// @todo Find a way to move the stream without saving it... We don't want to pollute the stream restore db.
+        pa_operation* o;
+        if (!(o = pa_context_move_sink_input_by_index(s_context, pulse_stream_index, pulse_device_index, NULL, NULL))) {
+            logMessage(QString("pa_context_move_sink_input_by_index() failed"));
+            return false;
+        }
+        pa_operation_unref(o);
+    } else {
+        logMessage(QString("... Not found in map. We will be notified of the device when the stream appears and we can process any moves needed then"));
+    }
+    return true;
+#endif
+}
+
+bool PulseSupport::setCaptureDevice(QString streamUuid, int device) {
+#ifndef HAVE_PULSEAUDIO
+    Q_UNUSED(streamUuid);
+    Q_UNUSED(device);
+    return false;
+#else
+    if (s_captureDevices.size() < 2)
+        return true;
+
+    if (!s_captureDevices.contains(device)) {
+        logMessage(QString("Attempting to set Capture Device for invalid device id %1.").arg(device));
+        return false;
+    }
+    const QVariant var = s_captureDevices[device].properties["name"];
+    logMessage(QString("Attempting to set Capture Device to '%1' for Capture Stream %2").arg(var.toString()).arg(streamUuid));
+
+    // Attempt to look up the pulse stream index.
+    if (s_captureStreamIndexMap.contains(streamUuid) && s_captureStreamIndexMap[streamUuid] == PA_INVALID_INDEX) {
+        logMessage(QString("... Found in map. Moving now"));
+
+        uint32_t pulse_device_index = s_captureDevices[device].pulseIndex;
+        uint32_t pulse_stream_index = s_captureStreamIndexMap[streamUuid];
+
+        logMessage(QString("Moving Pulse Source Output %1 to '%2' (Pulse Sink %3)").arg(pulse_stream_index).arg(var.toString()).arg(pulse_device_index));
+
+        /// @todo Find a way to move the stream without saving it... We don't want to pollute the stream restore db.
+        pa_operation* o;
+        if (!(o = pa_context_move_source_output_by_index(s_context, pulse_stream_index, pulse_device_index, NULL, NULL))) {
+            logMessage(QString("pa_context_move_source_output_by_index() failed"));
+            return false;
+        }
+        pa_operation_unref(o);
+    } else {
+        logMessage(QString("... Not found in map. We will be notified of the device when the stream appears and we can process any moves needed then"));
+    }
+    return true;
+#endif
+}
+
+void PulseSupport::clearStreamCache(QString streamUuid) {
+#ifndef HAVE_PULSEAUDIO
+    Q_UNUSED(streamUuid);
+    return;
+#else
+    logMessage(QString("Clearing stream cache for stream %1").arg(streamUuid));
+    s_outputStreamIndexMap.remove(streamUuid);
+    s_captureStreamIndexMap.remove(streamUuid);
+#endif
+}
+
+} // namespace Phonon
+
+QT_END_NAMESPACE
+
+#include "moc_pulsesupport.cpp"
+
+// vim: sw=4 ts=4
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/pulsesupport.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/pulsesupport.h	2010-04-13 18:06:58.325882271 -0400
@@ -0,0 +1,78 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2009 Colin Guthrie <cguthrie@mandriva.org>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation 
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public 
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#ifndef PHONON_PULSESUPPORT_H
+#define PHONON_PULSESUPPORT_H
+
+#include "phonon_export.h"
+#include "phononnamespace.h"
+#include "objectdescription.h"
+
+#include <QtCore/QtGlobal>
+#include <QtCore/QSet>
+
+QT_BEGIN_HEADER
+QT_BEGIN_NAMESPACE
+
+namespace Phonon
+{
+    class PHONON_EXPORT PulseSupport : public QObject
+    {
+        Q_OBJECT
+        public:
+            static PulseSupport* getInstance();
+            static void shutdown();
+
+            bool isActive();
+            void enable(bool enabled = true);
+
+            QList<int> objectDescriptionIndexes(ObjectDescriptionType type) const;
+            QHash<QByteArray, QVariant> objectDescriptionProperties(ObjectDescriptionType type, int index) const;
+            QList<int> objectIndexesByCategory(ObjectDescriptionType type, Category category) const;
+
+            void setOutputDevicePriorityForCategory(Category category, QList<int> order);
+            void setCaptureDevicePriorityForCategory(Category category, QList<int> order);
+
+            void setStreamPropList(Category category, QString streamUuid);
+            void emitObjectDescriptionChanged(ObjectDescriptionType);
+            void emitUsingDevice(QString streamUuid, int device);
+
+            bool setOutputDevice(QString streamUuid, int device);
+            bool setCaptureDevice(QString streamUuid, int device);
+            void clearStreamCache(QString streamUuid);
+
+        signals:
+            void objectDescriptionChanged(ObjectDescriptionType);
+            void usingDevice(QString streamUuid, int device);
+
+        private:
+            PulseSupport();
+            ~PulseSupport();
+
+            bool mEnabled;
+    };
+} // namespace Phonon
+
+QT_END_NAMESPACE
+QT_END_HEADER
+
+#endif // PHONON_PULSESUPPORT_H
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/seekslider.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/seekslider.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/seekslider.cpp	2010-04-13 18:06:58.325882271 -0400
@@ -72,12 +72,12 @@
     d->media = media;
 
     if (media) {
-        connect(media, SIGNAL(stateChanged(Phonon::State,Phonon::State)),
+        connect(media, SIGNAL(stateChanged(Phonon::State, Phonon::State)),
                 SLOT(_k_stateChanged(Phonon::State)));
         connect(media, SIGNAL(totalTimeChanged(qint64)), SLOT(_k_length(qint64)));
         connect(media, SIGNAL(tick(qint64)), SLOT(_k_tick(qint64)));
         connect(media, SIGNAL(seekableChanged(bool)), SLOT(_k_seekableChanged(bool)));
-        connect(media, SIGNAL(currentSourceChanged(Phonon::MediaSource)), SLOT(_k_currentSourceChanged()));
+        connect(media, SIGNAL(currentSourceChanged(const Phonon::MediaSource&)), SLOT(_k_currentSourceChanged()));
         d->_k_stateChanged(media->state());
         d->_k_seekableChanged(media->isSeekable());
         d->_k_length(media->totalTime());
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/seekslider_p.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/seekslider_p.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/seekslider_p.h	2010-04-13 18:06:58.325882271 -0400
@@ -24,8 +24,8 @@
 #define SEEKSLIDER_P_H
 
 #include "seekslider.h"
+#include "swiftslider_p.h"
 #include <QtGui/QBoxLayout>
-#include <QtGui/QSlider>
 #include <QtGui/QLabel>
 #include <QtGui/QPixmap>
 #include <QtGui/QIcon>
@@ -84,7 +84,7 @@
         void _k_currentSourceChanged();
 
         QBoxLayout layout;
-        QSlider slider;
+        SwiftSlider slider;
         QLabel iconLabel;
         QPointer<MediaObject> media;
         bool ticking;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/swiftslider.cpp
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/swiftslider.cpp	2010-04-13 18:06:58.329860291 -0400
@@ -0,0 +1,103 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2006-2008 Ricardo Villalba <rvm@escomposlinux.org>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#include "swiftslider_p.h"
+
+#include <QtGui/QMouseEvent>
+#include <QtGui/QStyle>
+#include <QtGui/QStyleOption>
+
+QT_BEGIN_NAMESPACE
+
+#if !defined(QT_NO_PHONON_SEEKSLIDER) && !defined(QT_NO_PHONON_VOLUMESLIDER)
+
+namespace Phonon
+{
+
+SwiftSlider::SwiftSlider(Qt::Orientation orientation, QWidget * parent)
+	: QSlider(orientation, parent)
+{
+}
+
+SwiftSlider::~SwiftSlider()
+{
+}
+
+// Function copied from qslider.cpp
+inline int SwiftSlider::pick(const QPoint &pt) const
+{
+    return orientation() == Qt::Horizontal ? pt.x() : pt.y();
+}
+
+// Function copied from qslider.cpp and modified to make it compile
+int SwiftSlider::pixelPosToRangeValue(int pos) const
+{
+    QStyleOptionSlider opt;
+    initStyleOption(&opt);
+    QRect gr = style()->subControlRect(QStyle::CC_Slider, &opt, QStyle::SC_SliderGroove, this);
+    QRect sr = style()->subControlRect(QStyle::CC_Slider, &opt, QStyle::SC_SliderHandle, this);
+    int sliderMin, sliderMax, sliderLength;
+
+    if (orientation() == Qt::Horizontal) {
+        sliderLength = sr.width();
+        sliderMin = gr.x();
+        sliderMax = gr.right() - sliderLength + 1;
+    } else {
+        sliderLength = sr.height();
+        sliderMin = gr.y();
+        sliderMax = gr.bottom() - sliderLength + 1;
+    }
+    return QStyle::sliderValueFromPosition(minimum(), maximum(), pos - sliderMin,
+                                           sliderMax - sliderMin, opt.upsideDown);
+}
+
+// Based on code from qslider.cpp
+void SwiftSlider::mousePressEvent(QMouseEvent *event)
+{
+    if (event->button() == Qt::LeftButton) {
+        QStyleOptionSlider opt;
+        initStyleOption(&opt);
+        const QRect sliderRect = style()->subControlRect(QStyle::CC_Slider, &opt, QStyle::SC_SliderHandle, this);
+        const QPoint center = sliderRect.center() - sliderRect.topLeft();
+        // to take half of the slider off for the setSliderPosition call we use the center - topLeft
+
+        if (!sliderRect.contains(event->pos())) {
+            event->accept();
+
+            setSliderPosition(pixelPosToRangeValue(pick(event->pos() - center)));
+            triggerAction(SliderMove);
+            setRepeatAction(SliderNoAction);
+        } else {
+            QSlider::mousePressEvent(event);
+        }
+    } else {
+        QSlider::mousePressEvent(event);
+    }
+}
+
+} // namespace Phonon
+
+#endif //QT_NO_PHONON_VOLUMESLIDER && QT_NO_PHONON_VOLUMESLIDER
+
+QT_END_NAMESPACE
+
+#include "moc_swiftslider_p.cpp"
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/swiftslider_p.h
===================================================================
--- /dev/null	1970-01-01 00:00:00.000000000 +0000
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/swiftslider_p.h	2010-04-13 18:06:58.329860291 -0400
@@ -0,0 +1,68 @@
+/*  This file is part of the KDE project
+    Copyright (C) 2006-2008 Ricardo Villalba <rvm@escomposlinux.org>
+
+    This library is free software; you can redistribute it and/or
+    modify it under the terms of the GNU Lesser General Public
+    License as published by the Free Software Foundation; either
+    version 2.1 of the License, or (at your option) version 3, or any
+    later version accepted by the membership of KDE e.V. (or its
+    successor approved by the membership of KDE e.V.), Nokia Corporation
+    (or its successors, if any) and the KDE Free Qt Foundation, which shall
+    act as a proxy defined in Section 6 of version 3 of the license.
+
+    This library is distributed in the hope that it will be useful,
+    but WITHOUT ANY WARRANTY; without even the implied warranty of
+    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+    Lesser General Public License for more details.
+
+    You should have received a copy of the GNU Lesser General Public
+    License along with this library.  If not, see <http://www.gnu.org/licenses/>.
+
+*/
+
+#ifndef SWIFTSLIDER_H
+#define SWIFTSLIDER_H
+
+#include <QtGui/QSlider>
+
+QT_BEGIN_NAMESPACE
+
+#if !defined(QT_NO_PHONON_SEEKSLIDER) && !defined(QT_NO_PHONON_VOLUMESLIDER)
+
+namespace Phonon
+{
+
+/** \class SwiftSlider swiftslider_p.h Phonon/SwiftSlider
+ * \short Modified QSlider that allows sudden/quick moves instead of stepped moves ("Click'n'Go" QSlider)
+ *
+ * This is an internal class used by SeekSlider and VolumeSlider.
+ *
+ * Ricardo Villalba, the original author of MySlider.cpp (from the SMPlayer project)
+ * gave his permission for the inclusion of this code inside Phonon by
+ * switching MySlider.cpp to the LGPLv2.1+ license.
+ * See http://smplayer.svn.sourceforge.net/viewvc/smplayer/smplayer/trunk/src/myslider.cpp?revision=2406&view=markup
+ *
+ * The original discussion about a "Click'n'Go QSlider": http://lists.trolltech.com/qt-interest/2006-11/msg00363.html
+ *
+ * \ingroup PhononWidgets
+ */
+class SwiftSlider : public QSlider
+{
+	Q_OBJECT
+public:
+	SwiftSlider(Qt::Orientation orientation, QWidget * parent);
+	~SwiftSlider();
+
+private:
+	void mousePressEvent(QMouseEvent *event);
+	inline int pick(const QPoint &pt) const;
+	int pixelPosToRangeValue(int pos) const;
+};
+
+} // namespace Phonon
+
+#endif //QT_NO_PHONON_VOLUMESLIDER && QT_NO_PHONON_VOLUMESLIDER
+
+QT_END_NAMESPACE
+
+#endif //SWIFTSLIDER_H
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/videowidget.cpp
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/videowidget.cpp	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/videowidget.cpp	2010-04-13 18:06:58.329860291 -0400
@@ -28,8 +28,9 @@
 #include "phononnamespace_p.h"
 
 #include <QtGui/QAction>
-
-#define PHONON_INTERFACENAME VideoWidgetInterface
+#define IFACES4 VideoWidgetInterface44
+#define IFACES0 VideoWidgetInterface, IFACES4
+#define PHONON_INTERFACENAME IFACES0
 
 QT_BEGIN_NAMESPACE
 
@@ -48,6 +49,8 @@
     setMouseTracking(true);
 }
 
+
+
 VideoWidget::VideoWidget(VideoWidgetPrivate &dd, QWidget *parent)
     : QWidget(parent),
     Phonon::AbstractVideoOutput(dd)
@@ -98,6 +101,15 @@
 PHONON_INTERFACE_GETTER(qreal, saturation, d->saturation)
 PHONON_INTERFACE_SETTER(setSaturation, saturation, qreal)
 
+
+QImage VideoWidget::snapshot() const {
+    K_D(const VideoWidget);
+    ConstIface<IFACES4> iface(d);
+    if(iface) return iface->snapshot();
+    return QImage(); // TODO not implemented in VideoInterface
+}
+
+
 void VideoWidget::setFullScreen(bool newFullScreen)
 {
     pDebug() << Q_FUNC_INFO << newFullScreen;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/videowidget.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/videowidget.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/videowidget.h	2010-04-13 18:06:58.329860291 -0400
@@ -172,6 +172,7 @@
             qreal contrast() const;
             qreal hue() const;
             qreal saturation() const;
+            QImage snapshot() const;
 
             //TODO: bar colors property
         public Q_SLOTS:
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/videowidgetinterface.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/videowidgetinterface.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/videowidgetinterface.h	2010-04-13 18:06:58.329860291 -0400
@@ -53,8 +53,21 @@
 //X        virtual int overlayCapabilities() const = 0;
 //X        virtual bool createOverlay(QWidget *widget, int type) = 0;
 };
+
+class VideoWidgetInterface44 : public VideoWidgetInterface
+{
+    public:
+        virtual QImage snapshot() const = 0;
+};
 }
 
+#ifdef PHONON_BACKEND_VERSION_4_4
+namespace Phonon { typedef VideoWidgetInterface44 VideoWidgetInterfaceLatest; }
+#else
+namespace Phonon { typedef VideoWidgetInterface VideoWidgetInterfaceLatest; }
+#endif
+
+Q_DECLARE_INTERFACE(Phonon::VideoWidgetInterface44, "VideoWidgetInterface44.phonon.kde.org")
 Q_DECLARE_INTERFACE(Phonon::VideoWidgetInterface, "VideoWidgetInterface3.phonon.kde.org")
 
 #endif //QT_NO_PHONON_VIDEO
Index: qt4-x11-4.6.2/src/3rdparty/phonon/phonon/volumeslider_p.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/phonon/volumeslider_p.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/phonon/volumeslider_p.h	2010-04-13 18:06:58.329860291 -0400
@@ -24,8 +24,8 @@
 #define VOLUMESLIDER_P_H
 
 #include "volumeslider.h"
+#include "swiftslider_p.h"
 #include <QtGui/QBoxLayout>
-#include <QtGui/QSlider>
 #include <QtGui/QLabel>
 #include <QtGui/QPixmap>
 #include <QtGui/QToolButton>
@@ -83,7 +83,7 @@
 
     private:
         QBoxLayout layout;
-        QSlider slider;
+        SwiftSlider slider;
         QToolButton muteButton;
         QIcon volumeIcon;
         QIcon mutedIcon;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/audionode.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/audionode.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/audionode.h	2010-04-13 18:06:58.329860291 -0400
@@ -72,7 +72,7 @@
             AudioUnit m_audioUnit;
 
             // Only the following methods needs to
-            // be overidden by only_one-audio-unit nodes:
+            // be overridden by only_one-audio-unit nodes:
             virtual ComponentDescription getAudioNodeDescription() const;
             virtual void initializeAudioUnit();
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/audionode.mm
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/audionode.mm	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/audionode.mm	2010-04-13 18:06:58.329860291 -0400
@@ -68,15 +68,13 @@
         << QString(!FindNextComponent(0, &description) ? "ERROR: COMPONENT NOT FOUND!" : "OK!"))
 
     OSStatus err = noErr;
-
-    // The proper function to call here is AUGraphAddNode() but the type has
-    // changed between 10.5 and 10.6. it's still OK to call this function, but
-    // if we want to use the proper thing we need to move over to
-    // AudioComponentDescription everywhere, which is very similar to the
-    // ComponentDescription, but a different size.  however,
-    // AudioComponentDescription only exists on 10.6+. More fun than we need to
-    // deal with at the moment, so we'll take the "deprecated" warning instead.
-    err = AUGraphNewNode(m_audioGraph->audioGraphRef(), &description, 0, 0, &m_auNode);
+#if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_5
+    if (QSysInfo::MacintoshVersion >= QSysInfo::MV_10_5)
+        err = AUGraphAddNode(m_audioGraph->audioGraphRef(), &description, &m_auNode);
+    else
+#endif
+        err = AUGraphNewNode(m_audioGraph->audioGraphRef(), &description, 0, 0, &m_auNode);
+        
     BACKEND_ASSERT2(err != kAUGraphErr_OutputNodeErr, "A MediaObject can only be connected to one audio output device.", FATAL_ERROR)
     BACKEND_ASSERT2(err == noErr, "Could not create new AUNode.", FATAL_ERROR)
 }
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/backendinfo.mm
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/backendinfo.mm	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/backendinfo.mm	2010-04-13 18:06:58.333853535 -0400
@@ -22,7 +22,6 @@
 #include <AudioUnit/AudioUnit.h>
 #include <CoreServices/CoreServices.h>
 
-#include <QtGui/qmacdefines_mac.h>
 #import <QTKit/QTMovie.h>
 
 #ifdef QUICKTIME_C_API_AVAILABLE
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/mediaobject.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/mediaobject.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/mediaobject.h	2010-04-13 18:06:58.333853535 -0400
@@ -25,10 +25,6 @@
 
 #include "medianode.h"
 
-#if QT_ALLOW_QUICKTIME
-    #include <QuickTime/QuickTime.h>
-#endif
-
 QT_BEGIN_NAMESPACE
 
 namespace Phonon
@@ -42,10 +38,7 @@
     class MediaObjectAudioNode;
 
     class MediaObject : public MediaNode,
-        public Phonon::MediaObjectInterface
-#ifndef QT_NO_PHONON_MEDIACONTROLLER
-        , public Phonon::AddonInterface
-#endif
+        public Phonon::MediaObjectInterface, public Phonon::AddonInterface
     {
         Q_OBJECT
         Q_INTERFACES(Phonon::MediaObjectInterface Phonon::AddonInterface)
@@ -99,10 +92,6 @@
 
 		int videoOutputCount();
 
-#if QT_ALLOW_QUICKTIME
-        void displayLinkEvent();
-#endif
-
     signals:
         void stateChanged(Phonon::State,Phonon::State);
         void tick(qint64);
@@ -116,16 +105,6 @@
         void metaDataChanged(QMultiMap<QString,QString>);
         void currentSourceChanged(const MediaSource &newSource);
 
-        // Add-on interface:
-        void availableSubtitlesChanged();
-        void availableAudioChannelsChanged();
-        void titleChanged(int);
-        void availableTitlesChanged(int);
-        void chapterChanged(int);
-        void availableChaptersChanged(int);
-        void angleChanged(int);
-        void availableAnglesChanged(int);
-
     protected:
         void mediaNodeEvent(const MediaNodeEvent *event);
         bool event(QEvent *event);
@@ -139,14 +118,7 @@
         QuickTimeVideoPlayer *m_nextVideoPlayer;
         QuickTimeAudioPlayer *m_nextAudioPlayer;
         MediaObjectAudioNode *m_mediaObjectAudioNode;
-
-#if QT_ALLOW_QUICKTIME
-        CVDisplayLinkRef m_displayLink;
-        QMutex m_displayLinkMutex;
-        bool m_pendingDisplayLinkEvent;
-        void startDisplayLink();
-        void stopDisplayLink();
-#endif
+        QuickTimeMetaData *m_metaData;
 
         qint32 m_tickInterval;
         qint32 m_transitionTime;
@@ -155,14 +127,12 @@
         float m_percentageLoaded;
 
         int m_tickTimer;
-        int m_videoTimer;
-        int m_audioTimer;
+        int m_bufferTimer;
         int m_rapidTimer;
 
         bool m_waitNextSwap;
         int m_swapTimeLeft;
         QTime m_swapTime;
-        bool m_autoplayTitles;
 
         void synchAudioVideo();
         void updateCurrentTime();
@@ -171,7 +141,8 @@
         void pause_internal();
         void play_internal();
         void setupAudioSystem();
-        void restartAudioVideoTimers();
+        void updateTimer(int &timer, int interval);
+        void bufferAudioVideo();
         void updateRapidly();
         void updateCrossFade();
         void updateAudioBuffers();
@@ -183,7 +154,6 @@
 		void inspectVideoGraphRecursive(MediaNode *node, int &effectCount, int &outputCount);
         void inspectGraph();
         bool isCrossFading();
-        void setCurrentTrack(int track);
 
         QString m_errorString;
         Phonon::ErrorType m_errorType;
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/mediaobject.mm
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/mediaobject.mm	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/mediaobject.mm	2010-04-13 18:06:58.333853535 -0400
@@ -46,6 +46,7 @@
     m_mediaObjectAudioNode = new MediaObjectAudioNode(m_audioPlayer, m_nextAudioPlayer);
     setAudioNode(m_mediaObjectAudioNode);
 
+    m_metaData = new QuickTimeMetaData();
     m_audioGraph = new AudioGraph(this);
 
     m_tickInterval = 0;
@@ -54,7 +55,6 @@
     m_transitionTime = 0;
     m_percentageLoaded = 0;
     m_waitNextSwap = false;
-    m_autoplayTitles = true;
     m_audioEffectCount = 0;
     m_audioOutputCount = 0;
     m_videoEffectCount = 0;
@@ -63,28 +63,20 @@
     m_errorType = Phonon::NoError;
 
     m_tickTimer = 0;
-    m_videoTimer = 0;
-    m_audioTimer = 0;
+    m_bufferTimer = 0;
     m_rapidTimer = 0;
 
-#if QT_ALLOW_QUICKTIME
-    m_displayLink = 0;
-    m_pendingDisplayLinkEvent = false;
-#endif
-
     checkForError();
 }
 
 MediaObject::~MediaObject()
-{
-    // m_mediaObjectAudioNode is owned by super class.
-#if QT_ALLOW_QUICKTIME
-    stopDisplayLink();
-#endif
+{   
+    // m_mediaObjectAudioNode is owned by super class.    
     m_audioPlayer->unsetVideoPlayer();
     m_nextAudioPlayer->unsetVideoPlayer();
     delete m_videoPlayer;
     delete m_nextVideoPlayer;
+    delete m_metaData;
     checkForError();
 }
 
@@ -96,7 +88,7 @@
         emit stateChanged(m_state, prevState);
         if (m_state != state){
             // End-application did something
-            // upon  receiving the signal.
+            // upon  receiving the signal. 
             return false;
         }
     }
@@ -130,7 +122,7 @@
     // Inspect the graph to check wether there are any
     // effects or outputs connected. This will have
     // influence on the audio system and video system that ends up beeing used:
-    int prevVideoOutputCount = m_videoOutputCount;
+    int prevVideoOutputCount = m_videoOutputCount;	
     m_audioEffectCount = 0;
     m_audioOutputCount = 0;
     m_videoEffectCount = 0;
@@ -142,7 +134,7 @@
 	if (m_videoOutputCount != prevVideoOutputCount){
 	    MediaNodeEvent e1(MediaNodeEvent::VideoOutputCountChanged, &m_videoOutputCount);
 	    notify(&e1);
-    }
+	}	
 }
 
 void MediaObject::setupAudioSystem()
@@ -175,14 +167,14 @@
 
     if (newAudioSystem == m_audioSystem)
         return;
-
+  
     // Enable selected audio system:
-    m_audioSystem = newAudioSystem;
+    m_audioSystem = newAudioSystem; 
     switch (newAudioSystem){
         case AS_Silent:
             m_audioGraph->stop();
             m_videoPlayer->enableAudio(false);
-            m_nextVideoPlayer->enableAudio(false);
+            m_nextVideoPlayer->enableAudio(false);    
             m_audioPlayer->enableAudio(false);
             m_nextAudioPlayer->enableAudio(false);
         break;
@@ -222,28 +214,28 @@
     IMPLEMENTED;
 	PhononAutoReleasePool pool;
     setState(Phonon::LoadingState);
-
+    
     // Save current state for event/signal handling below:
     bool prevHasVideo = m_videoPlayer->hasVideo();
     qint64 prevTotalTime = totalTime();
-    int prevTrackCount = m_videoPlayer->trackCount();
     m_waitNextSwap = false;
-
+        
     // Cancel cross-fade if any:
     m_nextVideoPlayer->pause();
     m_nextAudioPlayer->pause();
     m_mediaObjectAudioNode->cancelCrossFade();
-
+    
     // Set new source:
     m_audioPlayer->unsetVideoPlayer();
     m_videoPlayer->setMediaSource(source);
     m_audioPlayer->setVideoPlayer(m_videoPlayer);
+    m_metaData->setVideo(m_videoPlayer);        
 
-    m_audioGraph->updateStreamSpecifications();
+    m_audioGraph->updateStreamSpecifications();        
     m_nextAudioPlayer->unsetVideoPlayer();
-    m_nextVideoPlayer->unsetCurrentMediaSource();
+    m_nextVideoPlayer->unsetVideo();
     m_currentTime = 0;
-
+        
     // Emit/notify information about the new source:
     QRect videoRect = m_videoPlayer->videoRect();
     MediaNodeEvent e1(MediaNodeEvent::VideoFrameSizeChanged, &videoRect);
@@ -254,14 +246,12 @@
     updateVideo(emptyFrame);
 
     emit currentSourceChanged(source);
-    emit metaDataChanged(m_videoPlayer->metaData());
+    emit metaDataChanged(m_metaData->metaData());
 
     if (prevHasVideo != m_videoPlayer->hasVideo())
-        emit hasVideoChanged(m_videoPlayer->hasVideo());
+        emit hasVideoChanged(m_videoPlayer->hasVideo());        
     if (prevTotalTime != totalTime())
-        emit totalTimeChanged(totalTime());
-    if (prevTrackCount != m_videoPlayer->trackCount())
-        emit availableTitlesChanged(m_videoPlayer->trackCount());
+        emit totalTimeChanged(totalTime());        
     if (checkForError())
         return;
     if (!m_videoPlayer->isDrmAuthorized())
@@ -270,7 +260,7 @@
         return;
     if (!m_videoPlayer->canPlayMedia())
         SET_ERROR("Cannot play media.", FATAL_ERROR)
-
+        
     // The state might have changed from LoadingState
     // as a response to an error state change. So we
     // need to check it before stopping: 
@@ -297,30 +287,28 @@
     // Save current state for event/signal handling below:
     bool prevHasVideo = m_videoPlayer->hasVideo();
     qint64 prevTotalTime = totalTime();
-    int prevTrackCount = m_videoPlayer->trackCount();
 
     qSwap(m_audioPlayer, m_nextAudioPlayer);
     qSwap(m_videoPlayer, m_nextVideoPlayer);
     m_mediaObjectAudioNode->startCrossFade(transitionTime);
     m_audioGraph->updateStreamSpecifications();
+    m_metaData->setVideo(m_videoPlayer);
 
     m_waitNextSwap = false;
     m_currentTime = 0;
-
+        
     // Emit/notify information about the new source:
     QRect videoRect = m_videoPlayer->videoRect();
     MediaNodeEvent e1(MediaNodeEvent::VideoFrameSizeChanged, &videoRect);
     notify(&e1);
 
     emit currentSourceChanged(m_videoPlayer->mediaSource());
-    emit metaDataChanged(m_videoPlayer->metaData());
+    emit metaDataChanged(m_metaData->metaData());
 
     if (prevHasVideo != m_videoPlayer->hasVideo())
-        emit hasVideoChanged(m_videoPlayer->hasVideo());
+        emit hasVideoChanged(m_videoPlayer->hasVideo());        
     if (prevTotalTime != totalTime())
         emit totalTimeChanged(totalTime());
-    if (prevTrackCount != m_videoPlayer->trackCount())
-        emit availableTitlesChanged(m_videoPlayer->trackCount());
     if (checkForError())
         return;
     if (!m_videoPlayer->isDrmAuthorized())
@@ -339,107 +327,28 @@
     }
 }
 
-#if QT_ALLOW_QUICKTIME
-static CVReturn displayLinkCallback(CVDisplayLinkRef /*displayLink*/,
-								 const CVTimeStamp */*inNow*/,
-								 const CVTimeStamp */*inOutputTime*/,
-								 CVOptionFlags /*flagsIn*/,
-								 CVOptionFlags */*flagsOut*/,
-                                 void *userData)
-{
-    MediaObject *mediaObject = static_cast<MediaObject *>(userData);
-    mediaObject->displayLinkEvent();
-    return kCVReturnSuccess;
-}
-
-void MediaObject::displayLinkEvent()
-{
-    // This function is called from a
-    // thread != gui thread. So we post the event.
-    // But we need to make sure that we don't post faster
-    // than the event loop can eat:
-    m_displayLinkMutex.lock();
-    bool pending = m_pendingDisplayLinkEvent;
-    m_pendingDisplayLinkEvent = true;
-    m_displayLinkMutex.unlock();
-
-    if (!pending)
-        qApp->postEvent(this, new QEvent(QEvent::User), Qt::HighEventPriority);
-}
-
-void MediaObject::startDisplayLink()
-{
-    if (m_displayLink)
-        return;
-    OSStatus err = CVDisplayLinkCreateWithCGDisplay(kCGDirectMainDisplay, &m_displayLink);
-    if (err != noErr)
-        goto fail;
-    err = CVDisplayLinkSetCurrentCGDisplay(m_displayLink, kCGDirectMainDisplay);
-    if (err != noErr)
-        goto fail;
-    err = CVDisplayLinkSetOutputCallback(m_displayLink, displayLinkCallback, this);
-    if (err != noErr)
-        goto fail;
-    err = CVDisplayLinkStart(m_displayLink);
-    if (err != noErr)
-        goto fail;
-    return;
-fail:
-    stopDisplayLink();
-}
-
-void MediaObject::stopDisplayLink()
-{
-    if (!m_displayLink)
-        return;
-    CVDisplayLinkStop(m_displayLink);
-    CFRelease(m_displayLink);
-    m_displayLink = 0;
-}
-#endif
-
-void MediaObject::restartAudioVideoTimers()
+void MediaObject::updateTimer(int &timer, int interval)
 {
-    if (m_videoTimer)
-        killTimer(m_videoTimer);
-    if (m_audioTimer)
-        killTimer(m_audioTimer);
-
-#if QT_ALLOW_QUICKTIME
-    // We prefer to use a display link as timer if available, since
-    // it is more steady, and results in better and smoother frame drawing:
-    startDisplayLink();
-    if (!m_displayLink){
-        float fps = m_videoPlayer->staticFps();
-        long videoUpdateFrequency = fps ? long(1000.0f / fps) : 0.001;
-        m_videoTimer = startTimer(videoUpdateFrequency);
-    }
-#else
-    float fps = m_videoPlayer->staticFps();
-    long videoUpdateFrequency = fps ? long(1000.0f / fps) : 0.001;
-    m_videoTimer = startTimer(videoUpdateFrequency);
-#endif
-
-    long audioUpdateFrequency = m_audioPlayer->regularTaskFrequency();
-    m_audioTimer = startTimer(audioUpdateFrequency);
-    updateVideoFrames();
-    updateAudioBuffers();
+    if (timer)
+        killTimer(timer);
+    timer = 0;
+    if (interval >= 0)    
+        timer = startTimer(interval); 
 }
 
 void MediaObject::play_internal()
 {
     // Play main audio/video:
     m_videoPlayer->play();
-    m_audioPlayer->play();
+    m_audioPlayer->play();     
     updateLipSynch(0);
     // Play old audio/video to finish cross-fade:
     if (m_nextVideoPlayer->currentTime() > 0){
         m_nextVideoPlayer->play();
         m_nextAudioPlayer->play();
     }
-    restartAudioVideoTimers();
-    if (!m_rapidTimer)
-        m_rapidTimer = startTimer(100);
+    bufferAudioVideo();
+    updateTimer(m_rapidTimer, 100);
 }
 
 void MediaObject::pause_internal()
@@ -449,15 +358,9 @@
     m_nextAudioPlayer->pause();
     m_videoPlayer->pause();
     m_nextVideoPlayer->pause();
-    killTimer(m_rapidTimer);
-    killTimer(m_videoTimer);
-    killTimer(m_audioTimer);
-    m_rapidTimer = 0;
-    m_videoTimer = 0;
-    m_audioTimer = 0;
-#if QT_ALLOW_QUICKTIME
-    stopDisplayLink();
-#endif
+    updateTimer(m_rapidTimer, -1);
+    updateTimer(m_bufferTimer, -1);
+
     if (m_waitNextSwap)
         m_swapTimeLeft = m_swapTime.msecsTo(QTime::currentTime());
 }
@@ -479,7 +382,7 @@
     if (!m_videoPlayer->canPlayMedia())
         return;
     if (!setState(Phonon::PlayingState))
-        return;
+        return;        
     if (m_audioSystem == AS_Graph){
         m_audioGraph->start();
         m_mediaObjectAudioNode->setMute(true);
@@ -520,7 +423,7 @@
     if (!setState(Phonon::StoppedState))
         return;
     m_waitNextSwap = false;
-    m_nextVideoPlayer->unsetCurrentMediaSource();
+    m_nextVideoPlayer->unsetVideo();
     m_nextAudioPlayer->unsetVideoPlayer();
     pause_internal();
     seek(0);
@@ -532,9 +435,9 @@
     IMPLEMENTED;
     if (m_state == Phonon::ErrorState)
         return;
-
+        
     // Stop cross-fade if any:
-    m_nextVideoPlayer->unsetCurrentMediaSource();
+    m_nextVideoPlayer->unsetVideo();
     m_nextAudioPlayer->unsetVideoPlayer();
     m_mediaObjectAudioNode->cancelCrossFade();
 
@@ -543,7 +446,7 @@
     m_videoPlayer->seek(milliseconds);
     m_audioPlayer->seek(m_videoPlayer->currentTime());
     m_mediaObjectAudioNode->setMute(false);
-
+    
     // Update time and cancel pending swap:
     if (m_currentTime < m_videoPlayer->duration())
         m_waitNextSwap = false;
@@ -654,7 +557,7 @@
 qint64 MediaObject::currentTime() const
 {
     IMPLEMENTED_SILENT;
-    const_cast<MediaObject *>(this)->updateCurrentTime();
+    const_cast<MediaObject *>(this)->updateCurrentTime(); 
     return m_currentTime;
 }
 
@@ -664,24 +567,19 @@
     m_currentTime = (m_audioSystem == AS_Graph) ? m_audioPlayer->currentTime() : m_videoPlayer->currentTime();
     quint64 total = m_videoPlayer->duration();
 
-    if (m_videoPlayer->currentTrack() < m_videoPlayer->trackCount() - 1){
-        // There are still more tracks to play after the current track.
-        if (m_autoplayTitles) {
-            if (lastUpdateTime < m_currentTime && m_currentTime == total)
-                setCurrentTrack(m_videoPlayer->currentTrack() + 1);
-        }
-    } else if (m_nextVideoPlayer->state() == QuickTimeVideoPlayer::NoMedia){
-        // There is no more sources or tracks to play after the current source.
-        // Check if it's time to emit aboutToFinish:
-        quint32 mark = qMax(quint64(0), qMin(total, total + m_transitionTime - 2000));
-        if (lastUpdateTime < mark && mark <= m_currentTime)
-            emit aboutToFinish();
-
-        // Check if it's time to emit prefinishMarkReached:
-        mark = qMax(quint64(0), total - m_prefinishMark);
-        if (lastUpdateTime < mark && mark <= m_currentTime)
-            emit prefinishMarkReached(total - m_currentTime);
-
+    // Check if it's time to emit aboutToFinish:
+    quint32 mark = qMax(quint64(0), qMin(total, total + m_transitionTime - 2000));
+    if (lastUpdateTime < mark && mark <= m_currentTime)
+        emit aboutToFinish();
+
+    // Check if it's time to emit prefinishMarkReached:
+    mark = qMax(quint64(0), total - m_prefinishMark);
+    if (lastUpdateTime < mark && mark <= m_currentTime)
+        emit prefinishMarkReached(total - m_currentTime);
+
+    if (m_nextVideoPlayer->state() == QuickTimeVideoPlayer::NoMedia){
+        // There is no next source in que.
+        // Check if it's time to emit finished:
         if (lastUpdateTime < m_currentTime && m_currentTime == total){
             emit finished();
             m_currentTime = (m_audioSystem == AS_Graph) ? m_audioPlayer->currentTime() : m_videoPlayer->currentTime();
@@ -691,7 +589,7 @@
     } else {
         // We have a next source.
         // Check if it's time to swap to next source:
-        quint32 mark = qMax(quint64(0), total + m_transitionTime);
+        mark = qMax(quint64(0), total + m_transitionTime);
         if (m_waitNextSwap && m_state == Phonon::PlayingState &&
             m_transitionTime < m_swapTime.msecsTo(QTime::currentTime())){
             swapCurrentWithNext(0);
@@ -794,14 +692,14 @@
 
 void MediaObject::updateCrossFade()
 {
-    m_mediaObjectAudioNode->updateCrossFade(m_currentTime);
+    m_mediaObjectAudioNode->updateCrossFade(m_currentTime);   
     // Clean-up previous movie if done fading:
     if (m_mediaObjectAudioNode->m_fadeDuration == 0){
         if (m_nextVideoPlayer->isPlaying() || m_nextAudioPlayer->isPlaying()){
-            m_nextVideoPlayer->unsetCurrentMediaSource();
+            m_nextVideoPlayer->unsetVideo();
             m_nextAudioPlayer->unsetVideoPlayer();
         }
-    }
+    }        
 }
 
 void MediaObject::updateBufferStatus()
@@ -830,7 +728,7 @@
     // Draw next frame if awailable:
     if (m_videoPlayer->videoFrameChanged()){
         updateLipSynch(50);
-        VideoFrame frame(m_videoPlayer);
+        VideoFrame frame(m_videoPlayer);           
         if (m_nextVideoPlayer->isPlaying()
             && m_nextVideoPlayer->hasVideo()
             && isCrossFading()){
@@ -838,9 +736,9 @@
             frame.setBackgroundFrame(bgFrame);
             frame.setBaseOpacity(m_mediaObjectAudioNode->m_volume1);
         }
-
+        
         // Send the frame through the graph:
-        updateVideo(frame);
+        updateVideo(frame);    
         checkForError();
     }
 }
@@ -851,7 +749,7 @@
         return;
     if (m_videoSinkList.isEmpty() || m_audioSinkList.isEmpty())
         return;
-
+        
     if (m_videoPlayer->hasVideo()){
         qint64 diff = m_audioPlayer->currentTime() - m_videoPlayer->currentTime();
         if (-allowedOffset > diff || diff > allowedOffset)
@@ -865,6 +763,16 @@
     }
 }
 
+void MediaObject::bufferAudioVideo()
+{
+    long nextVideoUpdate = m_videoPlayer->hasVideo() ? 30 : INT_MAX;
+    long nextAudioUpdate = m_audioPlayer->regularTaskFrequency();
+    updateAudioBuffers();
+    updateVideoFrames();
+    if (m_state == Phonon::PlayingState)
+        updateTimer(m_bufferTimer, qMin(nextVideoUpdate, nextAudioUpdate));
+}
+
 void MediaObject::updateRapidly()
 {
     updateCurrentTime();
@@ -889,8 +797,8 @@
             synchAudioVideo();
             checkForError();
             m_mediaObjectAudioNode->setMute(false);
-            if (m_state == Phonon::PlayingState)
-                restartAudioVideoTimers();
+             if (m_state == Phonon::PlayingState)
+                bufferAudioVideo();
             break;
         case MediaNodeEvent::AudioGraphCannotPlay:
         case MediaNodeEvent::AudioGraphInitialized:
@@ -901,7 +809,7 @@
                 checkForError();
                 m_mediaObjectAudioNode->setMute(false);
             }
-            break;
+            break; 
         default:
             break;
     }
@@ -910,67 +818,29 @@
 bool MediaObject::event(QEvent *event)
 {
     switch (event->type()){
-#if QT_ALLOW_QUICKTIME
-        case QEvent::User:{
-            m_displayLinkMutex.lock();
-            m_pendingDisplayLinkEvent = false;
-            m_displayLinkMutex.unlock();
-            updateVideoFrames();
-            break; }
-#endif
-        case QEvent::Timer:{
-            int timerId = static_cast<QTimerEvent *>(event)->timerId();
-            if (timerId == m_rapidTimer)
+        case QEvent::Timer: {
+            QTimerEvent *timerEvent = static_cast<QTimerEvent *>(event);
+            if (timerEvent->timerId() == m_rapidTimer)
                 updateRapidly();
-            else if (timerId == m_tickTimer)
+            else if (timerEvent->timerId() == m_tickTimer)
                 emit tick(currentTime());
-            else if (timerId == m_videoTimer)
-                updateVideoFrames();
-            else if (timerId == m_audioTimer)
-                updateAudioBuffers();
-            break; }
+            else if (timerEvent->timerId() == m_bufferTimer)
+                bufferAudioVideo();
+            }
+            break;
         default:
             break;
     }
     return QObject::event(event);
 }
 
-void MediaObject::setCurrentTrack(int track)
+bool MediaObject::hasInterface(Interface /*interface*/) const
 {
-    if (track == m_videoPlayer->currentTrack() || track < 0 || track >= m_videoPlayer->trackCount())
-        return;
-
-    m_videoPlayer->setCurrentTrack(track);
-    emit titleChanged(track);
-    emit metaDataChanged(m_videoPlayer->metaData());
+    return false;
 }
 
-bool MediaObject::hasInterface(Interface iface) const
+QVariant MediaObject::interfaceCall(Interface /*interface*/, int /*command*/, const QList<QVariant> &/*arguments*/)
 {
-    return iface == AddonInterface::TitleInterface;
-}
-
-QVariant MediaObject::interfaceCall(Interface iface, int command, const QList<QVariant> &params)
-{
-    switch (iface) {
-        case TitleInterface:
-            switch (command) {
-                case availableTitles:
-                    return m_videoPlayer->trackCount();
-                case title:
-                    return m_videoPlayer->currentTrack();
-                case setTitle:
-                    setCurrentTrack(params.first().toInt());
-                    break;
-                case autoplayTitles:
-                    return m_autoplayTitles;
-                case setAutoplayTitles:
-                    m_autoplayTitles = params.first().toBool();
-                    break;
-            }
-        default:
-            break;
-    }
     return QVariant();
 }
 
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/quicktimemetadata.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/quicktimemetadata.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/quicktimemetadata.h	2010-04-13 18:06:58.337853765 -0400
@@ -38,8 +38,10 @@
     class QuickTimeMetaData
     {
         public:
-            QuickTimeMetaData(QuickTimeVideoPlayer *videoPlayer);
-            void update();
+            QuickTimeMetaData();
+            virtual ~QuickTimeMetaData();
+
+            void setVideo(QuickTimeVideoPlayer *videoPlayer);
             QMultiMap<QString, QString> metaData();
 
         private:
@@ -47,8 +49,6 @@
             bool m_movieChanged;
             QuickTimeVideoPlayer *m_videoPlayer;
             void readMetaData();
-            void guessMetaDataForCD();
-            void readMetaDataFromMovie();
 
 #ifdef QUICKTIME_C_API_AVAILABLE
             QString stripCopyRightSymbol(const QString &key);
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/quicktimemetadata.mm
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/quicktimemetadata.mm	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/quicktimemetadata.mm	2010-04-13 18:06:58.337853765 -0400
@@ -15,7 +15,6 @@
     along with this library.  If not, see <http://www.gnu.org/licenses/>.
 */
 
-#include <QtCore/QFileInfo>
 #include "quicktimemetadata.h"
 #include "quicktimevideoplayer.h"
 
@@ -26,14 +25,19 @@
 namespace QT7
 {
 
-QuickTimeMetaData::QuickTimeMetaData(QuickTimeVideoPlayer *videoPlayer)
+QuickTimeMetaData::QuickTimeMetaData()
 {
-    m_videoPlayer = videoPlayer;
+    m_videoPlayer = 0;
     m_movieChanged = false;
 }
 
-void QuickTimeMetaData::update()
+QuickTimeMetaData::~QuickTimeMetaData()
 {
+}
+
+void QuickTimeMetaData::setVideo(QuickTimeVideoPlayer *videoPlayer)
+{
+    m_videoPlayer = videoPlayer;
     m_movieChanged = true;
     m_metaData.clear();
 }
@@ -141,22 +145,14 @@
 
 #endif // QUICKTIME_C_API_AVAILABLE
 
-void QuickTimeMetaData::guessMetaDataForCD()
-{
-    QString album = QFileInfo(m_videoPlayer->movieCompactDiscPath()).fileName();
-    QString title = QFileInfo(m_videoPlayer->currentTrackPath()).fileName();
-    title = title.left(title.lastIndexOf('.'));
-    m_metaData.insert(QLatin1String("ALBUM"), album);
-    m_metaData.insert(QLatin1String("TITLE"), title);
-    m_metaData.insert(QLatin1String("TRACKNUMBER"), QString::number(m_videoPlayer->currentTrack()));
-}
-
-void QuickTimeMetaData::readMetaDataFromMovie()
+void QuickTimeMetaData::readMetaData()
 {
+	if (!m_videoPlayer)
+        return;
     QMultiMap<QString, QString> metaMap;
-
+    
 #ifdef QUICKTIME_C_API_AVAILABLE
-    QTMetaDataRef metaDataRef;
+	QTMetaDataRef metaDataRef;        
 	OSStatus err = QTCopyMovieMetaData([m_videoPlayer->qtMovie() quickTimeMovie], &metaDataRef);
     BACKEND_ASSERT2(err == noErr, "Could not read QuickTime meta data", NORMAL_ERROR)
 
@@ -177,17 +173,6 @@
     m_metaData.insert(QLatin1String("DESCRIPTION"), metaMap.value(QLatin1String("des")));
 }
 
-void QuickTimeMetaData::readMetaData()
-{
-	if (!m_videoPlayer)
-        return;
-
-    if (m_videoPlayer->mediaSource().type() == Phonon::MediaSource::Disc)
-        guessMetaDataForCD();
-    else
-        readMetaDataFromMovie();
-}
-
 QMultiMap<QString, QString> QuickTimeMetaData::metaData()
 {
     if (m_videoPlayer && m_videoPlayer->hasMovie() && m_movieChanged)
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/quicktimevideoplayer.h
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/quicktimevideoplayer.h	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/quicktimevideoplayer.h	2010-04-13 18:06:58.337853765 -0400
@@ -20,7 +20,6 @@
 
 #include "backendheader.h"
 
-#include <QtGui/qmacdefines_mac.h>
 #import <QTKit/QTDataReference.h>
 #import <QTKit/QTMovie.h>
 
@@ -39,7 +38,6 @@
 namespace QT7
 {
     class QuickTimeStreamReader;
-    class QuickTimeMetaData;
 	class VideoRenderWidgetQTMovieView;
 
     class QuickTimeVideoPlayer : QObject
@@ -57,7 +55,7 @@
 
             void setMediaSource(const MediaSource &source);
             MediaSource mediaSource() const;
-            void unsetCurrentMediaSource();
+            void unsetVideo();
 
             void play();
             void pause();
@@ -68,13 +66,11 @@
             GLuint currentFrameAsGLTexture();
 			void *currentFrameAsCIImage();
             QImage currentFrameAsQImage();
-            void releaseImageCache();
             QRect videoRect() const;
 
             quint64 duration() const;
             quint64 currentTime() const;
             long timeScale() const;
-            float staticFps();
             QString currentTimeString();
 
             void setColors(qreal brightness = 0, qreal contrast = 1, qreal hue = 0, qreal saturation = 1);
@@ -87,7 +83,6 @@
             bool setAudioDevice(int id);
             void setPlaybackRate(float rate);
             QTMovie *qtMovie() const;
-            QMultiMap<QString, QString> metaData();
 
             float playbackRate() const;
             float prefferedPlaybackRate() const;
@@ -107,12 +102,6 @@
             float percentageLoaded();
             quint64 timeLoaded();
 
-            int trackCount() const;
-            int currentTrack() const;
-            void setCurrentTrack(int track);
-            QString movieCompactDiscPath() const;
-            QString currentTrackPath() const;
-
             static QString timeToString(quint64 ms);
 
 			// Help functions when drawing to more that one widget in cocoa 64:
@@ -126,10 +115,6 @@
             QTMovie *m_QTMovie;
             State m_state;
             QGLPixelBuffer *m_QImagePixelBuffer;
-            QuickTimeMetaData *m_metaData;
-
-            CVOpenGLTextureRef m_cachedCVTextureRef;
-            QImage m_cachedQImage;
 
             bool m_playbackRateSat;
             bool m_isDrmProtected;
@@ -140,18 +125,13 @@
             float m_masterVolume;
             float m_relativeVolume;
             float m_playbackRate;
-            float m_staticFps;
             quint64 m_currentTime;
             MediaSource m_mediaSource;
-
 			void *m_primaryRenderingCIImage;
 			qreal m_brightness;
 			qreal m_contrast;
 			qreal m_hue;
 			qreal m_saturation;
-            NSArray *m_folderTracks;
-            int m_currentTrack;
-            QString m_movieCompactDiscPath;
 
 #ifdef QUICKTIME_C_API_AVAILABLE
             QTVisualContextRef m_visualContext;
@@ -159,26 +139,20 @@
             VideoFrame m_currentFrame;
             QuickTimeStreamReader *m_streamReader;
 
-            void prepareCurrentMovieForPlayback();
             void createVisualContext();
             void openMovieFromCurrentMediaSource();
             void openMovieFromDataRef(QTDataReference *dataRef);
             void openMovieFromFile();
             void openMovieFromUrl();
             void openMovieFromStream();
-            void openMovieFromCompactDisc();
             void openMovieFromData(QByteArray *data, char *fileType);
             void openMovieFromDataGuessType(QByteArray *data);
 			QString mediaSourcePath();
 			bool codecExistsAccordingToSuffix(const QString &fileName);
-            NSString* pathToCompactDisc();
-            bool isCompactDisc(NSString *path);
-            NSArray* scanFolder(NSString *path);
 
             void setError(NSError *error);
             bool errorOccured();
             void readProtection();
-            void calculateStaticFps();
             void checkIfVideoAwailable();
             bool movieNotLoaded();
             void waitStatePlayable();
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/quicktimevideoplayer.mm
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/quicktimevideoplayer.mm	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/quicktimevideoplayer.mm	2010-04-13 18:06:58.337853765 -0400
@@ -20,7 +20,6 @@
 #include "videowidget.h"
 #include "audiodevice.h"
 #include "quicktimestreamreader.h"
-#include "quicktimemetadata.h"
 
 #include <QtCore/QCoreApplication>
 #include <QtCore/QEventLoop>
@@ -53,7 +52,6 @@
 {
     m_state = NoMedia;
     m_mediaSource = MediaSource();
-    m_metaData = new QuickTimeMetaData(this);
     m_QTMovie = 0;
     m_streamReader = 0;
     m_playbackRate = 1.0f;
@@ -63,16 +61,12 @@
     m_mute = false;
     m_audioEnabled = false;
     m_hasVideo = false;
-    m_staticFps = 0;
     m_playbackRateSat = false;
     m_isDrmProtected = false;
     m_isDrmAuthorized = true;
 	m_primaryRenderingTarget = 0;
 	m_primaryRenderingCIImage = 0;
     m_QImagePixelBuffer = 0;
-    m_cachedCVTextureRef = 0;
-    m_folderTracks = 0;
-    m_currentTrack = 0;
 
 #ifdef QUICKTIME_C_API_AVAILABLE
     OSStatus err = EnterMovies();
@@ -83,9 +77,7 @@
 
 QuickTimeVideoPlayer::~QuickTimeVideoPlayer()
 {
-	PhononAutoReleasePool pool;
-    unsetCurrentMediaSource();
-    delete m_metaData;
+    unsetVideo();
     [(NSObject*)m_primaryRenderingTarget release];
     m_primaryRenderingTarget = 0;
 #ifdef QUICKTIME_C_API_AVAILABLE
@@ -94,15 +86,6 @@
 #endif
 }
 
-void QuickTimeVideoPlayer::releaseImageCache()
-{
-    if (m_cachedCVTextureRef){
-        CVOpenGLTextureRelease(m_cachedCVTextureRef);
-        m_cachedCVTextureRef = 0;
-    }
-    m_cachedQImage = QImage();
-}
-
 void QuickTimeVideoPlayer::createVisualContext()
 {
 #ifdef QUICKTIME_C_API_AVAILABLE
@@ -142,10 +125,7 @@
 		return false;
 
     QTVisualContextTask(m_visualContext);
-    bool changed = QTVisualContextIsNewImageAvailable(m_visualContext, 0);
-    if (changed)
-        releaseImageCache();
-    return changed;
+    return QTVisualContextIsNewImageAvailable(m_visualContext, 0);
 
 #elif defined(QT_MAC_USE_COCOA)
     return true;
@@ -160,11 +140,10 @@
 #ifdef QUICKTIME_C_API_AVAILABLE
     if (!m_visualContext)
         return 0;
-    if (!m_cachedCVTextureRef){
-        OSStatus err = QTVisualContextCopyImageForTime(m_visualContext, 0, 0, &m_cachedCVTextureRef);
-        BACKEND_ASSERT3(err == noErr, "Could not copy image for time in QuickTime player", FATAL_ERROR, 0)
-    }
-    return m_cachedCVTextureRef;
+    CVOpenGLTextureRef texture = 0;
+    OSStatus err = QTVisualContextCopyImageForTime(m_visualContext, 0, 0, &texture);
+    BACKEND_ASSERT3(err == noErr, "Could not copy image for time in QuickTime player", FATAL_ERROR, 0)
+    return texture;
 
 #else
     return 0;
@@ -173,9 +152,6 @@
 
 QImage QuickTimeVideoPlayer::currentFrameAsQImage()
 {
-    if (!m_cachedQImage.isNull())
-        return m_cachedQImage;
-
 #ifdef QUICKTIME_C_API_AVAILABLE
     QGLContext *prevContext = const_cast<QGLContext *>(QGLContext::currentContext());
     CVOpenGLTextureRef texture = currentFrameAsCVTexture();
@@ -205,11 +181,12 @@
         glVertex2i(-1, -1);
     glEnd();
 
-    m_cachedQImage = m_QImagePixelBuffer->toImage();
+    QImage image = m_QImagePixelBuffer->toImage();
+    CVOpenGLTextureRelease(texture);
     // Because of QuickTime, m_QImagePixelBuffer->doneCurrent() will fail.
     // So we store, and restore, the context our selves:
     prevContext->makeCurrent();
-    return m_cachedQImage;
+    return image;
 #else
 	CIImage *img = (CIImage *)currentFrameAsCIImage();
 	if (!img)
@@ -218,10 +195,10 @@
 	NSBitmapImageRep* bitmap = [[NSBitmapImageRep alloc] initWithCIImage:img];
 	CGRect bounds = [img extent];
 	QImage qImg([bitmap bitmapData], bounds.size.width, bounds.size.height, QImage::Format_ARGB32);
-	m_cachedQImage = qImg.rgbSwapped();
+	QImage swapped = qImg.rgbSwapped();
 	[bitmap release];
 	[img release];
-	return m_cachedQImage;
+	return swapped;
 #endif
 }
 
@@ -273,7 +250,8 @@
 #ifdef QUICKTIME_C_API_AVAILABLE
 	CVOpenGLTextureRef cvImg = currentFrameAsCVTexture();
 	CIImage *img = [[CIImage alloc] initWithCVImageBuffer:cvImg];
-	return img;
+	CVOpenGLTextureRelease(cvImg);
+	return img;	
 #else
 	return 0;
 #endif
@@ -295,7 +273,7 @@
 
     int samplesPerPixel = [bitmap samplesPerPixel];
     if (![bitmap isPlanar] && (samplesPerPixel == 3 || samplesPerPixel == 4)){
-        glTexImage2D(GL_TEXTURE_RECTANGLE_EXT, 0,
+        glTexImage2D(GL_TEXTURE_RECTANGLE_EXT, 0, 
             samplesPerPixel == 4 ? GL_RGBA8 : GL_RGB8,
             [bitmap pixelsWide], [bitmap pixelsHigh],
             0, samplesPerPixel == 4 ? GL_RGBA : GL_RGB,
@@ -324,7 +302,7 @@
     m_masterVolume = masterVolume;
     m_relativeVolume = relativeVolume;
     if (!m_QTMovie || !m_audioEnabled || m_mute)
-        return;
+        return;                
     [m_QTMovie setVolume:(m_masterVolume * m_relativeVolume)];
 }
 
@@ -335,7 +313,7 @@
         return;
 
     // Work-around bug that happends if you set/unset mute
-    // before movie is playing, and audio is not played
+    // before movie is playing, and audio is not played 
     // through graph. Then audio is delayed.
     [m_QTMovie setMuted:mute];
     [m_QTMovie setVolume:(mute ? 0 : m_masterVolume * m_relativeVolume)];
@@ -348,7 +326,7 @@
         return;
 
     // Work-around bug that happends if you set/unset mute
-    // before movie is playing, and audio is not played
+    // before movie is playing, and audio is not played 
     // through graph. Then audio is delayed.
     [m_QTMovie setMuted:(!enable || m_mute)];
     [m_QTMovie setVolume:((!enable || m_mute) ? 0 : m_masterVolume * m_relativeVolume)];
@@ -367,7 +345,7 @@
 #ifdef QUICKTIME_C_API_AVAILABLE
     // The following code will not work for some media codecs that
     // typically mingle audio/video frames (e.g mpeg).
-    CFStringRef idString = PhononCFString::toCFStringRef(AudioDevice::deviceUID(id));
+    CFStringRef idString = PhononCFString::toCFStringRef(AudioDevice::deviceUID(id));        
     QTAudioContextRef context;
     QTAudioContextCreateForAudioDevice(kCFAllocatorDefault, idString, 0, &context);
     OSStatus err = SetMovieAudioContext([m_QTMovie quickTimeMovie], context);
@@ -391,16 +369,11 @@
     contrast += 1;
     saturation += 1;
 
-    if (m_brightness == brightness
-        && m_contrast == contrast
-        && m_hue == hue
-        && m_saturation == saturation)
-        return;
-
 	m_brightness = brightness;
 	m_contrast = contrast;
 	m_hue = hue;
 	m_saturation = saturation;
+	
 #ifdef QUICKTIME_C_API_AVAILABLE
     Float32 value;
     value = brightness;
@@ -412,7 +385,6 @@
     value = saturation;
     SetMovieVisualSaturation([m_QTMovie quickTimeMovie], value, 0);
 #endif
-    releaseImageCache();
 }
 
 QRect QuickTimeVideoPlayer::videoRect() const
@@ -425,7 +397,7 @@
     return QRect(0, 0, size.width, size.height);
 }
 
-void QuickTimeVideoPlayer::unsetCurrentMediaSource()
+void QuickTimeVideoPlayer::unsetVideo()
 {
     if (!m_QTMovie)
         return;
@@ -438,17 +410,11 @@
     m_state = NoMedia;
     m_isDrmProtected = false;
     m_isDrmAuthorized = true;
-    m_hasVideo = false;
-    m_staticFps = 0;
     m_mediaSource = MediaSource();
-    m_movieCompactDiscPath.clear();
 	[(CIImage *)m_primaryRenderingCIImage release];
 	m_primaryRenderingCIImage = 0;
     delete m_QImagePixelBuffer;
     m_QImagePixelBuffer = 0;
-    releaseImageCache();
-    [m_folderTracks release];
-    m_folderTracks = 0;
 }
 
 QuickTimeVideoPlayer::State QuickTimeVideoPlayer::state() const
@@ -558,25 +524,18 @@
 void QuickTimeVideoPlayer::setMediaSource(const MediaSource &mediaSource)
 {
     PhononAutoReleasePool pool;
-    unsetCurrentMediaSource();
-
+    unsetVideo();
     m_mediaSource = mediaSource;
     if (mediaSource.type() == MediaSource::Empty || mediaSource.type() == MediaSource::Invalid){
         m_state = NoMedia;
         return;
     }
-
     openMovieFromCurrentMediaSource();
     if (errorOccured()){
-        unsetCurrentMediaSource();
+        unsetVideo();
         return;
     }
 
-    prepareCurrentMovieForPlayback();
-}
-
-void QuickTimeVideoPlayer::prepareCurrentMovieForPlayback()
-{
 #ifdef QUICKTIME_C_API_AVAILABLE
     if (m_visualContext)
         SetMovieVisualContext([m_QTMovie quickTimeMovie], m_visualContext);
@@ -584,25 +543,23 @@
 
     waitStatePlayable();
     if (errorOccured()){
-        unsetCurrentMediaSource();
+        unsetVideo();
         return;
     }
 
     readProtection();
     preRollMovie();
     if (errorOccured()){
-        unsetCurrentMediaSource();
+        unsetVideo();
         return;
     }
 
     if (!m_playbackRateSat)
         m_playbackRate = prefferedPlaybackRate();
     checkIfVideoAwailable();
-    calculateStaticFps();
     enableAudio(m_audioEnabled);
     setMute(m_mute);
     setVolume(m_masterVolume, m_relativeVolume);
-    m_metaData->update();
     pause();
 }
 
@@ -616,7 +573,7 @@
         openMovieFromUrl();
         break;
     case MediaSource::Disc:
-        openMovieFromCompactDisc();
+        CASE_UNSUPPORTED("Could not open media source.", FATAL_ERROR)
         break;
     case MediaSource::Stream:
         openMovieFromStream();
@@ -678,7 +635,7 @@
     // than using e.g [QTMovie movieFileTypes:QTIncludeCommonTypes]. Some
     // codecs *think* they can decode the stream, and crash...
 #define TryOpenMovieWithCodec(type) gClearError(); \
-    openMovieFromData(data, (char *)"."type); \
+    openMovieFromData(data, "."type); \
     if (m_QTMovie) return;
 
     TryOpenMovieWithCodec("avi");
@@ -718,50 +675,6 @@
     openMovieFromDataGuessType(m_streamReader->pointerToData());
 }
 
-typedef void (*qt_sighandler_t)(int);
-static void sigtest(int) {
-    qApp->exit(0);
-}
-
-void QuickTimeVideoPlayer::openMovieFromCompactDisc()
-{
-    // Interrupting the application while the device is open
-    // causes the application to hang. So we need to handle
-    // this in a more graceful way:
-    qt_sighandler_t hndl = signal(SIGINT, sigtest);
-    if (hndl)
-        signal(SIGINT, hndl);
-
-    PhononAutoReleasePool pool;
-    NSString *cd = 0;
-    QString devName = m_mediaSource.deviceName();
-    if (devName.isEmpty()) {
-        cd = pathToCompactDisc();
-        if (!cd) {
-            SET_ERROR("Could not open media source.", NORMAL_ERROR)
-            return;
-        }
-        m_movieCompactDiscPath = PhononCFString::toQString(reinterpret_cast<CFStringRef>(cd));
-    } else {
-       if (!QFileInfo(devName).isAbsolute())
-           devName = QLatin1String("/Volumes/") + devName;
-       cd = [reinterpret_cast<const NSString *>(PhononCFString::toCFStringRef(devName)) autorelease];
-       if (!isCompactDisc(cd)) {
-           SET_ERROR("Could not open media source.", NORMAL_ERROR)
-           return;
-       }
-       m_movieCompactDiscPath = devName;
-    }
-
-    m_folderTracks = [scanFolder(cd) retain];
-    setCurrentTrack(0);
-}
-
-QString QuickTimeVideoPlayer::movieCompactDiscPath() const
-{
-    return m_movieCompactDiscPath;
-}
-
 MediaSource QuickTimeVideoPlayer::mediaSource() const
 {
     return m_mediaSource;
@@ -807,44 +720,6 @@
     return [[m_QTMovie attributeForKey:@"QTMovieTimeScaleAttribute"] longValue];
 }
 
-float QuickTimeVideoPlayer::staticFps()
-{
-    return m_staticFps;
-}
-
-void QuickTimeVideoPlayer::calculateStaticFps()
-{
-    if (!m_hasVideo){
-        m_staticFps = 0;
-        return;
-    }
-
-#ifdef QT_ALLOW_QUICKTIME
-    Boolean isMpeg = false;
-    Track videoTrack = GetMovieIndTrackType([m_QTMovie quickTimeMovie], 1,
-            FOUR_CHAR_CODE('vfrr'), // 'vfrr' means: has frame rate
-            movieTrackCharacteristic | movieTrackEnabledOnly);
-    Media media = GetTrackMedia(videoTrack);
-    MediaHandler mediaH = GetMediaHandler(media);
-    MediaHasCharacteristic(mediaH, FOUR_CHAR_CODE('mpeg'), &isMpeg);
-
-    if (isMpeg){
-        MHInfoEncodedFrameRateRecord frameRate;
-        Size frameRateSize = sizeof(frameRate);
-        MediaGetPublicInfo(mediaH, kMHInfoEncodedFrameRate, &frameRate, &frameRateSize);
-        m_staticFps = float(Fix2X(frameRate.encodedFrameRate));
-    } else {
-        Media media = GetTrackMedia(videoTrack);
-        long sampleCount = GetMediaSampleCount(media);
-        TimeValue64 duration = GetMediaDisplayDuration(media);
-        TimeValue64 timeScale = GetMediaTimeScale(media);
-        m_staticFps = float((double)sampleCount * (double)timeScale / (double)duration);
-    }
-#else
-    m_staticFps = 30.0f;
-#endif
-}
-
 QString QuickTimeVideoPlayer::timeToString(quint64 ms)
 {
     int sec = ms/1000;
@@ -1075,94 +950,6 @@
     }
 }
 
-QMultiMap<QString, QString> QuickTimeVideoPlayer::metaData()
-{
-    return m_metaData->metaData();
-}
-
-int QuickTimeVideoPlayer::trackCount() const
-{
-    if (!m_folderTracks)
-        return 0;
-    return [m_folderTracks count];
-}
-
-int QuickTimeVideoPlayer::currentTrack() const
-{
-    return m_currentTrack;
-}
-
-QString QuickTimeVideoPlayer::currentTrackPath() const
-{
-    if (!m_folderTracks)
-        return QString();
-
-    PhononAutoReleasePool pool;
-    NSString *trackPath = [m_folderTracks objectAtIndex:m_currentTrack];
-    return PhononCFString::toQString(reinterpret_cast<CFStringRef>(trackPath));
-}
-
-NSString* QuickTimeVideoPlayer::pathToCompactDisc()
-{
-    PhononAutoReleasePool pool;
-    NSArray *devices = [[NSWorkspace sharedWorkspace] mountedRemovableMedia];
-    for (unsigned int i=0; i<[devices count]; ++i) {
-        NSString *dev = [devices objectAtIndex:i];
-        if (isCompactDisc(dev))
-            return [dev retain];
-    }
-    return 0;
-}
-
-bool QuickTimeVideoPlayer::isCompactDisc(NSString *path)
-{
-    PhononAutoReleasePool pool;
-    NSString *type = [NSString string];
-    [[NSWorkspace sharedWorkspace] getFileSystemInfoForPath:path
-        isRemovable:0
-        isWritable:0
-        isUnmountable:0
-        description:0
-        type:&type];
-    return [type hasPrefix:@"cdd"];
-}
-
-NSArray* QuickTimeVideoPlayer::scanFolder(NSString *path)
-{
-    NSMutableArray *tracks = [NSMutableArray arrayWithCapacity:20];
-    if (!path)
-        return tracks;
-
-    NSDirectoryEnumerator *enumerator = [[NSFileManager defaultManager] enumeratorAtPath:path];
-    while (NSString *track = [enumerator nextObject]) {
-        if (![track hasPrefix:@"."])
-            [tracks addObject:[path stringByAppendingPathComponent:track]];
-    }
-    return tracks;
-}
-
-void QuickTimeVideoPlayer::setCurrentTrack(int track)
-{
-    PhononAutoReleasePool pool;
-    [m_QTMovie release];
-	m_QTMovie = 0;
-    m_currentTime = 0;
-    m_currentTrack = track;
-
-    if (!m_folderTracks)
-        return;
-    if (track < 0 || track >= (int)[m_folderTracks count])
-        return;
-
-    NSString *trackPath = [m_folderTracks objectAtIndex:track];
-    QTDataReference *dataRef = [QTDataReference dataReferenceWithReferenceToFile:trackPath];
-    State currentState = m_state;
-    openMovieFromDataRef(dataRef);
-    prepareCurrentMovieForPlayback();
-    if (currentState == Playing)
-        play();
-}
-
 }}
 
 QT_END_NAMESPACE
Index: qt4-x11-4.6.2/src/3rdparty/phonon/qt7/videoframe.mm
===================================================================
--- qt4-x11-4.6.2.orig/src/3rdparty/phonon/qt7/videoframe.mm	2010-02-11 10:55:20.000000000 -0500
+++ qt4-x11-4.6.2/src/3rdparty/phonon/qt7/videoframe.mm	2010-04-13 18:06:58.341866636 -0400
@@ -20,8 +20,6 @@
 #import <QuartzCore/CIFilter.h>
 #import <QuartzCore/CIContext.h>
 
-//#define CACHE_CV_TEXTURE
-
 QT_BEGIN_NAMESPACE
 
 namespace Phonon
@@ -72,9 +70,7 @@
 
     void VideoFrame::copyMembers(const VideoFrame& frame)
     {
-#ifdef CACHE_CV_TEXTURE
         m_cachedCVTextureRef = frame.m_cachedCVTextureRef;
-#endif
 		m_cachedCIImage = frame.m_cachedCIImage;
 		m_cachedQImage = frame.m_cachedQImage;
         m_cachedNSBitmap = frame.m_cachedNSBitmap;
@@ -109,20 +105,11 @@
 
     CVOpenGLTextureRef VideoFrame::cachedCVTexture() const
     {
-#ifdef CACHE_CV_TEXTURE
         if (!m_cachedCVTextureRef && m_videoPlayer){
             m_videoPlayer->setColors(m_brightness, m_contrast, m_hue, m_saturation);
             (const_cast<VideoFrame *>(this))->m_cachedCVTextureRef = m_videoPlayer->currentFrameAsCVTexture();
-            CVOpenGLTextureRetain((const_cast<VideoFrame *>(this))->m_cachedCVTextureRef);
         }
         return m_cachedCVTextureRef;
-#else
-        if (m_videoPlayer){
-            m_videoPlayer->setColors(m_brightness, m_contrast, m_hue, m_saturation);
-            return m_videoPlayer->currentFrameAsCVTexture();
-        }
-        return 0;
-#endif
     }
 
     void *VideoFrame::cachedCIImage() const
@@ -342,12 +329,10 @@
 
     void VideoFrame::invalidateImage() const
     {
-#ifdef CACHE_CV_TEXTURE
         if (m_cachedCVTextureRef){
             CVOpenGLTextureRelease(m_cachedCVTextureRef);
             (const_cast<VideoFrame *>(this))->m_cachedCVTextureRef = 0;
         }
-#endif
         if (m_cachedCIImage){
 			[(CIImage *) m_cachedCIImage release];
             (const_cast<VideoFrame *>(this))->m_cachedCIImage = 0;
@@ -361,10 +346,8 @@
 
     void VideoFrame::retain() const
     {
-#ifdef CACHE_CV_TEXTURE
         if (m_cachedCVTextureRef)
             CVOpenGLTextureRetain(m_cachedCVTextureRef);
-#endif
 		if (m_cachedCIImage)
 			[(CIImage *) m_cachedCIImage retain];
         if (m_backgroundFrame)
@@ -375,12 +358,8 @@
 
     void VideoFrame::release() const
     {
-#ifdef CACHE_CV_TEXTURE
-        if (m_cachedCVTextureRef){
+        if (m_cachedCVTextureRef)
             CVOpenGLTextureRelease(m_cachedCVTextureRef);
-            (const_cast<VideoFrame *>(this))->m_cachedCVTextureRef = 0;
-        }
-#endif
 		if (m_cachedCIImage)
 			[(CIImage *) m_cachedCIImage release];
         if (m_backgroundFrame)
@@ -389,6 +368,7 @@
             [m_cachedNSBitmap release];
 
         (const_cast<VideoFrame *>(this))->m_backgroundFrame = 0;
+        (const_cast<VideoFrame *>(this))->m_cachedCVTextureRef = 0;
         (const_cast<VideoFrame *>(this))->m_cachedCIImage = 0;
         (const_cast<VideoFrame *>(this))->m_cachedNSBitmap = 0;
     }
Index: qt4-x11-4.6.2/src/phonon/phonon.pro
===================================================================
--- qt4-x11-4.6.2.orig/src/phonon/phonon.pro	2010-02-11 10:55:22.000000000 -0500
+++ qt4-x11-4.6.2/src/phonon/phonon.pro	2010-04-13 18:10:38.213854667 -0400
@@ -2,8 +2,8 @@
 include(../qbase.pri)
 
 PHONON_MAJOR_VERSION = $${QT_MAJOR_VERSION}
-PHONON_MINOR_VERSION = 3
-PHONON_PATCH_VERSION = 1
+PHONON_MINOR_VERSION = 4
+PHONON_PATCH_VERSION = 0
 VERSION = $${PHONON_MAJOR_VERSION}.$${PHONON_MINOR_VERSION}.$${PHONON_PATCH_VERSION}
 
 DEPENDPATH += .
@@ -21,6 +21,9 @@
            $$PHONON_DIR/abstractvideooutput.h \
            $$PHONON_DIR/abstractvideooutput_p.h \
            $$PHONON_DIR/addoninterface.h \
+           $$PHONON_DIR/audiodataoutput.h \
+           $$PHONON_DIR/audiodataoutput_p.h \
+           $$PHONON_DIR/audiodataoutputinterface.h \
            $$PHONON_DIR/audiooutput.h \
            $$PHONON_DIR/audiooutput_p.h \
            $$PHONON_DIR/audiooutputinterface.h \
@@ -37,6 +40,7 @@
            $$PHONON_DIR/factory_p.h \
            $$PHONON_DIR/frontendinterface_p.h \
            $$PHONON_DIR/globalconfig_p.h \
+           $$PHONON_DIR/globalconfig.h \
            $$PHONON_DIR/iodevicestream_p.h \
            $$PHONON_DIR/mediacontroller.h \
            $$PHONON_DIR/medianode.h \
@@ -59,11 +63,13 @@
            $$PHONON_DIR/phononnamespace_p.h \
            $$PHONON_DIR/platform_p.h \
            $$PHONON_DIR/platformplugin.h \
+           $$PHONON_DIR/pulsesupport.h \
            $$PHONON_DIR/qsettingsgroup_p.h \
            $$PHONON_DIR/seekslider.h \
            $$PHONON_DIR/seekslider_p.h \
            $$PHONON_DIR/streaminterface.h \
            $$PHONON_DIR/streaminterface_p.h \
+           $$PHONON_DIR/swiftslider_p.h \
            $$PHONON_DIR/videoplayer.h \
            $$PHONON_DIR/videowidget.h \
            $$PHONON_DIR/videowidget_p.h \
@@ -73,35 +79,38 @@
            $$PHONON_DIR/volumefaderinterface.h \
            $$PHONON_DIR/volumeslider.h \
            $$PHONON_DIR/volumeslider_p.h
-SOURCES += $$PHONON_DIR/objectdescription.cpp \
-           $$PHONON_DIR/objectdescriptionmodel.cpp \
-           $$PHONON_DIR/phononnamespace.cpp \
-           $$PHONON_DIR/mediasource.cpp \
-           $$PHONON_DIR/abstractmediastream.cpp \
-           $$PHONON_DIR/streaminterface.cpp \
-           $$PHONON_DIR/mediaobject.cpp \
-           $$PHONON_DIR/medianode.cpp \
-           $$PHONON_DIR/path.cpp \
-           $$PHONON_DIR/effectparameter.cpp \
-           $$PHONON_DIR/effect.cpp \
-           $$PHONON_DIR/volumefadereffect.cpp \
-           $$PHONON_DIR/abstractaudiooutput.cpp \
+SOURCES += $$PHONON_DIR/abstractaudiooutput.cpp \
            $$PHONON_DIR/abstractaudiooutput_p.cpp \
-           $$PHONON_DIR/audiooutput.cpp \
-           $$PHONON_DIR/audiooutputinterface.cpp \
+           $$PHONON_DIR/abstractmediastream.cpp \
            $$PHONON_DIR/abstractvideooutput.cpp \
            $$PHONON_DIR/abstractvideooutput_p.cpp \
+           $$PHONON_DIR/audiodataoutput.cpp \
+           $$PHONON_DIR/audiooutput.cpp \
+           $$PHONON_DIR/audiooutputinterface.cpp \
            $$PHONON_DIR/backendcapabilities.cpp \
-           $$PHONON_DIR/globalconfig.cpp \
+           $$PHONON_DIR/effect.cpp \
+           $$PHONON_DIR/effectparameter.cpp \
+           $$PHONON_DIR/effectwidget.cpp \
            $$PHONON_DIR/factory.cpp \
-           $$PHONON_DIR/platform.cpp \
+           $$PHONON_DIR/globalconfig.cpp \
+           $$PHONON_DIR/iodevicestream.cpp \
            $$PHONON_DIR/mediacontroller.cpp \
-           $$PHONON_DIR/videowidget.cpp \
-           $$PHONON_DIR/videoplayer.cpp \
+           $$PHONON_DIR/medianode.cpp \
+           $$PHONON_DIR/mediaobject.cpp \
+           $$PHONON_DIR/mediasource.cpp \
+           $$PHONON_DIR/objectdescription.cpp \
+           $$PHONON_DIR/objectdescriptionmodel.cpp \
+           $$PHONON_DIR/path.cpp \
+           $$PHONON_DIR/phononnamespace.cpp \
+           $$PHONON_DIR/platform.cpp \
+           $$PHONON_DIR/pulsesupport.cpp \
            $$PHONON_DIR/seekslider.cpp \
-           $$PHONON_DIR/volumeslider.cpp \
-           $$PHONON_DIR/effectwidget.cpp \
-           $$PHONON_DIR/iodevicestream.cpp
+           $$PHONON_DIR/streaminterface.cpp \
+           $$PHONON_DIR/swiftslider.cpp \
+           $$PHONON_DIR/videoplayer.cpp \
+           $$PHONON_DIR/videowidget.cpp \
+           $$PHONON_DIR/volumefadereffect.cpp \
+           $$PHONON_DIR/volumeslider.cpp
 
 contains(QT_CONFIG, dbus) {
        QT      += dbus
@@ -114,6 +123,12 @@
 
 contains(QT_CONFIG, reduce_exports): CONFIG += hide_symbols
 
+unix:!isEmpty(QT_CFLAGS_PULSEAUDIO) {
+     DEFINES += HAVE_PULSEAUDIO
+     QMAKE_CXXFLAGS += $$QT_CFLAGS_PULSEAUDIO
+     LIBS += $$QT_LIBS_PULSEAUDIO
+}
+
 symbian: {
     # Phonon depends on numeric_limits. Enabling STL support in Qt
     # would bring in link dependencies, and we don't need that for
Index: qt4-x11-4.6.2/src/plugins/phonon/ds9/ds9.pro
===================================================================
--- qt4-x11-4.6.2.orig/src/plugins/phonon/ds9/ds9.pro	2010-02-11 10:55:23.000000000 -0500
+++ qt4-x11-4.6.2/src/plugins/phonon/ds9/ds9.pro	2010-04-13 18:06:58.341866636 -0400
@@ -23,6 +23,7 @@
            $$PHONON_DS9_DIR/videowidget.h \
            $$PHONON_DS9_DIR/videorenderer_soft.h \
            $$PHONON_DS9_DIR/videorenderer_vmr9.h \
+           $$PHONON_DS9_DIR/videorenderer_evr.h \
            $$PHONON_DS9_DIR/volumeeffect.h \
            $$PHONON_DS9_DIR/qbasefilter.h \
            $$PHONON_DS9_DIR/qpin.h \
@@ -46,6 +47,7 @@
            $$PHONON_DS9_DIR/videowidget.cpp \
            $$PHONON_DS9_DIR/videorenderer_soft.cpp \
            $$PHONON_DS9_DIR/videorenderer_vmr9.cpp \
+           $$PHONON_DS9_DIR/videorenderer_evr.cpp \
            $$PHONON_DS9_DIR/volumeeffect.cpp \
            $$PHONON_DS9_DIR/qbasefilter.cpp \
            $$PHONON_DS9_DIR/qpin.cpp \
Index: qt4-x11-4.6.2/src/plugins/phonon/gstreamer/gstreamer.pro
===================================================================
--- qt4-x11-4.6.2.orig/src/plugins/phonon/gstreamer/gstreamer.pro	2010-02-11 10:55:23.000000000 -0500
+++ qt4-x11-4.6.2/src/plugins/phonon/gstreamer/gstreamer.pro	2010-04-13 18:06:58.341866636 -0400
@@ -15,6 +15,7 @@
 
 HEADERS += $$PHONON_GSTREAMER_DIR/common.h \
  $$PHONON_GSTREAMER_DIR/audiooutput.h \
+ $$PHONON_GSTREAMER_DIR/audiodataoutput.h \
  $$PHONON_GSTREAMER_DIR/artssink.h \
  $$PHONON_GSTREAMER_DIR/abstractrenderer.h \
  $$PHONON_GSTREAMER_DIR/backend.h \
@@ -36,6 +37,7 @@
  $$PHONON_GSTREAMER_DIR/volumefadereffect.h
 
 SOURCES += $$PHONON_GSTREAMER_DIR/audiooutput.cpp \
+ $$PHONON_GSTREAMER_DIR/audiodataoutput.cpp \
  $$PHONON_GSTREAMER_DIR/abstractrenderer.cpp \
  $$PHONON_GSTREAMER_DIR/artssink.cpp \
  $$PHONON_GSTREAMER_DIR/backend.cpp \
Index: qt4-x11-4.6.2/src/tools/uic/qclass_lib_map.h
===================================================================
--- qt4-x11-4.6.2.orig/src/tools/uic/qclass_lib_map.h	2010-02-11 10:55:23.000000000 -0500
+++ qt4-x11-4.6.2/src/tools/uic/qclass_lib_map.h	2010-04-13 18:06:58.345908071 -0400
@@ -10,6 +10,90 @@
 QT_CLASS_LIB(QXmlStreamEntityResolver, QtCore, qxmlstream.h)
 QT_CLASS_LIB(QXmlStreamReader, QtCore, qxmlstream.h)
 QT_CLASS_LIB(QXmlStreamWriter, QtCore, qxmlstream.h)
+QT_CLASS_LIB(QAbstractState, QtCore, qabstractstate.h)
+QT_CLASS_LIB(QAbstractTransition, QtCore, qabstracttransition.h)
+QT_CLASS_LIB(QEventTransition, QtCore, qeventtransition.h)
+QT_CLASS_LIB(QFinalState, QtCore, qfinalstate.h)
+QT_CLASS_LIB(QHistoryState, QtCore, qhistorystate.h)
+QT_CLASS_LIB(QSignalTransition, QtCore, qsignaltransition.h)
+QT_CLASS_LIB(QState, QtCore, qstate.h)
+QT_CLASS_LIB(QStateMachine, QtCore, qstatemachine.h)
+QT_CLASS_LIB(QAtomicInt, QtCore, qatomic.h)
+QT_CLASS_LIB(QAtomicPointer, QtCore, qatomic.h)
+QT_CLASS_LIB(QBasicAtomicInt, QtCore, qbasicatomic.h)
+QT_CLASS_LIB(QBasicAtomicPointer, QtCore, qbasicatomic.h)
+QT_CLASS_LIB(QMutex, QtCore, qmutex.h)
+QT_CLASS_LIB(QMutexLocker, QtCore, qmutex.h)
+QT_CLASS_LIB(QMutex, QtCore, qmutex.h)
+QT_CLASS_LIB(QMutexLocker, QtCore, qmutex.h)
+QT_CLASS_LIB(QReadWriteLock, QtCore, qreadwritelock.h)
+QT_CLASS_LIB(QReadLocker, QtCore, qreadwritelock.h)
+QT_CLASS_LIB(QWriteLocker, QtCore, qreadwritelock.h)
+QT_CLASS_LIB(QReadWriteLock, QtCore, qreadwritelock.h)
+QT_CLASS_LIB(QReadLocker, QtCore, qreadwritelock.h)
+QT_CLASS_LIB(QWriteLocker, QtCore, qreadwritelock.h)
+QT_CLASS_LIB(QSemaphore, QtCore, qsemaphore.h)
+QT_CLASS_LIB(QThread, QtCore, qthread.h)
+QT_CLASS_LIB(QThread, QtCore, qthread.h)
+QT_CLASS_LIB(QThreadStorageData, QtCore, qthreadstorage.h)
+QT_CLASS_LIB(QThreadStorage, QtCore, qthreadstorage.h)
+QT_CLASS_LIB(QWaitCondition, QtCore, qwaitcondition.h)
+QT_CLASS_LIB(QWaitCondition, QtCore, qwaitcondition.h)
+QT_CLASS_LIB(QAbstractAnimation, QtCore, qabstractanimation.h)
+QT_CLASS_LIB(QAnimationGroup, QtCore, qanimationgroup.h)
+QT_CLASS_LIB(QParallelAnimationGroup, QtCore, qparallelanimationgroup.h)
+QT_CLASS_LIB(QPauseAnimation, QtCore, qpauseanimation.h)
+QT_CLASS_LIB(QPropertyAnimation, QtCore, qpropertyanimation.h)
+QT_CLASS_LIB(QSequentialAnimationGroup, QtCore, qsequentialanimationgroup.h)
+QT_CLASS_LIB(QVariantAnimation, QtCore, qvariantanimation.h)
+QT_CLASS_LIB(QAbstractEventDispatcher, QtCore, qabstracteventdispatcher.h)
+QT_CLASS_LIB(QModelIndex, QtCore, qabstractitemmodel.h)
+QT_CLASS_LIB(QPersistentModelIndex, QtCore, qabstractitemmodel.h)
+QT_CLASS_LIB(QModelIndexList, QtCore, qabstractitemmodel.h)
+QT_CLASS_LIB(QAbstractItemModel, QtCore, qabstractitemmodel.h)
+QT_CLASS_LIB(QAbstractTableModel, QtCore, qabstractitemmodel.h)
+QT_CLASS_LIB(QAbstractListModel, QtCore, qabstractitemmodel.h)
+QT_CLASS_LIB(QBasicTimer, QtCore, qbasictimer.h)
+QT_CLASS_LIB(QCoreApplication, QtCore, qcoreapplication.h)
+QT_CLASS_LIB(QtCleanUpFunction, QtCore, qcoreapplication.h)
+QT_CLASS_LIB(QEvent, QtCore, qcoreevent.h)
+QT_CLASS_LIB(QTimerEvent, QtCore, qcoreevent.h)
+QT_CLASS_LIB(QChildEvent, QtCore, qcoreevent.h)
+QT_CLASS_LIB(QCustomEvent, QtCore, qcoreevent.h)
+QT_CLASS_LIB(QDynamicPropertyChangeEvent, QtCore, qcoreevent.h)
+QT_CLASS_LIB(QEventLoop, QtCore, qeventloop.h)
+QT_CLASS_LIB(QMetaMethod, QtCore, qmetaobject.h)
+QT_CLASS_LIB(QMetaEnum, QtCore, qmetaobject.h)
+QT_CLASS_LIB(QMetaProperty, QtCore, qmetaobject.h)
+QT_CLASS_LIB(QMetaClassInfo, QtCore, qmetaobject.h)
+QT_CLASS_LIB(QMetaType, QtCore, qmetatype.h)
+QT_CLASS_LIB(QMetaTypeId, QtCore, qmetatype.h)
+QT_CLASS_LIB(QMetaTypeId2, QtCore, qmetatype.h)
+QT_CLASS_LIB(QMimeData, QtCore, qmimedata.h)
+QT_CLASS_LIB(QObjectList, QtCore, qobject.h)
+QT_CLASS_LIB(QObjectData, QtCore, qobject.h)
+QT_CLASS_LIB(QObject, QtCore, qobject.h)
+QT_CLASS_LIB(QObjectUserData, QtCore, qobject.h)
+QT_CLASS_LIB(QObjectCleanupHandler, QtCore, qobjectcleanuphandler.h)
+QT_CLASS_LIB(QGenericArgument, QtCore, qobjectdefs.h)
+QT_CLASS_LIB(QGenericReturnArgument, QtCore, qobjectdefs.h)
+QT_CLASS_LIB(QArgument, QtCore, qobjectdefs.h)
+QT_CLASS_LIB(QReturnArgument, QtCore, qobjectdefs.h)
+QT_CLASS_LIB(QMetaObject, QtCore, qobjectdefs.h)
+QT_CLASS_LIB(QMetaObjectAccessor, QtCore, qobjectdefs.h)
+QT_CLASS_LIB(QMetaObjectExtraData, QtCore, qobjectdefs.h)
+QT_CLASS_LIB(QPointer, QtCore, qpointer.h)
+QT_CLASS_LIB(QSharedMemory, QtCore, qsharedmemory.h)
+QT_CLASS_LIB(QSignalMapper, QtCore, qsignalmapper.h)
+QT_CLASS_LIB(QSocketNotifier, QtCore, qsocketnotifier.h)
+QT_CLASS_LIB(QSystemSemaphore, QtCore, qsystemsemaphore.h)
+QT_CLASS_LIB(QTimer, QtCore, qtimer.h)
+QT_CLASS_LIB(QTranslator, QtCore, qtranslator.h)
+QT_CLASS_LIB(QVariant, QtCore, qvariant.h)
+QT_CLASS_LIB(QVariantList, QtCore, qvariant.h)
+QT_CLASS_LIB(QVariantMap, QtCore, qvariant.h)
+QT_CLASS_LIB(QVariantHash, QtCore, qvariant.h)
+QT_CLASS_LIB(QVariantComparisonHelper, QtCore, qvariant.h)
 QT_CLASS_LIB(QAbstractFileEngine, QtCore, qabstractfileengine.h)
 QT_CLASS_LIB(QAbstractFileEngineHandler, QtCore, qabstractfileengine.h)
 QT_CLASS_LIB(QAbstractFileEngineIterator, QtCore, qabstractfileengine.h)
@@ -40,11 +124,69 @@
 QT_CLASS_LIB(QTextIStream, QtCore, qtextstream.h)
 QT_CLASS_LIB(QTextOStream, QtCore, qtextstream.h)
 QT_CLASS_LIB(QUrl, QtCore, qurl.h)
-QT_CLASS_LIB(QTextCodec, QtCore, qtextcodec.h)
-QT_CLASS_LIB(QTextEncoder, QtCore, qtextcodec.h)
-QT_CLASS_LIB(QTextDecoder, QtCore, qtextcodec.h)
-QT_CLASS_LIB(QTextCodecFactoryInterface, QtCore, qtextcodecplugin.h)
-QT_CLASS_LIB(QTextCodecPlugin, QtCore, qtextcodecplugin.h)
+QT_CLASS_LIB(QFactoryInterface, QtCore, qfactoryinterface.h)
+QT_CLASS_LIB(QLibrary, QtCore, qlibrary.h)
+QT_CLASS_LIB(QtPlugin, QtCore, qplugin.h)
+QT_CLASS_LIB(QtPluginInstanceFunction, QtCore, qplugin.h)
+QT_CLASS_LIB(QPluginLoader, QtCore, qpluginloader.h)
+QT_CLASS_LIB(QUuid, QtCore, quuid.h)
+QT_CLASS_LIB(QFuture, QtCore, qfuture.h)
+QT_CLASS_LIB(QFutureIterator, QtCore, qfuture.h)
+QT_CLASS_LIB(QMutableFutureIterator, QtCore, qfuture.h)
+QT_CLASS_LIB(QFuture, QtCore, qfuture.h)
+QT_CLASS_LIB(QFutureInterfaceBase, QtCore, qfutureinterface.h)
+QT_CLASS_LIB(QFutureInterface, QtCore, qfutureinterface.h)
+QT_CLASS_LIB(QFutureInterface, QtCore, qfutureinterface.h)
+QT_CLASS_LIB(QFutureSynchronizer, QtCore, qfuturesynchronizer.h)
+QT_CLASS_LIB(QFutureWatcherBase, QtCore, qfuturewatcher.h)
+QT_CLASS_LIB(QFutureWatcher, QtCore, qfuturewatcher.h)
+QT_CLASS_LIB(QFutureWatcher, QtCore, qfuturewatcher.h)
+QT_CLASS_LIB(QRunnable, QtCore, qrunnable.h)
+QT_CLASS_LIB(QtConcurrentFilter, QtCore, qtconcurrentfilter.h)
+QT_CLASS_LIB(QtConcurrentMap, QtCore, qtconcurrentmap.h)
+QT_CLASS_LIB(QtConcurrentRun, QtCore, qtconcurrentrun.h)
+QT_CLASS_LIB(QThreadPool, QtCore, qthreadpool.h)
+QT_CLASS_LIB(QtEndian, QtCore, qendian.h)
+QT_CLASS_LIB(QtGlobal, QtCore, qglobal.h)
+QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
+QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
+QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
+QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
+QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
+QT_CLASS_LIB(QNoImplicitBoolCast, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_INT8, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_UINT8, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_INT16, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_UINT16, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_INT32, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_UINT32, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_INT64, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_UINT64, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_LLONG, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_ULLONG, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_LONG, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_ULONG, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_LONG, QtCore, qglobal.h)
+QT_CLASS_LIB(Q_ULONG, QtCore, qglobal.h)
+QT_CLASS_LIB(QSysInfo, QtCore, qglobal.h)
+QT_CLASS_LIB(QtMsgHandler, QtCore, qglobal.h)
+QT_CLASS_LIB(QGlobalStatic, QtCore, qglobal.h)
+QT_CLASS_LIB(QGlobalStatic, QtCore, qglobal.h)
+QT_CLASS_LIB(QGlobalStaticDeleter, QtCore, qglobal.h)
+QT_CLASS_LIB(QBool, QtCore, qglobal.h)
+QT_CLASS_LIB(QTypeInfo, QtCore, qglobal.h)
+QT_CLASS_LIB(QTypeInfo, QtCore, qglobal.h)
+QT_CLASS_LIB(QTypeInfo, QtCore, qglobal.h)
+QT_CLASS_LIB(QFlag, QtCore, qglobal.h)
+QT_CLASS_LIB(QIncompatibleFlag, QtCore, qglobal.h)
+QT_CLASS_LIB(QFlags, QtCore, qglobal.h)
+QT_CLASS_LIB(QForeachContainer, QtCore, qglobal.h)
+QT_CLASS_LIB(QForeachContainerBase, QtCore, qglobal.h)
+QT_CLASS_LIB(QForeachContainer, QtCore, qglobal.h)
+QT_CLASS_LIB(QLibraryInfo, QtCore, qlibraryinfo.h)
+QT_CLASS_LIB(Qt, QtCore, qnamespace.h)
+QT_CLASS_LIB(QInternal, QtCore, qnamespace.h)
+QT_CLASS_LIB(QCOORD, QtCore, qnamespace.h)
 QT_CLASS_LIB(QtAlgorithms, QtCore, qalgorithms.h)
 QT_CLASS_LIB(QBitArray, QtCore, qbitarray.h)
 QT_CLASS_LIB(QBitRef, QtCore, qbitarray.h)
@@ -159,153 +301,11 @@
 QT_CLASS_LIB(QMutableVectorIterator, QtCore, qvector.h)
 QT_CLASS_LIB(QVectorIterator, QtCore, qvector.h)
 QT_CLASS_LIB(QMutableVectorIterator, QtCore, qvector.h)
-QT_CLASS_LIB(QtEndian, QtCore, qendian.h)
-QT_CLASS_LIB(QtGlobal, QtCore, qglobal.h)
-QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
-QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
-QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
-QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
-QT_CLASS_LIB(QIntegerForSize, QtCore, qglobal.h)
-QT_CLASS_LIB(QNoImplicitBoolCast, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_INT8, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_UINT8, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_INT16, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_UINT16, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_INT32, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_UINT32, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_INT64, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_UINT64, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_LLONG, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_ULLONG, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_LONG, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_ULONG, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_LONG, QtCore, qglobal.h)
-QT_CLASS_LIB(Q_ULONG, QtCore, qglobal.h)
-QT_CLASS_LIB(QSysInfo, QtCore, qglobal.h)
-QT_CLASS_LIB(QtMsgHandler, QtCore, qglobal.h)
-QT_CLASS_LIB(QGlobalStatic, QtCore, qglobal.h)
-QT_CLASS_LIB(QGlobalStatic, QtCore, qglobal.h)
-QT_CLASS_LIB(QGlobalStaticDeleter, QtCore, qglobal.h)
-QT_CLASS_LIB(QBool, QtCore, qglobal.h)
-QT_CLASS_LIB(QTypeInfo, QtCore, qglobal.h)
-QT_CLASS_LIB(QTypeInfo, QtCore, qglobal.h)
-QT_CLASS_LIB(QTypeInfo, QtCore, qglobal.h)
-QT_CLASS_LIB(QFlag, QtCore, qglobal.h)
-QT_CLASS_LIB(QIncompatibleFlag, QtCore, qglobal.h)
-QT_CLASS_LIB(QFlags, QtCore, qglobal.h)
-QT_CLASS_LIB(QForeachContainer, QtCore, qglobal.h)
-QT_CLASS_LIB(QForeachContainerBase, QtCore, qglobal.h)
-QT_CLASS_LIB(QForeachContainer, QtCore, qglobal.h)
-QT_CLASS_LIB(QLibraryInfo, QtCore, qlibraryinfo.h)
-QT_CLASS_LIB(Qt, QtCore, qnamespace.h)
-QT_CLASS_LIB(QInternal, QtCore, qnamespace.h)
-QT_CLASS_LIB(QCOORD, QtCore, qnamespace.h)
-QT_CLASS_LIB(QAbstractEventDispatcher, QtCore, qabstracteventdispatcher.h)
-QT_CLASS_LIB(QModelIndex, QtCore, qabstractitemmodel.h)
-QT_CLASS_LIB(QPersistentModelIndex, QtCore, qabstractitemmodel.h)
-QT_CLASS_LIB(QModelIndexList, QtCore, qabstractitemmodel.h)
-QT_CLASS_LIB(QAbstractItemModel, QtCore, qabstractitemmodel.h)
-QT_CLASS_LIB(QAbstractTableModel, QtCore, qabstractitemmodel.h)
-QT_CLASS_LIB(QAbstractListModel, QtCore, qabstractitemmodel.h)
-QT_CLASS_LIB(QBasicTimer, QtCore, qbasictimer.h)
-QT_CLASS_LIB(QCoreApplication, QtCore, qcoreapplication.h)
-QT_CLASS_LIB(QtCleanUpFunction, QtCore, qcoreapplication.h)
-QT_CLASS_LIB(QEvent, QtCore, qcoreevent.h)
-QT_CLASS_LIB(QTimerEvent, QtCore, qcoreevent.h)
-QT_CLASS_LIB(QChildEvent, QtCore, qcoreevent.h)
-QT_CLASS_LIB(QCustomEvent, QtCore, qcoreevent.h)
-QT_CLASS_LIB(QDynamicPropertyChangeEvent, QtCore, qcoreevent.h)
-QT_CLASS_LIB(QEventLoop, QtCore, qeventloop.h)
-QT_CLASS_LIB(QMetaMethod, QtCore, qmetaobject.h)
-QT_CLASS_LIB(QMetaEnum, QtCore, qmetaobject.h)
-QT_CLASS_LIB(QMetaProperty, QtCore, qmetaobject.h)
-QT_CLASS_LIB(QMetaClassInfo, QtCore, qmetaobject.h)
-QT_CLASS_LIB(QMetaType, QtCore, qmetatype.h)
-QT_CLASS_LIB(QMetaTypeId, QtCore, qmetatype.h)
-QT_CLASS_LIB(QMetaTypeId2, QtCore, qmetatype.h)
-QT_CLASS_LIB(QMimeData, QtCore, qmimedata.h)
-QT_CLASS_LIB(QObjectList, QtCore, qobject.h)
-QT_CLASS_LIB(QObjectData, QtCore, qobject.h)
-QT_CLASS_LIB(QObject, QtCore, qobject.h)
-QT_CLASS_LIB(QObjectUserData, QtCore, qobject.h)
-QT_CLASS_LIB(QObjectCleanupHandler, QtCore, qobjectcleanuphandler.h)
-QT_CLASS_LIB(QGenericArgument, QtCore, qobjectdefs.h)
-QT_CLASS_LIB(QGenericReturnArgument, QtCore, qobjectdefs.h)
-QT_CLASS_LIB(QArgument, QtCore, qobjectdefs.h)
-QT_CLASS_LIB(QReturnArgument, QtCore, qobjectdefs.h)
-QT_CLASS_LIB(QMetaObject, QtCore, qobjectdefs.h)
-QT_CLASS_LIB(QMetaObjectAccessor, QtCore, qobjectdefs.h)
-QT_CLASS_LIB(QMetaObjectExtraData, QtCore, qobjectdefs.h)
-QT_CLASS_LIB(QPointer, QtCore, qpointer.h)
-QT_CLASS_LIB(QSharedMemory, QtCore, qsharedmemory.h)
-QT_CLASS_LIB(QSignalMapper, QtCore, qsignalmapper.h)
-QT_CLASS_LIB(QSocketNotifier, QtCore, qsocketnotifier.h)
-QT_CLASS_LIB(QSystemSemaphore, QtCore, qsystemsemaphore.h)
-QT_CLASS_LIB(QTimer, QtCore, qtimer.h)
-QT_CLASS_LIB(QTranslator, QtCore, qtranslator.h)
-QT_CLASS_LIB(QVariant, QtCore, qvariant.h)
-QT_CLASS_LIB(QVariantList, QtCore, qvariant.h)
-QT_CLASS_LIB(QVariantMap, QtCore, qvariant.h)
-QT_CLASS_LIB(QVariantHash, QtCore, qvariant.h)
-QT_CLASS_LIB(QVariantComparisonHelper, QtCore, qvariant.h)
-QT_CLASS_LIB(QFuture, QtCore, qfuture.h)
-QT_CLASS_LIB(QFutureIterator, QtCore, qfuture.h)
-QT_CLASS_LIB(QMutableFutureIterator, QtCore, qfuture.h)
-QT_CLASS_LIB(QFuture, QtCore, qfuture.h)
-QT_CLASS_LIB(QFutureInterfaceBase, QtCore, qfutureinterface.h)
-QT_CLASS_LIB(QFutureInterface, QtCore, qfutureinterface.h)
-QT_CLASS_LIB(QFutureInterface, QtCore, qfutureinterface.h)
-QT_CLASS_LIB(QFutureSynchronizer, QtCore, qfuturesynchronizer.h)
-QT_CLASS_LIB(QFutureWatcherBase, QtCore, qfuturewatcher.h)
-QT_CLASS_LIB(QFutureWatcher, QtCore, qfuturewatcher.h)
-QT_CLASS_LIB(QFutureWatcher, QtCore, qfuturewatcher.h)
-QT_CLASS_LIB(QRunnable, QtCore, qrunnable.h)
-QT_CLASS_LIB(QtConcurrentFilter, QtCore, qtconcurrentfilter.h)
-QT_CLASS_LIB(QtConcurrentMap, QtCore, qtconcurrentmap.h)
-QT_CLASS_LIB(QtConcurrentRun, QtCore, qtconcurrentrun.h)
-QT_CLASS_LIB(QThreadPool, QtCore, qthreadpool.h)
-QT_CLASS_LIB(QFactoryInterface, QtCore, qfactoryinterface.h)
-QT_CLASS_LIB(QLibrary, QtCore, qlibrary.h)
-QT_CLASS_LIB(QtPlugin, QtCore, qplugin.h)
-QT_CLASS_LIB(QtPluginInstanceFunction, QtCore, qplugin.h)
-QT_CLASS_LIB(QPluginLoader, QtCore, qpluginloader.h)
-QT_CLASS_LIB(QUuid, QtCore, quuid.h)
-QT_CLASS_LIB(QAtomicInt, QtCore, qatomic.h)
-QT_CLASS_LIB(QAtomicPointer, QtCore, qatomic.h)
-QT_CLASS_LIB(QBasicAtomicInt, QtCore, qbasicatomic.h)
-QT_CLASS_LIB(QBasicAtomicPointer, QtCore, qbasicatomic.h)
-QT_CLASS_LIB(QMutex, QtCore, qmutex.h)
-QT_CLASS_LIB(QMutexLocker, QtCore, qmutex.h)
-QT_CLASS_LIB(QMutex, QtCore, qmutex.h)
-QT_CLASS_LIB(QMutexLocker, QtCore, qmutex.h)
-QT_CLASS_LIB(QReadWriteLock, QtCore, qreadwritelock.h)
-QT_CLASS_LIB(QReadLocker, QtCore, qreadwritelock.h)
-QT_CLASS_LIB(QWriteLocker, QtCore, qreadwritelock.h)
-QT_CLASS_LIB(QReadWriteLock, QtCore, qreadwritelock.h)
-QT_CLASS_LIB(QReadLocker, QtCore, qreadwritelock.h)
-QT_CLASS_LIB(QWriteLocker, QtCore, qreadwritelock.h)
-QT_CLASS_LIB(QSemaphore, QtCore, qsemaphore.h)
-QT_CLASS_LIB(QThread, QtCore, qthread.h)
-QT_CLASS_LIB(QThread, QtCore, qthread.h)
-QT_CLASS_LIB(QThreadStorageData, QtCore, qthreadstorage.h)
-QT_CLASS_LIB(QThreadStorage, QtCore, qthreadstorage.h)
-QT_CLASS_LIB(QWaitCondition, QtCore, qwaitcondition.h)
-QT_CLASS_LIB(QWaitCondition, QtCore, qwaitcondition.h)
-QT_CLASS_LIB(QAbstractState, QtCore, qabstractstate.h)
-QT_CLASS_LIB(QAbstractTransition, QtCore, qabstracttransition.h)
-QT_CLASS_LIB(QEventTransition, QtCore, qeventtransition.h)
-QT_CLASS_LIB(QFinalState, QtCore, qfinalstate.h)
-QT_CLASS_LIB(QHistoryState, QtCore, qhistorystate.h)
-QT_CLASS_LIB(QSignalTransition, QtCore, qsignaltransition.h)
-QT_CLASS_LIB(QState, QtCore, qstate.h)
-QT_CLASS_LIB(QStateMachine, QtCore, qstatemachine.h)
-QT_CLASS_LIB(QAbstractAnimation, QtCore, qabstractanimation.h)
-QT_CLASS_LIB(QAnimationGroup, QtCore, qanimationgroup.h)
-QT_CLASS_LIB(QParallelAnimationGroup, QtCore, qparallelanimationgroup.h)
-QT_CLASS_LIB(QPauseAnimation, QtCore, qpauseanimation.h)
-QT_CLASS_LIB(QPropertyAnimation, QtCore, qpropertyanimation.h)
-QT_CLASS_LIB(QSequentialAnimationGroup, QtCore, qsequentialanimationgroup.h)
-QT_CLASS_LIB(QVariantAnimation, QtCore, qvariantanimation.h)
+QT_CLASS_LIB(QTextCodec, QtCore, qtextcodec.h)
+QT_CLASS_LIB(QTextEncoder, QtCore, qtextcodec.h)
+QT_CLASS_LIB(QTextDecoder, QtCore, qtextcodec.h)
+QT_CLASS_LIB(QTextCodecFactoryInterface, QtCore, qtextcodecplugin.h)
+QT_CLASS_LIB(QTextCodecPlugin, QtCore, qtextcodecplugin.h)
 QT_CLASS_LIB(QMacGLCompatTypes, QtOpenGL, qgl.h)
 QT_CLASS_LIB(QMacGLCompatTypes, QtOpenGL, qgl.h)
 QT_CLASS_LIB(QMacCompatGLint, QtOpenGL, qgl.h)
@@ -322,6 +322,18 @@
 QT_CLASS_LIB(QGLScreen, QtOpenGL, qglscreen_qws.h)
 QT_CLASS_LIB(QGLShader, QtOpenGL, qglshaderprogram.h)
 QT_CLASS_LIB(QGLShaderProgram, QtOpenGL, qglshaderprogram.h)
+QT_CLASS_LIB(QXmlStreamAttribute, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamAttributes, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamEntityDeclaration, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamEntityDeclarations, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamEntityResolver, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamNamespaceDeclaration, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamNamespaceDeclarations, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamNotationDeclaration, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamNotationDeclarations, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamReader, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamStringRef, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QXmlStreamWriter, QtXml, qxmlstream.h)
 QT_CLASS_LIB(QXmlNamespaceSupport, QtXml, qxml.h)
 QT_CLASS_LIB(QXmlAttributes, QtXml, qxml.h)
 QT_CLASS_LIB(QXmlInputSource, QtXml, qxml.h)
@@ -353,18 +365,24 @@
 QT_CLASS_LIB(QDomEntity, QtXml, qdom.h)
 QT_CLASS_LIB(QDomEntityReference, QtXml, qdom.h)
 QT_CLASS_LIB(QDomProcessingInstruction, QtXml, qdom.h)
-QT_CLASS_LIB(QXmlStreamAttribute, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamAttributes, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamEntityDeclaration, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamEntityDeclarations, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamEntityResolver, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamNamespaceDeclaration, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamNamespaceDeclarations, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamNotationDeclaration, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamNotationDeclarations, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamReader, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamStringRef, QtXml, qxmlstream.h)
-QT_CLASS_LIB(QXmlStreamWriter, QtXml, qxmlstream.h)
+QT_CLASS_LIB(QSsl, QtNetwork, qssl.h)
+QT_CLASS_LIB(QSslCertificate, QtNetwork, qsslcertificate.h)
+QT_CLASS_LIB(QSslCipher, QtNetwork, qsslcipher.h)
+QT_CLASS_LIB(QSslConfiguration, QtNetwork, qsslconfiguration.h)
+QT_CLASS_LIB(QSslError, QtNetwork, qsslerror.h)
+QT_CLASS_LIB(QSslKey, QtNetwork, qsslkey.h)
+QT_CLASS_LIB(QSslSocket, QtNetwork, qsslsocket.h)
+QT_CLASS_LIB(QAuthenticator, QtNetwork, qauthenticator.h)
+QT_CLASS_LIB(QIPv6Address, QtNetwork, qhostaddress.h)
+QT_CLASS_LIB(Q_IPV6ADDR, QtNetwork, qhostaddress.h)
+QT_CLASS_LIB(QHostAddress, QtNetwork, qhostaddress.h)
+QT_CLASS_LIB(QHostInfo, QtNetwork, qhostinfo.h)
+QT_CLASS_LIB(QNetworkAddressEntry, QtNetwork, qnetworkinterface.h)
+QT_CLASS_LIB(QNetworkInterface, QtNetwork, qnetworkinterface.h)
+QT_CLASS_LIB(QNetworkProxyQuery, QtNetwork, qnetworkproxy.h)
+QT_CLASS_LIB(QNetworkProxy, QtNetwork, qnetworkproxy.h)
+QT_CLASS_LIB(QNetworkProxyFactory, QtNetwork, qnetworkproxy.h)
+QT_CLASS_LIB(QUrlInfo, QtNetwork, qurlinfo.h)
 QT_CLASS_LIB(QNetworkCacheMetaData, QtNetwork, qabstractnetworkcache.h)
 QT_CLASS_LIB(QAbstractNetworkCache, QtNetwork, qabstractnetworkcache.h)
 QT_CLASS_LIB(QFtp, QtNetwork, qftp.h)
@@ -378,30 +396,12 @@
 QT_CLASS_LIB(QNetworkDiskCache, QtNetwork, qnetworkdiskcache.h)
 QT_CLASS_LIB(QNetworkReply, QtNetwork, qnetworkreply.h)
 QT_CLASS_LIB(QNetworkRequest, QtNetwork, qnetworkrequest.h)
-QT_CLASS_LIB(QAuthenticator, QtNetwork, qauthenticator.h)
-QT_CLASS_LIB(QIPv6Address, QtNetwork, qhostaddress.h)
-QT_CLASS_LIB(Q_IPV6ADDR, QtNetwork, qhostaddress.h)
-QT_CLASS_LIB(QHostAddress, QtNetwork, qhostaddress.h)
-QT_CLASS_LIB(QHostInfo, QtNetwork, qhostinfo.h)
-QT_CLASS_LIB(QNetworkAddressEntry, QtNetwork, qnetworkinterface.h)
-QT_CLASS_LIB(QNetworkInterface, QtNetwork, qnetworkinterface.h)
-QT_CLASS_LIB(QNetworkProxyQuery, QtNetwork, qnetworkproxy.h)
-QT_CLASS_LIB(QNetworkProxy, QtNetwork, qnetworkproxy.h)
-QT_CLASS_LIB(QNetworkProxyFactory, QtNetwork, qnetworkproxy.h)
-QT_CLASS_LIB(QUrlInfo, QtNetwork, qurlinfo.h)
 QT_CLASS_LIB(QAbstractSocket, QtNetwork, qabstractsocket.h)
 QT_CLASS_LIB(QLocalServer, QtNetwork, qlocalserver.h)
 QT_CLASS_LIB(QLocalSocket, QtNetwork, qlocalsocket.h)
 QT_CLASS_LIB(QTcpServer, QtNetwork, qtcpserver.h)
 QT_CLASS_LIB(QTcpSocket, QtNetwork, qtcpsocket.h)
 QT_CLASS_LIB(QUdpSocket, QtNetwork, qudpsocket.h)
-QT_CLASS_LIB(QSsl, QtNetwork, qssl.h)
-QT_CLASS_LIB(QSslCertificate, QtNetwork, qsslcertificate.h)
-QT_CLASS_LIB(QSslCipher, QtNetwork, qsslcipher.h)
-QT_CLASS_LIB(QSslConfiguration, QtNetwork, qsslconfiguration.h)
-QT_CLASS_LIB(QSslError, QtNetwork, qsslerror.h)
-QT_CLASS_LIB(QSslKey, QtNetwork, qsslkey.h)
-QT_CLASS_LIB(QSslSocket, QtNetwork, qsslsocket.h)
 QT_CLASS_LIB(QHelpGlobal, QtHelp, qhelp_global.h)
 QT_CLASS_LIB(QHelpContentItem, QtHelp, qhelpcontentwidget.h)
 QT_CLASS_LIB(QHelpContentModel, QtHelp, qhelpcontentwidget.h)
@@ -457,6 +457,10 @@
 QT_CLASS_LIB(QWebSecurityOrigin, QtWebKit, qwebsecurityorigin.h)
 QT_CLASS_LIB(QWebSettings, QtWebKit, qwebsettings.h)
 QT_CLASS_LIB(QWebView, QtWebKit, qwebview.h)
+QT_CLASS_LIB(QAbstractVideoBuffer, QtMultimedia, qabstractvideobuffer.h)
+QT_CLASS_LIB(QAbstractVideoSurface, QtMultimedia, qabstractvideosurface.h)
+QT_CLASS_LIB(QVideoFrame, QtMultimedia, qvideoframe.h)
+QT_CLASS_LIB(QVideoSurfaceFormat, QtMultimedia, qvideosurfaceformat.h)
 QT_CLASS_LIB(QAudioDeviceInfo, QtMultimedia, qaudiodeviceinfo.h)
 QT_CLASS_LIB(QAbstractAudioDeviceInfo, QtMultimedia, qaudioengine.h)
 QT_CLASS_LIB(QAbstractAudioOutput, QtMultimedia, qaudioengine.h)
@@ -466,10 +470,6 @@
 QT_CLASS_LIB(QAudioFormat, QtMultimedia, qaudioformat.h)
 QT_CLASS_LIB(QAudioInput, QtMultimedia, qaudioinput.h)
 QT_CLASS_LIB(QAudioOutput, QtMultimedia, qaudiooutput.h)
-QT_CLASS_LIB(QAbstractVideoBuffer, QtMultimedia, qabstractvideobuffer.h)
-QT_CLASS_LIB(QAbstractVideoSurface, QtMultimedia, qabstractvideosurface.h)
-QT_CLASS_LIB(QVideoFrame, QtMultimedia, qvideoframe.h)
-QT_CLASS_LIB(QVideoSurfaceFormat, QtMultimedia, qvideosurfaceformat.h)
 QT_CLASS_LIB(QSignalSpy, QtTest, qsignalspy.h)
 QT_CLASS_LIB(QTest, QtTest, qtest.h)
 QT_CLASS_LIB(QtTestGui, QtTest, qtest_gui.h)
@@ -533,6 +533,11 @@
 QT_CLASS_LIB(QScriptValueList, QtScript, qscriptvalue.h)
 QT_CLASS_LIB(QScriptValue, QtScript, qscriptvalue.h)
 QT_CLASS_LIB(QScriptValueIterator, QtScript, qscriptvalueiterator.h)
+QT_CLASS_LIB(QSqlQueryModel, QtSql, qsqlquerymodel.h)
+QT_CLASS_LIB(QSqlRelationalDelegate, QtSql, qsqlrelationaldelegate.h)
+QT_CLASS_LIB(QSqlRelation, QtSql, qsqlrelationaltablemodel.h)
+QT_CLASS_LIB(QSqlRelationalTableModel, QtSql, qsqlrelationaltablemodel.h)
+QT_CLASS_LIB(QSqlTableModel, QtSql, qsqltablemodel.h)
 QT_CLASS_LIB(QSqlDriverCreatorBase, QtSql, qsqldatabase.h)
 QT_CLASS_LIB(QSqlDriverCreator, QtSql, qsqldatabase.h)
 QT_CLASS_LIB(QSqlDatabase, QtSql, qsqldatabase.h)
@@ -545,124 +550,24 @@
 QT_CLASS_LIB(QSqlQuery, QtSql, qsqlquery.h)
 QT_CLASS_LIB(QSqlRecord, QtSql, qsqlrecord.h)
 QT_CLASS_LIB(QSqlResult, QtSql, qsqlresult.h)
-QT_CLASS_LIB(QSqlQueryModel, QtSql, qsqlquerymodel.h)
-QT_CLASS_LIB(QSqlRelationalDelegate, QtSql, qsqlrelationaldelegate.h)
-QT_CLASS_LIB(QSqlRelation, QtSql, qsqlrelationaltablemodel.h)
-QT_CLASS_LIB(QSqlRelationalTableModel, QtSql, qsqlrelationaltablemodel.h)
-QT_CLASS_LIB(QSqlTableModel, QtSql, qsqltablemodel.h)
-QT_CLASS_LIB(QSQLite2Result, QtSql, qsql_sqlite2.h)
-QT_CLASS_LIB(QSQLite2Driver, QtSql, qsql_sqlite2.h)
-QT_CLASS_LIB(QODBCResult, QtSql, qsql_odbc.h)
-QT_CLASS_LIB(QODBCDriver, QtSql, qsql_odbc.h)
-QT_CLASS_LIB(QTDSResult, QtSql, qsql_tds.h)
-QT_CLASS_LIB(QTDSDriver, QtSql, qsql_tds.h)
 QT_CLASS_LIB(QIBaseResult, QtSql, qsql_ibase.h)
 QT_CLASS_LIB(QIBaseDriver, QtSql, qsql_ibase.h)
-QT_CLASS_LIB(QSQLiteResult, QtSql, qsql_sqlite.h)
-QT_CLASS_LIB(QSQLiteDriver, QtSql, qsql_sqlite.h)
 QT_CLASS_LIB(QMYSQLResult, QtSql, qsql_mysql.h)
 QT_CLASS_LIB(QMYSQLDriver, QtSql, qsql_mysql.h)
-QT_CLASS_LIB(QPSQLResult, QtSql, qsql_psql.h)
-QT_CLASS_LIB(QPSQLDriver, QtSql, qsql_psql.h)
 QT_CLASS_LIB(QOCIResult, QtSql, qsql_oci.h)
 QT_CLASS_LIB(QOCIDriver, QtSql, qsql_oci.h)
+QT_CLASS_LIB(QSQLiteResult, QtSql, qsql_sqlite.h)
+QT_CLASS_LIB(QSQLiteDriver, QtSql, qsql_sqlite.h)
+QT_CLASS_LIB(QPSQLResult, QtSql, qsql_psql.h)
+QT_CLASS_LIB(QPSQLDriver, QtSql, qsql_psql.h)
+QT_CLASS_LIB(QSQLite2Result, QtSql, qsql_sqlite2.h)
+QT_CLASS_LIB(QSQLite2Driver, QtSql, qsql_sqlite2.h)
+QT_CLASS_LIB(QODBCResult, QtSql, qsql_odbc.h)
+QT_CLASS_LIB(QODBCDriver, QtSql, qsql_odbc.h)
 QT_CLASS_LIB(QDB2Result, QtSql, qsql_db2.h)
 QT_CLASS_LIB(QDB2Driver, QtSql, qsql_db2.h)
-QT_CLASS_LIB(QBitmap, QtGui, qbitmap.h)
-QT_CLASS_LIB(QIcon, QtGui, qicon.h)
-QT_CLASS_LIB(QIconSet, QtGui, qicon.h)
-QT_CLASS_LIB(QIconEngine, QtGui, qiconengine.h)
-QT_CLASS_LIB(QIconEngineV2, QtGui, qiconengine.h)
-QT_CLASS_LIB(QIconEngineFactoryInterface, QtGui, qiconengineplugin.h)
-QT_CLASS_LIB(QIconEnginePlugin, QtGui, qiconengineplugin.h)
-QT_CLASS_LIB(QIconEngineFactoryInterfaceV2, QtGui, qiconengineplugin.h)
-QT_CLASS_LIB(QIconEnginePluginV2, QtGui, qiconengineplugin.h)
-QT_CLASS_LIB(QImageTextKeyLang, QtGui, qimage.h)
-QT_CLASS_LIB(QImage, QtGui, qimage.h)
-QT_CLASS_LIB(QImageIOHandler, QtGui, qimageiohandler.h)
-QT_CLASS_LIB(QImageIOHandlerFactoryInterface, QtGui, qimageiohandler.h)
-QT_CLASS_LIB(QImageIOPlugin, QtGui, qimageiohandler.h)
-QT_CLASS_LIB(QImageReader, QtGui, qimagereader.h)
-QT_CLASS_LIB(QImageWriter, QtGui, qimagewriter.h)
-QT_CLASS_LIB(QMovie, QtGui, qmovie.h)
-QT_CLASS_LIB(QPicture, QtGui, qpicture.h)
-QT_CLASS_LIB(QPictureIO, QtGui, qpicture.h)
-QT_CLASS_LIB(QPictureFormatInterface, QtGui, qpictureformatplugin.h)
-QT_CLASS_LIB(QPictureFormatPlugin, QtGui, qpictureformatplugin.h)
-QT_CLASS_LIB(QPixmap, QtGui, qpixmap.h)
-QT_CLASS_LIB(QPixmapCache, QtGui, qpixmapcache.h)
-QT_CLASS_LIB(QS60MainApplication, QtGui, qs60mainapplication.h)
-QT_CLASS_LIB(QS60MainAppUi, QtGui, qs60mainappui.h)
-QT_CLASS_LIB(QS60MainDocument, QtGui, qs60maindocument.h)
-QT_CLASS_LIB(QCopChannel, QtGui, qcopchannel_qws.h)
-QT_CLASS_LIB(QDecorationAction, QtGui, qdecoration_qws.h)
-QT_CLASS_LIB(QDecoration, QtGui, qdecoration_qws.h)
-QT_CLASS_LIB(QDecorationDefault, QtGui, qdecorationdefault_qws.h)
-QT_CLASS_LIB(QDecorationFactory, QtGui, qdecorationfactory_qws.h)
-QT_CLASS_LIB(QDecorationFactoryInterface, QtGui, qdecorationplugin_qws.h)
-QT_CLASS_LIB(QDecorationPlugin, QtGui, qdecorationplugin_qws.h)
-QT_CLASS_LIB(QDecorationStyled, QtGui, qdecorationstyled_qws.h)
-QT_CLASS_LIB(QDecorationWindows, QtGui, qdecorationwindows_qws.h)
-QT_CLASS_LIB(QDirectPainter, QtGui, qdirectpainter_qws.h)
-QT_CLASS_LIB(QWSKeyboardHandler, QtGui, qkbd_qws.h)
-QT_CLASS_LIB(QKbdDriverFactory, QtGui, qkbddriverfactory_qws.h)
-QT_CLASS_LIB(QWSKeyboardHandlerFactoryInterface, QtGui, qkbddriverplugin_qws.h)
-QT_CLASS_LIB(QKbdDriverPlugin, QtGui, qkbddriverplugin_qws.h)
-QT_CLASS_LIB(QWSLinuxInputKeyboardHandler, QtGui, qkbdlinuxinput_qws.h)
-QT_CLASS_LIB(QWSQnxKeyboardHandler, QtGui, qkbdqnx_qws.h)
-QT_CLASS_LIB(QWSTtyKeyboardHandler, QtGui, qkbdtty_qws.h)
-QT_CLASS_LIB(QWSUmKeyboardHandler, QtGui, qkbdum_qws.h)
-QT_CLASS_LIB(QVFbKeyboardHandler, QtGui, qkbdvfb_qws.h)
-QT_CLASS_LIB(QWSPointerCalibrationData, QtGui, qmouse_qws.h)
-QT_CLASS_LIB(QWSMouseHandler, QtGui, qmouse_qws.h)
-QT_CLASS_LIB(QWSCalibratedMouseHandler, QtGui, qmouse_qws.h)
-QT_CLASS_LIB(QMouseDriverFactory, QtGui, qmousedriverfactory_qws.h)
-QT_CLASS_LIB(QWSMouseHandlerFactoryInterface, QtGui, qmousedriverplugin_qws.h)
-QT_CLASS_LIB(QMouseDriverPlugin, QtGui, qmousedriverplugin_qws.h)
-QT_CLASS_LIB(QWSLinuxInputMouseHandler, QtGui, qmouselinuxinput_qws.h)
-QT_CLASS_LIB(QWSLinuxTPMouseHandler, QtGui, qmouselinuxtp_qws.h)
-QT_CLASS_LIB(QWSPcMouseHandler, QtGui, qmousepc_qws.h)
-QT_CLASS_LIB(QQnxMouseHandler, QtGui, qmouseqnx_qws.h)
-QT_CLASS_LIB(QWSTslibMouseHandler, QtGui, qmousetslib_qws.h)
-QT_CLASS_LIB(QVFbMouseHandler, QtGui, qmousevfb_qws.h)
-QT_CLASS_LIB(QScreenCursor, QtGui, qscreen_qws.h)
-QT_CLASS_LIB(QPoolEntry, QtGui, qscreen_qws.h)
-QT_CLASS_LIB(QScreen, QtGui, qscreen_qws.h)
-QT_CLASS_LIB(QScreenDriverFactory, QtGui, qscreendriverfactory_qws.h)
-QT_CLASS_LIB(QScreenDriverFactoryInterface, QtGui, qscreendriverplugin_qws.h)
-QT_CLASS_LIB(QScreenDriverPlugin, QtGui, qscreendriverplugin_qws.h)
-QT_CLASS_LIB(QLinuxFb_Shared, QtGui, qscreenlinuxfb_qws.h)
-QT_CLASS_LIB(QLinuxFbScreen, QtGui, qscreenlinuxfb_qws.h)
-QT_CLASS_LIB(QProxyScreenCursor, QtGui, qscreenproxy_qws.h)
-QT_CLASS_LIB(QProxyScreen, QtGui, qscreenproxy_qws.h)
-QT_CLASS_LIB(QQnxScreen, QtGui, qscreenqnx_qws.h)
-QT_CLASS_LIB(QTransformedScreen, QtGui, qscreentransformed_qws.h)
-QT_CLASS_LIB(QVFbScreen, QtGui, qscreenvfb_qws.h)
-QT_CLASS_LIB(QWSSoundServer, QtGui, qsoundqss_qws.h)
-QT_CLASS_LIB(QWSSoundClient, QtGui, qsoundqss_qws.h)
-QT_CLASS_LIB(QWSSoundServerSocket, QtGui, qsoundqss_qws.h)
-QT_CLASS_LIB(QTransportAuth, QtGui, qtransportauth_qws.h)
-QT_CLASS_LIB(QAuthDevice, QtGui, qtransportauth_qws.h)
-QT_CLASS_LIB(QVFbHeader, QtGui, qvfbhdr.h)
-QT_CLASS_LIB(QVFbKeyData, QtGui, qvfbhdr.h)
-QT_CLASS_LIB(QWSInternalWindowInfo, QtGui, qwindowsystem_qws.h)
-QT_CLASS_LIB(QWSScreenSaver, QtGui, qwindowsystem_qws.h)
-QT_CLASS_LIB(QWSWindow, QtGui, qwindowsystem_qws.h)
-QT_CLASS_LIB(QWSSoundServer, QtGui, qwindowsystem_qws.h)
-QT_CLASS_LIB(QWSServer, QtGui, qwindowsystem_qws.h)
-QT_CLASS_LIB(QWSInputMethod, QtGui, qwindowsystem_qws.h)
-QT_CLASS_LIB(QWSCursorMap, QtGui, qwindowsystem_qws.h)
-QT_CLASS_LIB(QWSClient, QtGui, qwindowsystem_qws.h)
-QT_CLASS_LIB(QWSCursor, QtGui, qwscursor_qws.h)
-QT_CLASS_LIB(QWSWindowInfo, QtGui, qwsdisplay_qws.h)
-QT_CLASS_LIB(QWSDisplay, QtGui, qwsdisplay_qws.h)
-QT_CLASS_LIB(QWSEmbedWidget, QtGui, qwsembedwidget.h)
-QT_CLASS_LIB(QWSEvent, QtGui, qwsevent_qws.h)
-QT_CLASS_LIB(QWSManager, QtGui, qwsmanager_qws.h)
-QT_CLASS_LIB(QWSPropertyManager, QtGui, qwsproperty_qws.h)
-QT_CLASS_LIB(QWSProtocolItem, QtGui, qwsprotocolitem_qws.h)
-QT_CLASS_LIB(QWSSocket, QtGui, qwssocket_qws.h)
-QT_CLASS_LIB(QWSServerSocket, QtGui, qwssocket_qws.h)
+QT_CLASS_LIB(QTDSResult, QtSql, qsql_tds.h)
+QT_CLASS_LIB(QTDSDriver, QtSql, qsql_tds.h)
 QT_CLASS_LIB(QAbstractButton, QtGui, qabstractbutton.h)
 QT_CLASS_LIB(QAbstractScrollArea, QtGui, qabstractscrollarea.h)
 QT_CLASS_LIB(QAbstractSlider, QtGui, qabstractslider.h)
@@ -723,116 +628,74 @@
 QT_CLASS_LIB(QDoubleValidator, QtGui, qvalidator.h)
 QT_CLASS_LIB(QRegExpValidator, QtGui, qvalidator.h)
 QT_CLASS_LIB(QWorkspace, QtGui, qworkspace.h)
-QT_CLASS_LIB(QInputContext, QtGui, qinputcontext.h)
-QT_CLASS_LIB(QInputContextFactory, QtGui, qinputcontextfactory.h)
-QT_CLASS_LIB(QInputContextFactoryInterface, QtGui, qinputcontextplugin.h)
-QT_CLASS_LIB(QInputContextPlugin, QtGui, qinputcontextplugin.h)
-QT_CLASS_LIB(QGraphicsAnchor, QtGui, qgraphicsanchorlayout.h)
-QT_CLASS_LIB(QGraphicsAnchorLayout, QtGui, qgraphicsanchorlayout.h)
-QT_CLASS_LIB(QGraphicsGridLayout, QtGui, qgraphicsgridlayout.h)
-QT_CLASS_LIB(QGraphicsItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsObject, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QAbstractGraphicsShapeItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsPathItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsRectItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsEllipseItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsPolygonItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsLineItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsPixmapItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsTextItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsSimpleTextItem, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsItemGroup, QtGui, qgraphicsitem.h)
-QT_CLASS_LIB(QGraphicsItemAnimation, QtGui, qgraphicsitemanimation.h)
-QT_CLASS_LIB(QGraphicsLayout, QtGui, qgraphicslayout.h)
-QT_CLASS_LIB(QGraphicsLayoutItem, QtGui, qgraphicslayoutitem.h)
-QT_CLASS_LIB(QGraphicsLinearLayout, QtGui, qgraphicslinearlayout.h)
-QT_CLASS_LIB(QGraphicsProxyWidget, QtGui, qgraphicsproxywidget.h)
-QT_CLASS_LIB(QGraphicsScene, QtGui, qgraphicsscene.h)
-QT_CLASS_LIB(QGraphicsSceneEvent, QtGui, qgraphicssceneevent.h)
-QT_CLASS_LIB(QGraphicsSceneMouseEvent, QtGui, qgraphicssceneevent.h)
-QT_CLASS_LIB(QGraphicsSceneWheelEvent, QtGui, qgraphicssceneevent.h)
-QT_CLASS_LIB(QGraphicsSceneContextMenuEvent, QtGui, qgraphicssceneevent.h)
-QT_CLASS_LIB(QGraphicsSceneHoverEvent, QtGui, qgraphicssceneevent.h)
-QT_CLASS_LIB(QGraphicsSceneHelpEvent, QtGui, qgraphicssceneevent.h)
-QT_CLASS_LIB(QGraphicsSceneDragDropEvent, QtGui, qgraphicssceneevent.h)
-QT_CLASS_LIB(QGraphicsSceneResizeEvent, QtGui, qgraphicssceneevent.h)
-QT_CLASS_LIB(QGraphicsSceneMoveEvent, QtGui, qgraphicssceneevent.h)
-QT_CLASS_LIB(QGraphicsTransform, QtGui, qgraphicstransform.h)
-QT_CLASS_LIB(QGraphicsScale, QtGui, qgraphicstransform.h)
-QT_CLASS_LIB(QGraphicsRotation, QtGui, qgraphicstransform.h)
-QT_CLASS_LIB(QGraphicsView, QtGui, qgraphicsview.h)
-QT_CLASS_LIB(QGraphicsWidget, QtGui, qgraphicswidget.h)
-QT_CLASS_LIB(QGenericMatrix, QtGui, qgenericmatrix.h)
-QT_CLASS_LIB(QMatrix2x2, QtGui, qgenericmatrix.h)
-QT_CLASS_LIB(QMatrix2x3, QtGui, qgenericmatrix.h)
-QT_CLASS_LIB(QMatrix2x4, QtGui, qgenericmatrix.h)
-QT_CLASS_LIB(QMatrix3x2, QtGui, qgenericmatrix.h)
-QT_CLASS_LIB(QMatrix3x3, QtGui, qgenericmatrix.h)
-QT_CLASS_LIB(QMatrix3x4, QtGui, qgenericmatrix.h)
-QT_CLASS_LIB(QMatrix4x2, QtGui, qgenericmatrix.h)
-QT_CLASS_LIB(QMatrix4x3, QtGui, qgenericmatrix.h)
-QT_CLASS_LIB(QMatrix4x4, QtGui, qmatrix4x4.h)
-QT_CLASS_LIB(QQuaternion, QtGui, qquaternion.h)
-QT_CLASS_LIB(QVector2D, QtGui, qvector2d.h)
-QT_CLASS_LIB(QVector3D, QtGui, qvector3d.h)
-QT_CLASS_LIB(QVector4D, QtGui, qvector4d.h)
-QT_CLASS_LIB(QFontEngineInfo, QtGui, qabstractfontengine_qws.h)
-QT_CLASS_LIB(QFontEngineFactoryInterface, QtGui, qabstractfontengine_qws.h)
-QT_CLASS_LIB(QFontEnginePlugin, QtGui, qabstractfontengine_qws.h)
-QT_CLASS_LIB(QAbstractFontEngine, QtGui, qabstractfontengine_qws.h)
-QT_CLASS_LIB(QAbstractTextDocumentLayout, QtGui, qabstracttextdocumentlayout.h)
-QT_CLASS_LIB(QTextObjectInterface, QtGui, qabstracttextdocumentlayout.h)
-QT_CLASS_LIB(QFont, QtGui, qfont.h)
-QT_CLASS_LIB(QFontDatabase, QtGui, qfontdatabase.h)
-QT_CLASS_LIB(QFontInfo, QtGui, qfontinfo.h)
-QT_CLASS_LIB(QFontMetrics, QtGui, qfontmetrics.h)
-QT_CLASS_LIB(QFontMetricsF, QtGui, qfontmetrics.h)
-QT_CLASS_LIB(QSyntaxHighlighter, QtGui, qsyntaxhighlighter.h)
-QT_CLASS_LIB(QTextCursor, QtGui, qtextcursor.h)
-QT_CLASS_LIB(QAbstractUndoItem, QtGui, qtextdocument.h)
-QT_CLASS_LIB(QTextDocument, QtGui, qtextdocument.h)
-QT_CLASS_LIB(QTextDocumentFragment, QtGui, qtextdocumentfragment.h)
-QT_CLASS_LIB(QTextDocumentWriter, QtGui, qtextdocumentwriter.h)
-QT_CLASS_LIB(QTextLength, QtGui, qtextformat.h)
-QT_CLASS_LIB(QTextFormat, QtGui, qtextformat.h)
-QT_CLASS_LIB(QTextCharFormat, QtGui, qtextformat.h)
-QT_CLASS_LIB(QTextBlockFormat, QtGui, qtextformat.h)
-QT_CLASS_LIB(QTextListFormat, QtGui, qtextformat.h)
-QT_CLASS_LIB(QTextImageFormat, QtGui, qtextformat.h)
-QT_CLASS_LIB(QTextFrameFormat, QtGui, qtextformat.h)
-QT_CLASS_LIB(QTextTableFormat, QtGui, qtextformat.h)
-QT_CLASS_LIB(QTextTableCellFormat, QtGui, qtextformat.h)
-QT_CLASS_LIB(QTextInlineObject, QtGui, qtextlayout.h)
-QT_CLASS_LIB(QTextLayout, QtGui, qtextlayout.h)
-QT_CLASS_LIB(QTextLine, QtGui, qtextlayout.h)
-QT_CLASS_LIB(QTextList, QtGui, qtextlist.h)
-QT_CLASS_LIB(QTextObject, QtGui, qtextobject.h)
-QT_CLASS_LIB(QTextBlockGroup, QtGui, qtextobject.h)
-QT_CLASS_LIB(QTextFrameLayoutData, QtGui, qtextobject.h)
-QT_CLASS_LIB(QTextFrame, QtGui, qtextobject.h)
-QT_CLASS_LIB(QTextBlockUserData, QtGui, qtextobject.h)
-QT_CLASS_LIB(QTextBlock, QtGui, qtextobject.h)
-QT_CLASS_LIB(QTextFragment, QtGui, qtextobject.h)
-QT_CLASS_LIB(QTextOption, QtGui, qtextoption.h)
-QT_CLASS_LIB(QTextTableCell, QtGui, qtexttable.h)
-QT_CLASS_LIB(QTextTable, QtGui, qtexttable.h)
-QT_CLASS_LIB(QAbstractPageSetupDialog, QtGui, qabstractpagesetupdialog.h)
-QT_CLASS_LIB(QAbstractPrintDialog, QtGui, qabstractprintdialog.h)
-QT_CLASS_LIB(QColorDialog, QtGui, qcolordialog.h)
-QT_CLASS_LIB(QDialog, QtGui, qdialog.h)
-QT_CLASS_LIB(QErrorMessage, QtGui, qerrormessage.h)
-QT_CLASS_LIB(QFileDialog, QtGui, qfiledialog.h)
-QT_CLASS_LIB(QFileSystemModel, QtGui, qfilesystemmodel.h)
-QT_CLASS_LIB(QFontDialog, QtGui, qfontdialog.h)
-QT_CLASS_LIB(QInputDialog, QtGui, qinputdialog.h)
-QT_CLASS_LIB(QMessageBox, QtGui, qmessagebox.h)
-QT_CLASS_LIB(QPageSetupDialog, QtGui, qpagesetupdialog.h)
-QT_CLASS_LIB(QUnixPrintWidget, QtGui, qprintdialog.h)
-QT_CLASS_LIB(QPrintDialog, QtGui, qprintdialog.h)
-QT_CLASS_LIB(QPrintPreviewDialog, QtGui, qprintpreviewdialog.h)
-QT_CLASS_LIB(QProgressDialog, QtGui, qprogressdialog.h)
-QT_CLASS_LIB(QWizard, QtGui, qwizard.h)
-QT_CLASS_LIB(QWizardPage, QtGui, qwizard.h)
+QT_CLASS_LIB(QSymbianEvent, QtGui, qsymbianevent.h)
+QT_CLASS_LIB(QCDEStyle, QtGui, qcdestyle.h)
+QT_CLASS_LIB(QCleanlooksStyle, QtGui, qcleanlooksstyle.h)
+QT_CLASS_LIB(QCommonStyle, QtGui, qcommonstyle.h)
+QT_CLASS_LIB(QGtkStyle, QtGui, qgtkstyle.h)
+QT_CLASS_LIB(QMacStyle, QtGui, qmacstyle_mac.h)
+QT_CLASS_LIB(QMotifStyle, QtGui, qmotifstyle.h)
+QT_CLASS_LIB(QPlastiqueStyle, QtGui, qplastiquestyle.h)
+QT_CLASS_LIB(QProxyStyle, QtGui, qproxystyle.h)
+QT_CLASS_LIB(QS60Style, QtGui, qs60style.h)
+QT_CLASS_LIB(QStyle, QtGui, qstyle.h)
+QT_CLASS_LIB(QStyleFactory, QtGui, qstylefactory.h)
+QT_CLASS_LIB(QStyleOption, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionFocusRect, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionFrame, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionFrameV2, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionFrameV3, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionTabWidgetFrame, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionTabWidgetFrameV2, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionTabBarBase, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionTabBarBaseV2, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionHeader, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionButton, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionTab, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionTabV2, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionTabV3, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionToolBar, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionProgressBar, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionProgressBarV2, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionMenuItem, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionQ3ListViewItem, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionQ3DockWindow, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionDockWidget, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionDockWidgetV2, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionViewItem, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionViewItemV2, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionViewItemV3, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionViewItemV4, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionToolBox, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionToolBoxV2, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionRubberBand, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionComplex, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionSlider, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionSpinBox, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionQ3ListView, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionToolButton, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionComboBox, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionTitleBar, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionGroupBox, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionSizeGrip, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleOptionGraphicsItem, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleHintReturn, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleHintReturnMask, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleHintReturnVariant, QtGui, qstyleoption.h)
+QT_CLASS_LIB(QStyleFactoryInterface, QtGui, qstyleplugin.h)
+QT_CLASS_LIB(QStylePlugin, QtGui, qstyleplugin.h)
+QT_CLASS_LIB(QWindowsCEStyle, QtGui, qwindowscestyle.h)
+QT_CLASS_LIB(QWindowsMobileStyle, QtGui, qwindowsmobilestyle.h)
+QT_CLASS_LIB(QWindowsStyle, QtGui, qwindowsstyle.h)
+QT_CLASS_LIB(QWindowsVistaStyle, QtGui, qwindowsvistastyle.h)
+QT_CLASS_LIB(QWindowsXPStyle, QtGui, qwindowsxpstyle.h)
+QT_CLASS_LIB(QCompleter, QtGui, qcompleter.h)
+QT_CLASS_LIB(QDesktopServices, QtGui, qdesktopservices.h)
+QT_CLASS_LIB(QSystemTrayIcon, QtGui, qsystemtrayicon.h)
+QT_CLASS_LIB(QUndoGroup, QtGui, qundogroup.h)
+QT_CLASS_LIB(QUndoCommand, QtGui, qundostack.h)
+QT_CLASS_LIB(QUndoStack, QtGui, qundostack.h)
+QT_CLASS_LIB(QUndoView, QtGui, qundoview.h)
 QT_CLASS_LIB(QAccessible, QtGui, qaccessible.h)
 QT_CLASS_LIB(QAccessibleInterface, QtGui, qaccessible.h)
 QT_CLASS_LIB(QAccessibleInterfaceEx, QtGui, qaccessible.h)
@@ -855,6 +718,89 @@
 QT_CLASS_LIB(QAccessiblePlugin, QtGui, qaccessibleplugin.h)
 QT_CLASS_LIB(QAccessibleWidget, QtGui, qaccessiblewidget.h)
 QT_CLASS_LIB(QAccessibleWidgetEx, QtGui, qaccessiblewidget.h)
+QT_CLASS_LIB(QKeyEventTransition, QtGui, qkeyeventtransition.h)
+QT_CLASS_LIB(QMouseEventTransition, QtGui, qmouseeventtransition.h)
+QT_CLASS_LIB(QAbstractItemDelegate, QtGui, qabstractitemdelegate.h)
+QT_CLASS_LIB(QAbstractItemView, QtGui, qabstractitemview.h)
+QT_CLASS_LIB(QAbstractProxyModel, QtGui, qabstractproxymodel.h)
+QT_CLASS_LIB(QColumnView, QtGui, qcolumnview.h)
+QT_CLASS_LIB(QDataWidgetMapper, QtGui, qdatawidgetmapper.h)
+QT_CLASS_LIB(QDirModel, QtGui, qdirmodel.h)
+QT_CLASS_LIB(QFileIconProvider, QtGui, qfileiconprovider.h)
+QT_CLASS_LIB(QHeaderView, QtGui, qheaderview.h)
+QT_CLASS_LIB(QItemDelegate, QtGui, qitemdelegate.h)
+QT_CLASS_LIB(QItemEditorCreatorBase, QtGui, qitemeditorfactory.h)
+QT_CLASS_LIB(QItemEditorCreator, QtGui, qitemeditorfactory.h)
+QT_CLASS_LIB(QStandardItemEditorCreator, QtGui, qitemeditorfactory.h)
+QT_CLASS_LIB(QItemEditorFactory, QtGui, qitemeditorfactory.h)
+QT_CLASS_LIB(QItemSelectionRange, QtGui, qitemselectionmodel.h)
+QT_CLASS_LIB(QItemSelectionModel, QtGui, qitemselectionmodel.h)
+QT_CLASS_LIB(QItemSelection, QtGui, qitemselectionmodel.h)
+QT_CLASS_LIB(QListView, QtGui, qlistview.h)
+QT_CLASS_LIB(QListWidgetItem, QtGui, qlistwidget.h)
+QT_CLASS_LIB(QListWidget, QtGui, qlistwidget.h)
+QT_CLASS_LIB(QProxyModel, QtGui, qproxymodel.h)
+QT_CLASS_LIB(QSortFilterProxyModel, QtGui, qsortfilterproxymodel.h)
+QT_CLASS_LIB(QStandardItem, QtGui, qstandarditemmodel.h)
+QT_CLASS_LIB(QStandardItemModel, QtGui, qstandarditemmodel.h)
+QT_CLASS_LIB(QStringListModel, QtGui, qstringlistmodel.h)
+QT_CLASS_LIB(QStyledItemDelegate, QtGui, qstyleditemdelegate.h)
+QT_CLASS_LIB(QTableView, QtGui, qtableview.h)
+QT_CLASS_LIB(QTableWidgetSelectionRange, QtGui, qtablewidget.h)
+QT_CLASS_LIB(QTableWidgetItem, QtGui, qtablewidget.h)
+QT_CLASS_LIB(QTableWidget, QtGui, qtablewidget.h)
+QT_CLASS_LIB(QTreeView, QtGui, qtreeview.h)
+QT_CLASS_LIB(QTreeWidgetItem, QtGui, qtreewidget.h)
+QT_CLASS_LIB(QTreeWidget, QtGui, qtreewidget.h)
+QT_CLASS_LIB(QTreeWidgetItemIterator, QtGui, qtreewidgetitemiterator.h)
+QT_CLASS_LIB(QAbstractPageSetupDialog, QtGui, qabstractpagesetupdialog.h)
+QT_CLASS_LIB(QAbstractPrintDialog, QtGui, qabstractprintdialog.h)
+QT_CLASS_LIB(QColorDialog, QtGui, qcolordialog.h)
+QT_CLASS_LIB(QDialog, QtGui, qdialog.h)
+QT_CLASS_LIB(QErrorMessage, QtGui, qerrormessage.h)
+QT_CLASS_LIB(QFileDialog, QtGui, qfiledialog.h)
+QT_CLASS_LIB(QFileSystemModel, QtGui, qfilesystemmodel.h)
+QT_CLASS_LIB(QFontDialog, QtGui, qfontdialog.h)
+QT_CLASS_LIB(QInputDialog, QtGui, qinputdialog.h)
+QT_CLASS_LIB(QMessageBox, QtGui, qmessagebox.h)
+QT_CLASS_LIB(QPageSetupDialog, QtGui, qpagesetupdialog.h)
+QT_CLASS_LIB(QUnixPrintWidget, QtGui, qprintdialog.h)
+QT_CLASS_LIB(QPrintDialog, QtGui, qprintdialog.h)
+QT_CLASS_LIB(QPrintPreviewDialog, QtGui, qprintpreviewdialog.h)
+QT_CLASS_LIB(QProgressDialog, QtGui, qprogressdialog.h)
+QT_CLASS_LIB(QWizard, QtGui, qwizard.h)
+QT_CLASS_LIB(QWizardPage, QtGui, qwizard.h)
+QT_CLASS_LIB(QBrush, QtGui, qbrush.h)
+QT_CLASS_LIB(QBrushData, QtGui, qbrush.h)
+QT_CLASS_LIB(QGradientStop, QtGui, qbrush.h)
+QT_CLASS_LIB(QGradientStops, QtGui, qbrush.h)
+QT_CLASS_LIB(QGradient, QtGui, qbrush.h)
+QT_CLASS_LIB(QLinearGradient, QtGui, qbrush.h)
+QT_CLASS_LIB(QRadialGradient, QtGui, qbrush.h)
+QT_CLASS_LIB(QConicalGradient, QtGui, qbrush.h)
+QT_CLASS_LIB(QColor, QtGui, qcolor.h)
+QT_CLASS_LIB(QColormap, QtGui, qcolormap.h)
+QT_CLASS_LIB(QTileRules, QtGui, qdrawutil.h)
+QT_CLASS_LIB(QMatrix, QtGui, qmatrix.h)
+QT_CLASS_LIB(QPaintDevice, QtGui, qpaintdevice.h)
+QT_CLASS_LIB(QTextItem, QtGui, qpaintengine.h)
+QT_CLASS_LIB(QPaintEngine, QtGui, qpaintengine.h)
+QT_CLASS_LIB(QPaintEngineState, QtGui, qpaintengine.h)
+QT_CLASS_LIB(QPainter, QtGui, qpainter.h)
+QT_CLASS_LIB(QPainterPath, QtGui, qpainterpath.h)
+QT_CLASS_LIB(QPainterPathPrivate, QtGui, qpainterpath.h)
+QT_CLASS_LIB(QPainterPathStroker, QtGui, qpainterpath.h)
+QT_CLASS_LIB(QPen, QtGui, qpen.h)
+QT_CLASS_LIB(QPolygon, QtGui, qpolygon.h)
+QT_CLASS_LIB(QPolygonF, QtGui, qpolygon.h)
+QT_CLASS_LIB(QPrintEngine, QtGui, qprintengine.h)
+QT_CLASS_LIB(QPrinter, QtGui, qprinter.h)
+QT_CLASS_LIB(QPrinterInfo, QtGui, qprinterinfo.h)
+QT_CLASS_LIB(QRegion, QtGui, qregion.h)
+QT_CLASS_LIB(QRgb, QtGui, qrgb.h)
+QT_CLASS_LIB(QStylePainter, QtGui, qstylepainter.h)
+QT_CLASS_LIB(QTransform, QtGui, qtransform.h)
+QT_CLASS_LIB(QWMatrix, QtGui, qwmatrix.h)
 QT_CLASS_LIB(QAction, QtGui, qaction.h)
 QT_CLASS_LIB(QActionGroup, QtGui, qactiongroup.h)
 QT_CLASS_LIB(QApplication, QtGui, qapplication.h)
@@ -941,152 +887,212 @@
 QT_CLASS_LIB(QX11EmbedWidget, QtGui, qx11embed_x11.h)
 QT_CLASS_LIB(QX11EmbedContainer, QtGui, qx11embed_x11.h)
 QT_CLASS_LIB(QX11Info, QtGui, qx11info_x11.h)
-QT_CLASS_LIB(QAbstractItemDelegate, QtGui, qabstractitemdelegate.h)
-QT_CLASS_LIB(QAbstractItemView, QtGui, qabstractitemview.h)
-QT_CLASS_LIB(QAbstractProxyModel, QtGui, qabstractproxymodel.h)
-QT_CLASS_LIB(QColumnView, QtGui, qcolumnview.h)
-QT_CLASS_LIB(QDataWidgetMapper, QtGui, qdatawidgetmapper.h)
-QT_CLASS_LIB(QDirModel, QtGui, qdirmodel.h)
-QT_CLASS_LIB(QFileIconProvider, QtGui, qfileiconprovider.h)
-QT_CLASS_LIB(QHeaderView, QtGui, qheaderview.h)
-QT_CLASS_LIB(QItemDelegate, QtGui, qitemdelegate.h)
-QT_CLASS_LIB(QItemEditorCreatorBase, QtGui, qitemeditorfactory.h)
-QT_CLASS_LIB(QItemEditorCreator, QtGui, qitemeditorfactory.h)
-QT_CLASS_LIB(QStandardItemEditorCreator, QtGui, qitemeditorfactory.h)
-QT_CLASS_LIB(QItemEditorFactory, QtGui, qitemeditorfactory.h)
-QT_CLASS_LIB(QItemSelectionRange, QtGui, qitemselectionmodel.h)
-QT_CLASS_LIB(QItemSelectionModel, QtGui, qitemselectionmodel.h)
-QT_CLASS_LIB(QItemSelection, QtGui, qitemselectionmodel.h)
-QT_CLASS_LIB(QListView, QtGui, qlistview.h)
-QT_CLASS_LIB(QListWidgetItem, QtGui, qlistwidget.h)
-QT_CLASS_LIB(QListWidget, QtGui, qlistwidget.h)
-QT_CLASS_LIB(QProxyModel, QtGui, qproxymodel.h)
-QT_CLASS_LIB(QSortFilterProxyModel, QtGui, qsortfilterproxymodel.h)
-QT_CLASS_LIB(QStandardItem, QtGui, qstandarditemmodel.h)
-QT_CLASS_LIB(QStandardItemModel, QtGui, qstandarditemmodel.h)
-QT_CLASS_LIB(QStringListModel, QtGui, qstringlistmodel.h)
-QT_CLASS_LIB(QStyledItemDelegate, QtGui, qstyleditemdelegate.h)
-QT_CLASS_LIB(QTableView, QtGui, qtableview.h)
-QT_CLASS_LIB(QTableWidgetSelectionRange, QtGui, qtablewidget.h)
-QT_CLASS_LIB(QTableWidgetItem, QtGui, qtablewidget.h)
-QT_CLASS_LIB(QTableWidget, QtGui, qtablewidget.h)
-QT_CLASS_LIB(QTreeView, QtGui, qtreeview.h)
-QT_CLASS_LIB(QTreeWidgetItem, QtGui, qtreewidget.h)
-QT_CLASS_LIB(QTreeWidget, QtGui, qtreewidget.h)
-QT_CLASS_LIB(QTreeWidgetItemIterator, QtGui, qtreewidgetitemiterator.h)
-QT_CLASS_LIB(QBrush, QtGui, qbrush.h)
-QT_CLASS_LIB(QBrushData, QtGui, qbrush.h)
-QT_CLASS_LIB(QGradientStop, QtGui, qbrush.h)
-QT_CLASS_LIB(QGradientStops, QtGui, qbrush.h)
-QT_CLASS_LIB(QGradient, QtGui, qbrush.h)
-QT_CLASS_LIB(QLinearGradient, QtGui, qbrush.h)
-QT_CLASS_LIB(QRadialGradient, QtGui, qbrush.h)
-QT_CLASS_LIB(QConicalGradient, QtGui, qbrush.h)
-QT_CLASS_LIB(QColor, QtGui, qcolor.h)
-QT_CLASS_LIB(QColormap, QtGui, qcolormap.h)
-QT_CLASS_LIB(QTileRules, QtGui, qdrawutil.h)
-QT_CLASS_LIB(QMatrix, QtGui, qmatrix.h)
-QT_CLASS_LIB(QPaintDevice, QtGui, qpaintdevice.h)
-QT_CLASS_LIB(QTextItem, QtGui, qpaintengine.h)
-QT_CLASS_LIB(QPaintEngine, QtGui, qpaintengine.h)
-QT_CLASS_LIB(QPaintEngineState, QtGui, qpaintengine.h)
-QT_CLASS_LIB(QPainter, QtGui, qpainter.h)
-QT_CLASS_LIB(QPainterPath, QtGui, qpainterpath.h)
-QT_CLASS_LIB(QPainterPathPrivate, QtGui, qpainterpath.h)
-QT_CLASS_LIB(QPainterPathStroker, QtGui, qpainterpath.h)
-QT_CLASS_LIB(QPen, QtGui, qpen.h)
-QT_CLASS_LIB(QPolygon, QtGui, qpolygon.h)
-QT_CLASS_LIB(QPolygonF, QtGui, qpolygon.h)
-QT_CLASS_LIB(QPrintEngine, QtGui, qprintengine.h)
-QT_CLASS_LIB(QPrinter, QtGui, qprinter.h)
-QT_CLASS_LIB(QPrinterInfo, QtGui, qprinterinfo.h)
-QT_CLASS_LIB(QRegion, QtGui, qregion.h)
-QT_CLASS_LIB(QRgb, QtGui, qrgb.h)
-QT_CLASS_LIB(QStylePainter, QtGui, qstylepainter.h)
-QT_CLASS_LIB(QTransform, QtGui, qtransform.h)
-QT_CLASS_LIB(QWMatrix, QtGui, qwmatrix.h)
-QT_CLASS_LIB(QSymbianEvent, QtGui, qsymbianevent.h)
-QT_CLASS_LIB(QCDEStyle, QtGui, qcdestyle.h)
-QT_CLASS_LIB(QCleanlooksStyle, QtGui, qcleanlooksstyle.h)
-QT_CLASS_LIB(QCommonStyle, QtGui, qcommonstyle.h)
-QT_CLASS_LIB(QGtkStyle, QtGui, qgtkstyle.h)
-QT_CLASS_LIB(QMacStyle, QtGui, qmacstyle_mac.h)
-QT_CLASS_LIB(QMotifStyle, QtGui, qmotifstyle.h)
-QT_CLASS_LIB(QPlastiqueStyle, QtGui, qplastiquestyle.h)
-QT_CLASS_LIB(QProxyStyle, QtGui, qproxystyle.h)
-QT_CLASS_LIB(QS60Style, QtGui, qs60style.h)
-QT_CLASS_LIB(QStyle, QtGui, qstyle.h)
-QT_CLASS_LIB(QStyleFactory, QtGui, qstylefactory.h)
-QT_CLASS_LIB(QStyleOption, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionFocusRect, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionFrame, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionFrameV2, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionFrameV3, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionTabWidgetFrame, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionTabWidgetFrameV2, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionTabBarBase, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionTabBarBaseV2, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionHeader, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionButton, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionTab, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionTabV2, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionTabV3, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionToolBar, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionProgressBar, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionProgressBarV2, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionMenuItem, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionQ3ListViewItem, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionQ3DockWindow, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionDockWidget, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionDockWidgetV2, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionViewItem, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionViewItemV2, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionViewItemV3, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionViewItemV4, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionToolBox, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionToolBoxV2, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionRubberBand, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionComplex, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionSlider, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionSpinBox, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionQ3ListView, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionToolButton, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionComboBox, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionTitleBar, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionGroupBox, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionSizeGrip, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleOptionGraphicsItem, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleHintReturn, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleHintReturnMask, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleHintReturnVariant, QtGui, qstyleoption.h)
-QT_CLASS_LIB(QStyleFactoryInterface, QtGui, qstyleplugin.h)
-QT_CLASS_LIB(QStylePlugin, QtGui, qstyleplugin.h)
-QT_CLASS_LIB(QWindowsCEStyle, QtGui, qwindowscestyle.h)
-QT_CLASS_LIB(QWindowsMobileStyle, QtGui, qwindowsmobilestyle.h)
-QT_CLASS_LIB(QWindowsStyle, QtGui, qwindowsstyle.h)
-QT_CLASS_LIB(QWindowsVistaStyle, QtGui, qwindowsvistastyle.h)
-QT_CLASS_LIB(QWindowsXPStyle, QtGui, qwindowsxpstyle.h)
-QT_CLASS_LIB(QKeyEventTransition, QtGui, qkeyeventtransition.h)
-QT_CLASS_LIB(QMouseEventTransition, QtGui, qmouseeventtransition.h)
+QT_CLASS_LIB(QS60MainApplication, QtGui, qs60mainapplication.h)
+QT_CLASS_LIB(QS60MainAppUi, QtGui, qs60mainappui.h)
+QT_CLASS_LIB(QS60MainDocument, QtGui, qs60maindocument.h)
 QT_CLASS_LIB(QGraphicsEffect, QtGui, qgraphicseffect.h)
 QT_CLASS_LIB(QGraphicsColorizeEffect, QtGui, qgraphicseffect.h)
 QT_CLASS_LIB(QGraphicsBlurEffect, QtGui, qgraphicseffect.h)
 QT_CLASS_LIB(QGraphicsDropShadowEffect, QtGui, qgraphicseffect.h)
 QT_CLASS_LIB(QGraphicsOpacityEffect, QtGui, qgraphicseffect.h)
-QT_CLASS_LIB(QCompleter, QtGui, qcompleter.h)
-QT_CLASS_LIB(QDesktopServices, QtGui, qdesktopservices.h)
-QT_CLASS_LIB(QSystemTrayIcon, QtGui, qsystemtrayicon.h)
-QT_CLASS_LIB(QUndoGroup, QtGui, qundogroup.h)
-QT_CLASS_LIB(QUndoCommand, QtGui, qundostack.h)
-QT_CLASS_LIB(QUndoStack, QtGui, qundostack.h)
-QT_CLASS_LIB(QUndoView, QtGui, qundoview.h)
+QT_CLASS_LIB(QFontEngineInfo, QtGui, qabstractfontengine_qws.h)
+QT_CLASS_LIB(QFontEngineFactoryInterface, QtGui, qabstractfontengine_qws.h)
+QT_CLASS_LIB(QFontEnginePlugin, QtGui, qabstractfontengine_qws.h)
+QT_CLASS_LIB(QAbstractFontEngine, QtGui, qabstractfontengine_qws.h)
+QT_CLASS_LIB(QAbstractTextDocumentLayout, QtGui, qabstracttextdocumentlayout.h)
+QT_CLASS_LIB(QTextObjectInterface, QtGui, qabstracttextdocumentlayout.h)
+QT_CLASS_LIB(QFont, QtGui, qfont.h)
+QT_CLASS_LIB(QFontDatabase, QtGui, qfontdatabase.h)
+QT_CLASS_LIB(QFontInfo, QtGui, qfontinfo.h)
+QT_CLASS_LIB(QFontMetrics, QtGui, qfontmetrics.h)
+QT_CLASS_LIB(QFontMetricsF, QtGui, qfontmetrics.h)
+QT_CLASS_LIB(QSyntaxHighlighter, QtGui, qsyntaxhighlighter.h)
+QT_CLASS_LIB(QTextCursor, QtGui, qtextcursor.h)
+QT_CLASS_LIB(QAbstractUndoItem, QtGui, qtextdocument.h)
+QT_CLASS_LIB(QTextDocument, QtGui, qtextdocument.h)
+QT_CLASS_LIB(QTextDocumentFragment, QtGui, qtextdocumentfragment.h)
+QT_CLASS_LIB(QTextDocumentWriter, QtGui, qtextdocumentwriter.h)
+QT_CLASS_LIB(QTextLength, QtGui, qtextformat.h)
+QT_CLASS_LIB(QTextFormat, QtGui, qtextformat.h)
+QT_CLASS_LIB(QTextCharFormat, QtGui, qtextformat.h)
+QT_CLASS_LIB(QTextBlockFormat, QtGui, qtextformat.h)
+QT_CLASS_LIB(QTextListFormat, QtGui, qtextformat.h)
+QT_CLASS_LIB(QTextImageFormat, QtGui, qtextformat.h)
+QT_CLASS_LIB(QTextFrameFormat, QtGui, qtextformat.h)
+QT_CLASS_LIB(QTextTableFormat, QtGui, qtextformat.h)
+QT_CLASS_LIB(QTextTableCellFormat, QtGui, qtextformat.h)
+QT_CLASS_LIB(QTextInlineObject, QtGui, qtextlayout.h)
+QT_CLASS_LIB(QTextLayout, QtGui, qtextlayout.h)
+QT_CLASS_LIB(QTextLine, QtGui, qtextlayout.h)
+QT_CLASS_LIB(QTextList, QtGui, qtextlist.h)
+QT_CLASS_LIB(QTextObject, QtGui, qtextobject.h)
+QT_CLASS_LIB(QTextBlockGroup, QtGui, qtextobject.h)
+QT_CLASS_LIB(QTextFrameLayoutData, QtGui, qtextobject.h)
+QT_CLASS_LIB(QTextFrame, QtGui, qtextobject.h)
+QT_CLASS_LIB(QTextBlockUserData, QtGui, qtextobject.h)
+QT_CLASS_LIB(QTextBlock, QtGui, qtextobject.h)
+QT_CLASS_LIB(QTextFragment, QtGui, qtextobject.h)
+QT_CLASS_LIB(QTextOption, QtGui, qtextoption.h)
+QT_CLASS_LIB(QTextTableCell, QtGui, qtexttable.h)
+QT_CLASS_LIB(QTextTable, QtGui, qtexttable.h)
+QT_CLASS_LIB(QCopChannel, QtGui, qcopchannel_qws.h)
+QT_CLASS_LIB(QDecorationAction, QtGui, qdecoration_qws.h)
+QT_CLASS_LIB(QDecoration, QtGui, qdecoration_qws.h)
+QT_CLASS_LIB(QDecorationDefault, QtGui, qdecorationdefault_qws.h)
+QT_CLASS_LIB(QDecorationFactory, QtGui, qdecorationfactory_qws.h)
+QT_CLASS_LIB(QDecorationFactoryInterface, QtGui, qdecorationplugin_qws.h)
+QT_CLASS_LIB(QDecorationPlugin, QtGui, qdecorationplugin_qws.h)
+QT_CLASS_LIB(QDecorationStyled, QtGui, qdecorationstyled_qws.h)
+QT_CLASS_LIB(QDecorationWindows, QtGui, qdecorationwindows_qws.h)
+QT_CLASS_LIB(QDirectPainter, QtGui, qdirectpainter_qws.h)
+QT_CLASS_LIB(QWSKeyboardHandler, QtGui, qkbd_qws.h)
+QT_CLASS_LIB(QKbdDriverFactory, QtGui, qkbddriverfactory_qws.h)
+QT_CLASS_LIB(QWSKeyboardHandlerFactoryInterface, QtGui, qkbddriverplugin_qws.h)
+QT_CLASS_LIB(QKbdDriverPlugin, QtGui, qkbddriverplugin_qws.h)
+QT_CLASS_LIB(QWSLinuxInputKeyboardHandler, QtGui, qkbdlinuxinput_qws.h)
+QT_CLASS_LIB(QWSQnxKeyboardHandler, QtGui, qkbdqnx_qws.h)
+QT_CLASS_LIB(QWSTtyKeyboardHandler, QtGui, qkbdtty_qws.h)
+QT_CLASS_LIB(QWSUmKeyboardHandler, QtGui, qkbdum_qws.h)
+QT_CLASS_LIB(QVFbKeyboardHandler, QtGui, qkbdvfb_qws.h)
+QT_CLASS_LIB(QWSPointerCalibrationData, QtGui, qmouse_qws.h)
+QT_CLASS_LIB(QWSMouseHandler, QtGui, qmouse_qws.h)
+QT_CLASS_LIB(QWSCalibratedMouseHandler, QtGui, qmouse_qws.h)
+QT_CLASS_LIB(QMouseDriverFactory, QtGui, qmousedriverfactory_qws.h)
+QT_CLASS_LIB(QWSMouseHandlerFactoryInterface, QtGui, qmousedriverplugin_qws.h)
+QT_CLASS_LIB(QMouseDriverPlugin, QtGui, qmousedriverplugin_qws.h)
+QT_CLASS_LIB(QWSLinuxInputMouseHandler, QtGui, qmouselinuxinput_qws.h)
+QT_CLASS_LIB(QWSLinuxTPMouseHandler, QtGui, qmouselinuxtp_qws.h)
+QT_CLASS_LIB(QWSPcMouseHandler, QtGui, qmousepc_qws.h)
+QT_CLASS_LIB(QQnxMouseHandler, QtGui, qmouseqnx_qws.h)
+QT_CLASS_LIB(QWSTslibMouseHandler, QtGui, qmousetslib_qws.h)
+QT_CLASS_LIB(QVFbMouseHandler, QtGui, qmousevfb_qws.h)
+QT_CLASS_LIB(QScreenCursor, QtGui, qscreen_qws.h)
+QT_CLASS_LIB(QPoolEntry, QtGui, qscreen_qws.h)
+QT_CLASS_LIB(QScreen, QtGui, qscreen_qws.h)
+QT_CLASS_LIB(QScreenDriverFactory, QtGui, qscreendriverfactory_qws.h)
+QT_CLASS_LIB(QScreenDriverFactoryInterface, QtGui, qscreendriverplugin_qws.h)
+QT_CLASS_LIB(QScreenDriverPlugin, QtGui, qscreendriverplugin_qws.h)
+QT_CLASS_LIB(QLinuxFb_Shared, QtGui, qscreenlinuxfb_qws.h)
+QT_CLASS_LIB(QLinuxFbScreen, QtGui, qscreenlinuxfb_qws.h)
+QT_CLASS_LIB(QProxyScreenCursor, QtGui, qscreenproxy_qws.h)
+QT_CLASS_LIB(QProxyScreen, QtGui, qscreenproxy_qws.h)
+QT_CLASS_LIB(QQnxScreen, QtGui, qscreenqnx_qws.h)
+QT_CLASS_LIB(QTransformedScreen, QtGui, qscreentransformed_qws.h)
+QT_CLASS_LIB(QVFbScreen, QtGui, qscreenvfb_qws.h)
+QT_CLASS_LIB(QWSSoundServer, QtGui, qsoundqss_qws.h)
+QT_CLASS_LIB(QWSSoundClient, QtGui, qsoundqss_qws.h)
+QT_CLASS_LIB(QWSSoundServerSocket, QtGui, qsoundqss_qws.h)
+QT_CLASS_LIB(QTransportAuth, QtGui, qtransportauth_qws.h)
+QT_CLASS_LIB(QAuthDevice, QtGui, qtransportauth_qws.h)
+QT_CLASS_LIB(QVFbHeader, QtGui, qvfbhdr.h)
+QT_CLASS_LIB(QVFbKeyData, QtGui, qvfbhdr.h)
+QT_CLASS_LIB(QWSInternalWindowInfo, QtGui, qwindowsystem_qws.h)
+QT_CLASS_LIB(QWSScreenSaver, QtGui, qwindowsystem_qws.h)
+QT_CLASS_LIB(QWSWindow, QtGui, qwindowsystem_qws.h)
+QT_CLASS_LIB(QWSSoundServer, QtGui, qwindowsystem_qws.h)
+QT_CLASS_LIB(QWSServer, QtGui, qwindowsystem_qws.h)
+QT_CLASS_LIB(QWSInputMethod, QtGui, qwindowsystem_qws.h)
+QT_CLASS_LIB(QWSCursorMap, QtGui, qwindowsystem_qws.h)
+QT_CLASS_LIB(QWSClient, QtGui, qwindowsystem_qws.h)
+QT_CLASS_LIB(QWSCursor, QtGui, qwscursor_qws.h)
+QT_CLASS_LIB(QWSWindowInfo, QtGui, qwsdisplay_qws.h)
+QT_CLASS_LIB(QWSDisplay, QtGui, qwsdisplay_qws.h)
+QT_CLASS_LIB(QWSEmbedWidget, QtGui, qwsembedwidget.h)
+QT_CLASS_LIB(QWSEvent, QtGui, qwsevent_qws.h)
+QT_CLASS_LIB(QWSManager, QtGui, qwsmanager_qws.h)
+QT_CLASS_LIB(QWSPropertyManager, QtGui, qwsproperty_qws.h)
+QT_CLASS_LIB(QWSProtocolItem, QtGui, qwsprotocolitem_qws.h)
+QT_CLASS_LIB(QWSSocket, QtGui, qwssocket_qws.h)
+QT_CLASS_LIB(QWSServerSocket, QtGui, qwssocket_qws.h)
+QT_CLASS_LIB(QBitmap, QtGui, qbitmap.h)
+QT_CLASS_LIB(QIcon, QtGui, qicon.h)
+QT_CLASS_LIB(QIconSet, QtGui, qicon.h)
+QT_CLASS_LIB(QIconEngine, QtGui, qiconengine.h)
+QT_CLASS_LIB(QIconEngineV2, QtGui, qiconengine.h)
+QT_CLASS_LIB(QIconEngineFactoryInterface, QtGui, qiconengineplugin.h)
+QT_CLASS_LIB(QIconEnginePlugin, QtGui, qiconengineplugin.h)
+QT_CLASS_LIB(QIconEngineFactoryInterfaceV2, QtGui, qiconengineplugin.h)
+QT_CLASS_LIB(QIconEnginePluginV2, QtGui, qiconengineplugin.h)
+QT_CLASS_LIB(QImageTextKeyLang, QtGui, qimage.h)
+QT_CLASS_LIB(QImage, QtGui, qimage.h)
+QT_CLASS_LIB(QImageIOHandler, QtGui, qimageiohandler.h)
+QT_CLASS_LIB(QImageIOHandlerFactoryInterface, QtGui, qimageiohandler.h)
+QT_CLASS_LIB(QImageIOPlugin, QtGui, qimageiohandler.h)
+QT_CLASS_LIB(QImageReader, QtGui, qimagereader.h)
+QT_CLASS_LIB(QImageWriter, QtGui, qimagewriter.h)
+QT_CLASS_LIB(QMovie, QtGui, qmovie.h)
+QT_CLASS_LIB(QPicture, QtGui, qpicture.h)
+QT_CLASS_LIB(QPictureIO, QtGui, qpicture.h)
+QT_CLASS_LIB(QPictureFormatInterface, QtGui, qpictureformatplugin.h)
+QT_CLASS_LIB(QPictureFormatPlugin, QtGui, qpictureformatplugin.h)
+QT_CLASS_LIB(QPixmap, QtGui, qpixmap.h)
+QT_CLASS_LIB(QPixmapCache, QtGui, qpixmapcache.h)
+QT_CLASS_LIB(QGraphicsAnchor, QtGui, qgraphicsanchorlayout.h)
+QT_CLASS_LIB(QGraphicsAnchorLayout, QtGui, qgraphicsanchorlayout.h)
+QT_CLASS_LIB(QGraphicsGridLayout, QtGui, qgraphicsgridlayout.h)
+QT_CLASS_LIB(QGraphicsItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsObject, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QAbstractGraphicsShapeItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsPathItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsRectItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsEllipseItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsPolygonItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsLineItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsPixmapItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsTextItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsSimpleTextItem, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsItemGroup, QtGui, qgraphicsitem.h)
+QT_CLASS_LIB(QGraphicsItemAnimation, QtGui, qgraphicsitemanimation.h)
+QT_CLASS_LIB(QGraphicsLayout, QtGui, qgraphicslayout.h)
+QT_CLASS_LIB(QGraphicsLayoutItem, QtGui, qgraphicslayoutitem.h)
+QT_CLASS_LIB(QGraphicsLinearLayout, QtGui, qgraphicslinearlayout.h)
+QT_CLASS_LIB(QGraphicsProxyWidget, QtGui, qgraphicsproxywidget.h)
+QT_CLASS_LIB(QGraphicsScene, QtGui, qgraphicsscene.h)
+QT_CLASS_LIB(QGraphicsSceneEvent, QtGui, qgraphicssceneevent.h)
+QT_CLASS_LIB(QGraphicsSceneMouseEvent, QtGui, qgraphicssceneevent.h)
+QT_CLASS_LIB(QGraphicsSceneWheelEvent, QtGui, qgraphicssceneevent.h)
+QT_CLASS_LIB(QGraphicsSceneContextMenuEvent, QtGui, qgraphicssceneevent.h)
+QT_CLASS_LIB(QGraphicsSceneHoverEvent, QtGui, qgraphicssceneevent.h)
+QT_CLASS_LIB(QGraphicsSceneHelpEvent, QtGui, qgraphicssceneevent.h)
+QT_CLASS_LIB(QGraphicsSceneDragDropEvent, QtGui, qgraphicssceneevent.h)
+QT_CLASS_LIB(QGraphicsSceneResizeEvent, QtGui, qgraphicssceneevent.h)
+QT_CLASS_LIB(QGraphicsSceneMoveEvent, QtGui, qgraphicssceneevent.h)
+QT_CLASS_LIB(QGraphicsTransform, QtGui, qgraphicstransform.h)
+QT_CLASS_LIB(QGraphicsScale, QtGui, qgraphicstransform.h)
+QT_CLASS_LIB(QGraphicsRotation, QtGui, qgraphicstransform.h)
+QT_CLASS_LIB(QGraphicsView, QtGui, qgraphicsview.h)
+QT_CLASS_LIB(QGraphicsWidget, QtGui, qgraphicswidget.h)
+QT_CLASS_LIB(QGenericMatrix, QtGui, qgenericmatrix.h)
+QT_CLASS_LIB(QMatrix2x2, QtGui, qgenericmatrix.h)
+QT_CLASS_LIB(QMatrix2x3, QtGui, qgenericmatrix.h)
+QT_CLASS_LIB(QMatrix2x4, QtGui, qgenericmatrix.h)
+QT_CLASS_LIB(QMatrix3x2, QtGui, qgenericmatrix.h)
+QT_CLASS_LIB(QMatrix3x3, QtGui, qgenericmatrix.h)
+QT_CLASS_LIB(QMatrix3x4, QtGui, qgenericmatrix.h)
+QT_CLASS_LIB(QMatrix4x2, QtGui, qgenericmatrix.h)
+QT_CLASS_LIB(QMatrix4x3, QtGui, qgenericmatrix.h)
+QT_CLASS_LIB(QMatrix4x4, QtGui, qmatrix4x4.h)
+QT_CLASS_LIB(QQuaternion, QtGui, qquaternion.h)
+QT_CLASS_LIB(QVector2D, QtGui, qvector2d.h)
+QT_CLASS_LIB(QVector3D, QtGui, qvector3d.h)
+QT_CLASS_LIB(QVector4D, QtGui, qvector4d.h)
+QT_CLASS_LIB(QInputContext, QtGui, qinputcontext.h)
+QT_CLASS_LIB(QInputContextFactory, QtGui, qinputcontextfactory.h)
+QT_CLASS_LIB(QInputContextFactoryInterface, QtGui, qinputcontextplugin.h)
+QT_CLASS_LIB(QInputContextPlugin, QtGui, qinputcontextplugin.h)
 QT_CLASS_LIB(QScriptEngineDebugger, QtScriptTools, qscriptenginedebugger.h)
 QT_CLASS_LIB(QUiLoader, QtUiTools, quiloader.h)
-QT_CLASS_LIB(QDesignerComponents, QtDesigner, qdesigner_components.h)
 QT_CLASS_LIB(QExtensionFactory, QtDesigner, default_extensionfactory.h)
 QT_CLASS_LIB(QAbstractExtensionFactory, QtDesigner, extension.h)
 QT_CLASS_LIB(QAbstractExtensionManager, QtDesigner, extension.h)
 QT_CLASS_LIB(QExtensionManager, QtDesigner, qextensionmanager.h)
+QT_CLASS_LIB(QAbstractFormBuilder, QtDesigner, abstractformbuilder.h)
+QT_CLASS_LIB(QDesignerContainerExtension, QtDesigner, container.h)
+QT_CLASS_LIB(QDesignerCustomWidgetInterface, QtDesigner, customwidget.h)
+QT_CLASS_LIB(QDesignerCustomWidgetCollectionInterface, QtDesigner, customwidget.h)
+QT_CLASS_LIB(QFormBuilder, QtDesigner, formbuilder.h)
+QT_CLASS_LIB(QDesignerExportWidget, QtDesigner, qdesignerexportwidget.h)
+QT_CLASS_LIB(QDesignerComponents, QtDesigner, qdesigner_components.h)
 QT_CLASS_LIB(QDesignerActionEditorInterface, QtDesigner, abstractactioneditor.h)
 QT_CLASS_LIB(QDesignerBrushManagerInterface, QtDesigner, abstractbrushmanager.h)
 QT_CLASS_LIB(QDesignerDnDItemInterface, QtDesigner, abstractdnditem.h)
@@ -1115,16 +1121,12 @@
 QT_CLASS_LIB(QDesignerMemberSheetExtension, QtDesigner, membersheet.h)
 QT_CLASS_LIB(QDesignerPropertySheetExtension, QtDesigner, propertysheet.h)
 QT_CLASS_LIB(QDesignerTaskMenuExtension, QtDesigner, taskmenu.h)
-QT_CLASS_LIB(QAbstractFormBuilder, QtDesigner, abstractformbuilder.h)
-QT_CLASS_LIB(QDesignerContainerExtension, QtDesigner, container.h)
-QT_CLASS_LIB(QDesignerCustomWidgetInterface, QtDesigner, customwidget.h)
-QT_CLASS_LIB(QDesignerCustomWidgetCollectionInterface, QtDesigner, customwidget.h)
-QT_CLASS_LIB(QFormBuilder, QtDesigner, formbuilder.h)
-QT_CLASS_LIB(QDesignerExportWidget, QtDesigner, qdesignerexportwidget.h)
 QT_CLASS_LIB(Phonon::AbstractAudioOutput, phonon, abstractaudiooutput.h)
 QT_CLASS_LIB(Phonon::AbstractMediaStream, phonon, abstractmediastream.h)
 QT_CLASS_LIB(Phonon::AbstractVideoOutput, phonon, abstractvideooutput.h)
 QT_CLASS_LIB(Phonon::AddonInterface, phonon, addoninterface.h)
+QT_CLASS_LIB(Phonon::AudioDataOutput, phonon, audiodataoutput.h)
+QT_CLASS_LIB(Phonon::AudioDataOutputInterface, phonon, audiodataoutputinterface.h)
 QT_CLASS_LIB(Phonon::AudioOutput, phonon, audiooutput.h)
 QT_CLASS_LIB(Phonon::AudioOutputInterface40, phonon, audiooutputinterface.h)
 QT_CLASS_LIB(Phonon::AudioOutputInterface42, phonon, audiooutputinterface.h)
@@ -1136,6 +1138,7 @@
 QT_CLASS_LIB(Phonon::EffectInterface, phonon, effectinterface.h)
 QT_CLASS_LIB(Phonon::EffectParameter, phonon, effectparameter.h)
 QT_CLASS_LIB(Phonon::EffectWidget, phonon, effectwidget.h)
+QT_CLASS_LIB(Phonon::GlobalConfig, phonon, globalconfig.h)
 QT_CLASS_LIB(Phonon::MediaController, phonon, mediacontroller.h)
 QT_CLASS_LIB(Phonon::MediaNode, phonon, medianode.h)
 QT_CLASS_LIB(Phonon::MediaObject, phonon, mediaobject.h)
@@ -1158,11 +1161,15 @@
 QT_CLASS_LIB(Phonon::Path, phonon, path.h)
 QT_CLASS_LIB(Phonon::Global, phonon, phononnamespace.h)
 QT_CLASS_LIB(Phonon::PlatformPlugin, phonon, platformplugin.h)
+QT_CLASS_LIB(Phonon::PulseSupport, phonon, pulsesupport.h)
 QT_CLASS_LIB(Phonon::SeekSlider, phonon, seekslider.h)
 QT_CLASS_LIB(Phonon::StreamInterface, phonon, streaminterface.h)
 QT_CLASS_LIB(Phonon::VideoPlayer, phonon, videoplayer.h)
 QT_CLASS_LIB(Phonon::VideoWidget, phonon, videowidget.h)
 QT_CLASS_LIB(Phonon::VideoWidgetInterface, phonon, videowidgetinterface.h)
+QT_CLASS_LIB(Phonon::VideoWidgetInterface44, phonon, videowidgetinterface.h)
+QT_CLASS_LIB(Phonon::VideoWidgetInterfaceLatest, phonon, videowidgetinterface.h)
+QT_CLASS_LIB(Phonon::VideoWidgetInterfaceLatest, phonon, videowidgetinterface.h)
 QT_CLASS_LIB(Phonon::VolumeFaderEffect, phonon, volumefadereffect.h)
 QT_CLASS_LIB(Phonon::VolumeFaderInterface, phonon, volumefaderinterface.h)
 QT_CLASS_LIB(Phonon::VolumeSlider, phonon, volumeslider.h)
@@ -1202,6 +1209,62 @@
 QT_CLASS_LIB(Q3VGroupBox, Qt3Support, q3vgroupbox.h)
 QT_CLASS_LIB(Q3WhatsThis, Qt3Support, q3whatsthis.h)
 QT_CLASS_LIB(Q3WidgetStack, Qt3Support, q3widgetstack.h)
+QT_CLASS_LIB(Q3CanvasItemList, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasItem, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3Canvas, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasView, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasPixmap, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasPixmapArray, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasSprite, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasPolygonalItem, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasRectangle, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasPolygon, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasSpline, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasLine, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasEllipse, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3CanvasText, Qt3Support, q3canvas.h)
+QT_CLASS_LIB(Q3IconDragItem, Qt3Support, q3iconview.h)
+QT_CLASS_LIB(Q3IconDrag, Qt3Support, q3iconview.h)
+QT_CLASS_LIB(Q3IconViewItem, Qt3Support, q3iconview.h)
+QT_CLASS_LIB(Q3IconView, Qt3Support, q3iconview.h)
+QT_CLASS_LIB(Q3ListBox, Qt3Support, q3listbox.h)
+QT_CLASS_LIB(Q3ListBoxItem, Qt3Support, q3listbox.h)
+QT_CLASS_LIB(Q3ListBoxText, Qt3Support, q3listbox.h)
+QT_CLASS_LIB(Q3ListBoxPixmap, Qt3Support, q3listbox.h)
+QT_CLASS_LIB(Q3ListViewItem, Qt3Support, q3listview.h)
+QT_CLASS_LIB(Q3ListView, Qt3Support, q3listview.h)
+QT_CLASS_LIB(Q3CheckListItem, Qt3Support, q3listview.h)
+QT_CLASS_LIB(Q3ListViewItemIterator, Qt3Support, q3listview.h)
+QT_CLASS_LIB(Q3TableSelection, Qt3Support, q3table.h)
+QT_CLASS_LIB(Q3TableItem, Qt3Support, q3table.h)
+QT_CLASS_LIB(Q3ComboTableItem, Qt3Support, q3table.h)
+QT_CLASS_LIB(Q3CheckTableItem, Qt3Support, q3table.h)
+QT_CLASS_LIB(Q3Table, Qt3Support, q3table.h)
+QT_CLASS_LIB(Q3Accel, Qt3Support, q3accel.h)
+QT_CLASS_LIB(Q3BoxLayout, Qt3Support, q3boxlayout.h)
+QT_CLASS_LIB(Q3HBoxLayout, Qt3Support, q3boxlayout.h)
+QT_CLASS_LIB(Q3VBoxLayout, Qt3Support, q3boxlayout.h)
+QT_CLASS_LIB(Q3DragObject, Qt3Support, q3dragobject.h)
+QT_CLASS_LIB(Q3StoredDrag, Qt3Support, q3dragobject.h)
+QT_CLASS_LIB(Q3TextDrag, Qt3Support, q3dragobject.h)
+QT_CLASS_LIB(Q3ImageDrag, Qt3Support, q3dragobject.h)
+QT_CLASS_LIB(Q3UriDrag, Qt3Support, q3dragobject.h)
+QT_CLASS_LIB(Q3ColorDrag, Qt3Support, q3dragobject.h)
+QT_CLASS_LIB(Q3DropSite, Qt3Support, q3dropsite.h)
+QT_CLASS_LIB(Q3GridLayout, Qt3Support, q3gridlayout.h)
+QT_CLASS_LIB(Q3MimeSourceFactory, Qt3Support, q3mimefactory.h)
+QT_CLASS_LIB(Q3PolygonScanner, Qt3Support, q3polygonscanner.h)
+QT_CLASS_LIB(Q3Process, Qt3Support, q3process.h)
+QT_CLASS_LIB(Q3FileIconProvider, Qt3Support, q3filedialog.h)
+QT_CLASS_LIB(Q3FilePreview, Qt3Support, q3filedialog.h)
+QT_CLASS_LIB(Q3FileDialog, Qt3Support, q3filedialog.h)
+QT_CLASS_LIB(Q3ProgressDialog, Qt3Support, q3progressdialog.h)
+QT_CLASS_LIB(Q3TabDialog, Qt3Support, q3tabdialog.h)
+QT_CLASS_LIB(Q3Wizard, Qt3Support, q3wizard.h)
+QT_CLASS_LIB(Q3PaintDeviceMetrics, Qt3Support, q3paintdevicemetrics.h)
+QT_CLASS_LIB(Q3Painter, Qt3Support, q3painter.h)
+QT_CLASS_LIB(Q3Picture, Qt3Support, q3picture.h)
+QT_CLASS_LIB(Q3PointArray, Qt3Support, q3pointarray.h)
 QT_CLASS_LIB(Q3DataBrowser, Qt3Support, q3databrowser.h)
 QT_CLASS_LIB(Q3DataTable, Qt3Support, q3datatable.h)
 QT_CLASS_LIB(Q3DataView, Qt3Support, q3dataview.h)
@@ -1243,27 +1306,6 @@
 QT_CLASS_LIB(Q3TextStream, Qt3Support, q3textstream.h)
 QT_CLASS_LIB(Q3TSFUNC, Qt3Support, q3textstream.h)
 QT_CLASS_LIB(Q3TextView, Qt3Support, q3textview.h)
-QT_CLASS_LIB(Q3FileIconProvider, Qt3Support, q3filedialog.h)
-QT_CLASS_LIB(Q3FilePreview, Qt3Support, q3filedialog.h)
-QT_CLASS_LIB(Q3FileDialog, Qt3Support, q3filedialog.h)
-QT_CLASS_LIB(Q3ProgressDialog, Qt3Support, q3progressdialog.h)
-QT_CLASS_LIB(Q3TabDialog, Qt3Support, q3tabdialog.h)
-QT_CLASS_LIB(Q3Wizard, Qt3Support, q3wizard.h)
-QT_CLASS_LIB(Q3Accel, Qt3Support, q3accel.h)
-QT_CLASS_LIB(Q3BoxLayout, Qt3Support, q3boxlayout.h)
-QT_CLASS_LIB(Q3HBoxLayout, Qt3Support, q3boxlayout.h)
-QT_CLASS_LIB(Q3VBoxLayout, Qt3Support, q3boxlayout.h)
-QT_CLASS_LIB(Q3DragObject, Qt3Support, q3dragobject.h)
-QT_CLASS_LIB(Q3StoredDrag, Qt3Support, q3dragobject.h)
-QT_CLASS_LIB(Q3TextDrag, Qt3Support, q3dragobject.h)
-QT_CLASS_LIB(Q3ImageDrag, Qt3Support, q3dragobject.h)
-QT_CLASS_LIB(Q3UriDrag, Qt3Support, q3dragobject.h)
-QT_CLASS_LIB(Q3ColorDrag, Qt3Support, q3dragobject.h)
-QT_CLASS_LIB(Q3DropSite, Qt3Support, q3dropsite.h)
-QT_CLASS_LIB(Q3GridLayout, Qt3Support, q3gridlayout.h)
-QT_CLASS_LIB(Q3MimeSourceFactory, Qt3Support, q3mimefactory.h)
-QT_CLASS_LIB(Q3PolygonScanner, Qt3Support, q3polygonscanner.h)
-QT_CLASS_LIB(Q3Process, Qt3Support, q3process.h)
 QT_CLASS_LIB(Q3AsciiCache, Qt3Support, q3asciicache.h)
 QT_CLASS_LIB(Q3AsciiCacheIterator, Qt3Support, q3asciicache.h)
 QT_CLASS_LIB(Q3AsciiDict, Qt3Support, q3asciidict.h)
@@ -1321,38 +1363,3 @@
 QT_CLASS_LIB(Q3ValueList, Qt3Support, q3valuelist.h)
 QT_CLASS_LIB(Q3ValueStack, Qt3Support, q3valuestack.h)
 QT_CLASS_LIB(Q3ValueVector, Qt3Support, q3valuevector.h)
-QT_CLASS_LIB(Q3IconDragItem, Qt3Support, q3iconview.h)
-QT_CLASS_LIB(Q3IconDrag, Qt3Support, q3iconview.h)
-QT_CLASS_LIB(Q3IconViewItem, Qt3Support, q3iconview.h)
-QT_CLASS_LIB(Q3IconView, Qt3Support, q3iconview.h)
-QT_CLASS_LIB(Q3ListBox, Qt3Support, q3listbox.h)
-QT_CLASS_LIB(Q3ListBoxItem, Qt3Support, q3listbox.h)
-QT_CLASS_LIB(Q3ListBoxText, Qt3Support, q3listbox.h)
-QT_CLASS_LIB(Q3ListBoxPixmap, Qt3Support, q3listbox.h)
-QT_CLASS_LIB(Q3ListViewItem, Qt3Support, q3listview.h)
-QT_CLASS_LIB(Q3ListView, Qt3Support, q3listview.h)
-QT_CLASS_LIB(Q3CheckListItem, Qt3Support, q3listview.h)
-QT_CLASS_LIB(Q3ListViewItemIterator, Qt3Support, q3listview.h)
-QT_CLASS_LIB(Q3TableSelection, Qt3Support, q3table.h)
-QT_CLASS_LIB(Q3TableItem, Qt3Support, q3table.h)
-QT_CLASS_LIB(Q3ComboTableItem, Qt3Support, q3table.h)
-QT_CLASS_LIB(Q3CheckTableItem, Qt3Support, q3table.h)
-QT_CLASS_LIB(Q3Table, Qt3Support, q3table.h)
-QT_CLASS_LIB(Q3PaintDeviceMetrics, Qt3Support, q3paintdevicemetrics.h)
-QT_CLASS_LIB(Q3Painter, Qt3Support, q3painter.h)
-QT_CLASS_LIB(Q3Picture, Qt3Support, q3picture.h)
-QT_CLASS_LIB(Q3PointArray, Qt3Support, q3pointarray.h)
-QT_CLASS_LIB(Q3CanvasItemList, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasItem, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3Canvas, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasView, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasPixmap, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasPixmapArray, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasSprite, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasPolygonalItem, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasRectangle, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasPolygon, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasSpline, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasLine, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasEllipse, Qt3Support, q3canvas.h)
-QT_CLASS_LIB(Q3CanvasText, Qt3Support, q3canvas.h)
